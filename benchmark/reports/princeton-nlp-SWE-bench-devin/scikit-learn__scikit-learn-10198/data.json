{
  "instance_id": "scikit-learn__scikit-learn-10198",
  "model_patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\nindex 4bd11012b..0d5fba14b 100644\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -639,6 +639,34 @@ class OneHotEncoder(_BaseEncoder):\n \n         return X_tr\n \n+    def get_feature_names(self, input_features=None):\n+        \"\"\"\n+        Return feature names for output features.\n+\n+        Parameters\n+        ----------\n+        input_features : array-like of str or None, default=None\n+            String names for the input features if available. By default, \"x0\", \"x1\", ...\n+            is used.\n+\n+        Returns\n+        -------\n+        output_feature_names : array of str\n+            Array of feature names for the output of the transform.\n+        \"\"\"\n+        check_is_fitted(self, 'categories_')\n+        cats = self.categories_\n+        if input_features is None:\n+            input_features = ['x%d' % i for i in range(len(cats))]\n+        feature_names = []\n+        for i in range(len(cats)):\n+            names = [\n+                input_features[i] + \"_\" + str(t) for t in cats[i]\n+            ]\n+            feature_names.extend(names)\n+\n+        return feature_names\n+\n \n class OrdinalEncoder(_BaseEncoder):\n     \"\"\"Encode categorical features as an integer array.\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/preprocessing/_encoders.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "726fa36f2556e0d604d85a1de48ba56a8b6550db",
  "patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -240,6 +240,8 @@ class OneHotEncoder(_BaseEncoder):\n     >>> enc.inverse_transform([[0, 1, 1, 0, 0], [0, 0, 0, 1, 0]])\n     array([['Male', 1],\n            [None, 2]], dtype=object)\n+    >>> enc.get_feature_names()\n+    array(['x0_Female', 'x0_Male', 'x1_1', 'x1_2', 'x1_3'], dtype=object)\n \n     See also\n     --------\n@@ -639,6 +641,38 @@ def inverse_transform(self, X):\n \n         return X_tr\n \n+    def get_feature_names(self, input_features=None):\n+        \"\"\"Return feature names for output features.\n+\n+        Parameters\n+        ----------\n+        input_features : list of string, length n_features, optional\n+            String names for input features if available. By default,\n+            \"x0\", \"x1\", ... \"xn_features\" is used.\n+\n+        Returns\n+        -------\n+        output_feature_names : array of string, length n_output_features\n+\n+        \"\"\"\n+        check_is_fitted(self, 'categories_')\n+        cats = self.categories_\n+        if input_features is None:\n+            input_features = ['x%d' % i for i in range(len(cats))]\n+        elif(len(input_features) != len(self.categories_)):\n+            raise ValueError(\n+                \"input_features should have length equal to number of \"\n+                \"features ({}), got {}\".format(len(self.categories_),\n+                                               len(input_features)))\n+\n+        feature_names = []\n+        for i in range(len(cats)):\n+            names = [\n+                input_features[i] + '_' + six.text_type(t) for t in cats[i]]\n+            feature_names.extend(names)\n+\n+        return np.array(feature_names, dtype=object)\n+\n \n class OrdinalEncoder(_BaseEncoder):\n     \"\"\"Encode categorical features as an integer array.\n",
  "test_patch": "diff --git a/sklearn/preprocessing/tests/test_encoders.py b/sklearn/preprocessing/tests/test_encoders.py\n--- a/sklearn/preprocessing/tests/test_encoders.py\n+++ b/sklearn/preprocessing/tests/test_encoders.py\n@@ -1,3 +1,4 @@\n+# -*- coding: utf-8 -*-\n from __future__ import division\n \n import re\n@@ -455,6 +456,47 @@ def test_one_hot_encoder_pandas():\n     assert_allclose(Xtr, [[1, 0, 1, 0], [0, 1, 0, 1]])\n \n \n+def test_one_hot_encoder_feature_names():\n+    enc = OneHotEncoder()\n+    X = [['Male', 1, 'girl', 2, 3],\n+         ['Female', 41, 'girl', 1, 10],\n+         ['Male', 51, 'boy', 12, 3],\n+         ['Male', 91, 'girl', 21, 30]]\n+\n+    enc.fit(X)\n+    feature_names = enc.get_feature_names()\n+    assert isinstance(feature_names, np.ndarray)\n+\n+    assert_array_equal(['x0_Female', 'x0_Male',\n+                        'x1_1', 'x1_41', 'x1_51', 'x1_91',\n+                        'x2_boy', 'x2_girl',\n+                        'x3_1', 'x3_2', 'x3_12', 'x3_21',\n+                        'x4_3',\n+                        'x4_10', 'x4_30'], feature_names)\n+\n+    feature_names2 = enc.get_feature_names(['one', 'two',\n+                                            'three', 'four', 'five'])\n+\n+    assert_array_equal(['one_Female', 'one_Male',\n+                        'two_1', 'two_41', 'two_51', 'two_91',\n+                        'three_boy', 'three_girl',\n+                        'four_1', 'four_2', 'four_12', 'four_21',\n+                        'five_3', 'five_10', 'five_30'], feature_names2)\n+\n+    with pytest.raises(ValueError, match=\"input_features should have length\"):\n+        enc.get_feature_names(['one', 'two'])\n+\n+\n+def test_one_hot_encoder_feature_names_unicode():\n+    enc = OneHotEncoder()\n+    X = np.array([[u'c\u2764t1', u'dat2']], dtype=object).T\n+    enc.fit(X)\n+    feature_names = enc.get_feature_names()\n+    assert_array_equal([u'x0_c\u2764t1', u'x0_dat2'], feature_names)\n+    feature_names = enc.get_feature_names(input_features=[u'n\ud83d\udc4dme'])\n+    assert_array_equal([u'n\ud83d\udc4dme_c\u2764t1', u'n\ud83d\udc4dme_dat2'], feature_names)\n+\n+\n @pytest.mark.parametrize(\"X\", [\n     [['abc', 2, 55], ['def', 1, 55]],\n     np.array([[10, 2, 55], [20, 1, 55]]),\n",
  "problem_statement": "add get_feature_names to CategoricalEncoder\nWe should add a ``get_feature_names`` to the new CategoricalEncoder, as discussed [here](https://github.com/scikit-learn/scikit-learn/pull/9151#issuecomment-345830056). I think it would be good to be consistent with the PolynomialFeature which allows passing in original feature names to map them to new feature names. Also see #6425.\n",
  "hints_text": "I'd like to try this one.\nIf you haven't contributed before, I suggest you try an issue labeled \"good first issue\". Though this one isn't too hard, eigher.\n@amueller \r\nI think I can handle it.\r\nSo we want something like this right?\r\n\r\n    enc.fit([['male',0], ['female', 1]])\r\n    enc.get_feature_names()\r\n\r\n    >> ['female', 'male', 0, 1]\r\n\r\nCan you please give an example of how original feature names can map to new feature names? I have seen the `get_feature_names()` from PolynomialFeatures, but I don't understand what that means in this case.\nI think the idea is that if you have multiple input features containing the\nvalue \"hello\" they need to be distinguished in the feature names listed for\noutput. so you prefix the value with the input feature name, defaulting to\nx1 etc as in polynomial. clearer?\n\n@jnothman Is this what you mean?\r\n\r\n    enc.fit(  [ [ 'male' ,    0,  1],\r\n                 [ 'female' ,  1 , 0]  ] )\r\n\r\n    enc.get_feature_names(['one','two','three'])\r\n\r\n    >> ['one_female', 'one_male' , 'two_0' , 'two_1' , 'three_0' , 'three_1']\r\n\r\n\r\nAnd in case I don't pass any strings, it should just use `x0` , `x1` and so on for the prefixes right?\nPrecisely.\n\n>\n>\n\nI like the idea to be able to specify input feature names.\r\n\r\nRegarding syntax of combining the two names, as prior art we have eg `DictVectorizer` that does something like `['0=female', '0=male', '1=0', '1=1']` (assuming we use 0 and 1 as the column names for arrays) or Pipelines that uses double underscores (`['0__female', '0__male', '1__0', '1__1']`). Others? \r\nI personally like the `__` a bit more I think, but the fact that this is used by pipelines is for me actually a reason to use `=` in this case. Eg in combination with the ColumnTransformer (assuming this would use the `__` syntax like pipeline), you could then get a feature name like `'cat__0=male'` instead of `'cat__0__male'`.\nAdditional question:\r\n\r\n- if the input is a pandas DataFrame, do we want to preserve the column names (to use instead of 0, 1, ..)? \r\n  (ideally yes IMO, but this would require some extra code as currently it is not detected whether a DataFrame is passed or not, it is just coerced to array)\nno, we shouldn't use column names automatically. it's hard for us to keep\nthem and easy for the user to pass them.\n\n>  it's hard for us to keep them\r\n\r\nIt's not really 'hard':\r\n\r\n```\r\nclass CategoricalEncoder():\r\n\r\n    def fit(self, X, ...):\r\n        ...\r\n        if hasattr(X, 'iloc'):\r\n            self._input_features = X.columns\r\n        ...\r\n\r\n    def get_feature_names(self, input_features=None):\r\n        if input_features is None:\r\n            input_features = self._input_features\r\n        ...\r\n```\r\n\r\nbut of course it is added complexity, and more explicit support for pandas dataframes, which is not necessarily something we want to add (I just don't think 'hard' is the correct reason :-)).\r\n\r\nBut eg if you combine multiple sets of columns and transformers in a ColumnTransformer, it is not always that straightforward for the user to keep track of IMO, because you then need to combine the different sets of selected column into one list to pass to `get_feature_names`.\nNo, then you just need get_feature_names implemented everywhere and let\nPipeline's (not yet) implementation of get_feature_names handle it for you.\n(Note: There remain some problems with this design in a meta-estimator\ncontext.) I've implemented similar within the eli5 package, but we also got\nsomewhat stuck when it came to making arbitrary decisions about how to make\nfeature names for linear transforms like PCA. A structured representation\nrather than a string name might be nice...\n\nOn 23 November 2017 at 10:00, Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> it's hard for us to keep them\n>\n> It's not really 'hard':\n>\n> class CategoricalEncoder():\n>\n>     def fit(self, X, ...):\n>         ...\n>         if hasattr(X, 'iloc'):\n>             self._input_features = X.columns\n>         ...\n>\n>     def get_feature_names(self, input_features=None):\n>         if input_features is None:\n>             input_features = self._input_features\n>         ...\n>\n> but of course it is added complexity, and more explicit support for pandas\n> dataframes, which is not necessarily something we want to add (I just don't\n> think 'hard' is the correct reason :-)).\n>\n> But eg if you combine multiple sets of columns and transformers in a\n> ColumnTransformer, it is not always that straightforward for the user to\n> keep track of IMO, because you then need to combine the different sets of\n> selected column into one list to pass to get_feature_names.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/scikit-learn/scikit-learn/issues/10181#issuecomment-346495657>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAEz62rb6pYYTi80NzltL4u4biA3_-ARks5s5KePgaJpZM4Ql59C>\n> .\n>\n",
  "created_at": "2017-11-24T16:19:38Z",
  "version": "0.20",
  "FAIL_TO_PASS": "[\"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names_unicode\"]",
  "PASS_TO_PASS": "[\"sklearn/preprocessing/tests/test_encoders.py::test_categorical_encoder_stub\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoder_dtypes\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoder_dtypes_pandas\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categorical_features\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[mixed]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[string]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dense\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_deprecationwarnings\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_force_new_behaviour\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_handle_unknown\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_pandas\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_set_params\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_sparse\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-cat]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories_mixed_columns\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_unsorted_categories\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_warning\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[mixed]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_inverse\"]",
  "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1",
  "patch_files": [
    "sklearn/preprocessing/_encoders.py"
  ],
  "test_patch_files": [
    "sklearn/preprocessing/tests/test_encoders.py"
  ],
  "patch_diff_details": {
    "sklearn/preprocessing/_encoders.py": {
      "diffs": [
        {
          "start_line_old": 243,
          "end_line_old": 243,
          "file_pos": 2,
          "file_context_length": 28299,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._transform_new_OneHotEncoder._transform_new.15.2.1.1",
          "closest_snippet_line_distance": 282,
          "pos": 6,
          "context_length": 2691
        },
        {
          "start_line_old": 642,
          "end_line_old": 642,
          "file_pos": 2,
          "file_context_length": 28299,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.fit_OneHotEncoder.fit.4.3.2.1",
          "closest_snippet_line_distance": 239
        }
      ]
    }
  },
  "vectors": 2888,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_PolynomialFeatures.powers__PolynomialFeatures.get_feature_names.6.1",
      "distance": 0.9929945468902588,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1348,
      "end_line": 1386,
      "tokens": 294,
      "context_length": 294
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder__BaseEncoder._fit.6.3",
      "distance": 1.0653259754180908,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 33,
      "end_line": 74,
      "tokens": 328,
      "context_length": 622,
      "file_pos": 2
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.__init___OneHotEncoder.n_values_.2.1",
      "distance": 1.066145420074463,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 259,
      "end_line": 290,
      "tokens": 266,
      "context_length": 888,
      "file_pos": 2
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._transform_new_OneHotEncoder._transform_new.15.2.1.1",
      "distance": 1.0873726606369019,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 525,
      "end_line": 553,
      "tokens": 262,
      "context_length": 1150,
      "file_pos": 2
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_CategoricalEncoder_",
      "distance": 1.0879557132720947,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 2672,
      "end_line": 2684,
      "tokens": 113,
      "context_length": 1263
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder_OneHotEncoder.1",
      "distance": 1.096177577972412,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 111,
      "end_line": 257,
      "tokens": 1428,
      "context_length": 2691,
      "file_pos": 2
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._handle_deprecations_OneHotEncoder._handle_deprecations.self._categories.6.3.self._categorical_features.1",
      "distance": 1.0994186401367188,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 292,
      "end_line": 375,
      "tokens": 797,
      "context_length": 3488,
      "file_pos": 2
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/pipeline.py_FeatureUnion.get_feature_names_FeatureUnion.get_feature_names.4.1",
      "distance": 1.114369511604309,
      "file_path": "sklearn/pipeline.py",
      "start_line": 713,
      "end_line": 729,
      "tokens": 136,
      "context_length": 3624
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OrdinalEncoder_OrdinalEncoder.transform.3.1",
      "distance": 1.1496071815490723,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 643,
      "end_line": 743,
      "tokens": 746,
      "context_length": 4370,
      "file_pos": 3
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._legacy_fit_transform_OneHotEncoder._legacy_fit_transform.17.1",
      "distance": 1.1598552465438843,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 405,
      "end_line": 458,
      "tokens": 562,
      "context_length": 4932,
      "file_pos": 3
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._legacy_transform_OneHotEncoder._legacy_transform.19.1",
      "distance": 1.1606028079986572,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 485,
      "end_line": 523,
      "tokens": 410,
      "context_length": 5342,
      "file_pos": 3
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder._transform__BaseEncoder._transform.7.1",
      "distance": 1.1876027584075928,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 76,
      "end_line": 108,
      "tokens": 297,
      "context_length": 5639,
      "file_pos": 3
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_CountVectorizer._sort_features_CountVectorizer._sort_features.6.1",
      "distance": 1.1956857442855835,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 825,
      "end_line": 837,
      "tokens": 122,
      "context_length": 5761
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/pipeline.py__name_estimators__name_estimators.7.1",
      "distance": 1.2102363109588623,
      "file_path": "sklearn/pipeline.py",
      "start_line": 515,
      "end_line": 533,
      "tokens": 142,
      "context_length": 5903
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py_DictVectorizer.transform_DictVectorizer.get_feature_names.2.1",
      "distance": 1.2108299732208252,
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "start_line": 274,
      "end_line": 318,
      "tokens": 314,
      "context_length": 6217
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py_DictVectorizer.fit_DictVectorizer.fit.8.1",
      "distance": 1.2146120071411133,
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "start_line": 103,
      "end_line": 135,
      "tokens": 213,
      "context_length": 6430
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_1___all__.1",
      "distance": 1.2362654209136963,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 1,
      "end_line": 42,
      "tokens": 185,
      "context_length": 6615
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_4___all__.1",
      "distance": 1.237914800643921,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 5,
      "end_line": 30,
      "tokens": 117,
      "context_length": 6732,
      "file_pos": 5
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_PolynomialFeatures.transform_PolynomialFeatures.transform.8.1",
      "distance": 1.242224931716919,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1410,
      "end_line": 1452,
      "tokens": 348,
      "context_length": 7080
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_add_dummy_feature_add_dummy_feature.5.2.1.1",
      "distance": 1.251993179321289,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1833,
      "end_line": 1889,
      "tokens": 546,
      "context_length": 7626
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/compose/_column_transformer.py_ColumnTransformer.named_transformers__ColumnTransformer.get_feature_names.5.1",
      "distance": 1.259352684020996,
      "file_path": "sklearn/compose/_column_transformer.py",
      "start_line": 262,
      "end_line": 298,
      "tokens": 279,
      "context_length": 7905
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/__init__.py_1_",
      "distance": 1.2653836011886597,
      "file_path": "sklearn/preprocessing/__init__.py",
      "start_line": 1,
      "end_line": 73,
      "tokens": 441,
      "context_length": 8346
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_feature_transformation.py_1_50",
      "distance": 1.265671968460083,
      "file_path": "examples/ensemble/plot_feature_transformation.py",
      "start_line": 1,
      "end_line": 91,
      "tokens": 765,
      "context_length": 9111
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_discretization_classification.py_1_classifiers.1",
      "distance": 1.265838384628296,
      "file_path": "examples/preprocessing/plot_discretization_classification.py",
      "start_line": 1,
      "end_line": 89,
      "tokens": 793,
      "context_length": 9904
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/label.py__encode__encode.2.2.1.1",
      "distance": 1.266789197921753,
      "file_path": "sklearn/preprocessing/label.py",
      "start_line": 77,
      "end_line": 110,
      "tokens": 276,
      "context_length": 10180
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py_DictVectorizer_DictVectorizer.__init__.self.sort.1",
      "distance": 1.2689459323883057,
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "start_line": 26,
      "end_line": 101,
      "tokens": 683,
      "context_length": 10863
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/label.py__encode_numpy__encode_numpy.2.2.5.1.1",
      "distance": 1.2754082679748535,
      "file_path": "sklearn/preprocessing/label.py",
      "start_line": 40,
      "end_line": 57,
      "tokens": 138,
      "context_length": 11001
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py_DictVectorizer._transform_DictVectorizer._transform.5",
      "distance": 1.2812957763671875,
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "start_line": 137,
      "end_line": 211,
      "tokens": 606,
      "context_length": 11607
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_BaseGradientBoosting._resize_state_BaseGradientBoosting.n_features.1.1",
      "distance": 1.285053014755249,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 926,
      "end_line": 955,
      "tokens": 321,
      "context_length": 11928
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/hashing.py_FeatureHasher.__init___FeatureHasher.__init__.self.non_negative.1",
      "distance": 1.2865495681762695,
      "file_path": "sklearn/feature_extraction/hashing.py",
      "start_line": 87,
      "end_line": 99,
      "tokens": 139,
      "context_length": 12067
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_9___all__.1",
      "distance": 1.288888931274414,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 10,
      "end_line": 66,
      "tokens": 348,
      "context_length": 12415
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_partial_fit_n_features_check_estimators_partial_fit_n_features.2.6.1",
      "distance": 1.2896766662597656,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1201,
      "end_line": 1224,
      "tokens": 185,
      "context_length": 12600
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/base.py_17_BaseEstimator._get_param_names.13.1",
      "distance": 1.2905540466308594,
      "file_path": "sklearn/base.py",
      "start_line": 128,
      "end_line": 164,
      "tokens": 314,
      "context_length": 12914
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/label.py__encode_python__encode_python.2.3.4.1.1",
      "distance": 1.291365146636963,
      "file_path": "sklearn/preprocessing/label.py",
      "start_line": 60,
      "end_line": 74,
      "tokens": 133,
      "context_length": 13047
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer._get_ordered_idx_ChainedImputer._get_ordered_idx.5.1",
      "distance": 1.2928929328918457,
      "file_path": "sklearn/impute.py",
      "start_line": 693,
      "end_line": 735,
      "tokens": 428,
      "context_length": 13475
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.inverse_transform_OneHotEncoder.inverse_transform.21.1",
      "distance": 1.293461799621582,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 575,
      "end_line": 640,
      "tokens": 515,
      "context_length": 13990,
      "file_pos": 15
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit2d_1feature_check_fit2d_1feature.rnd.16.2.1.1",
      "distance": 1.2976765632629395,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 798,
      "end_line": 829,
      "tokens": 297,
      "context_length": 14287
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/__init__.py__",
      "distance": 1.298871636390686,
      "file_path": "sklearn/feature_extraction/__init__.py",
      "start_line": 1,
      "end_line": 14,
      "tokens": 0,
      "context_length": 14287
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_PowerTransformer.transform_PowerTransformer.transform.6.1",
      "distance": 1.3061003684997559,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 2510,
      "end_line": 2527,
      "tokens": 144,
      "context_length": 14431
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sparsify_coefficients_check_sparsify_coefficients.15",
      "distance": 1.3090968132019043,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1952,
      "end_line": 1972,
      "tokens": 233,
      "context_length": 14664
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/metaestimators.py__BaseComposition._validate_names__BaseComposition._validate_names.5.1",
      "distance": 1.309849739074707,
      "file_path": "sklearn/utils/metaestimators.py",
      "start_line": 61,
      "end_line": 72,
      "tokens": 151,
      "context_length": 14815
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_supervised_y_2d_check_supervised_y_2d.17",
      "distance": 1.3099908828735352,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1574,
      "end_line": 1603,
      "tokens": 324,
      "context_length": 15139
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_choose_check_classifiers_labels_check_classifiers_classes.19",
      "distance": 1.311307430267334,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1651,
      "end_line": 1686,
      "tokens": 399,
      "context_length": 15538
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py_DictVectorizer.restrict_",
      "distance": 1.3122185468673706,
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "start_line": 320,
      "end_line": 366,
      "tokens": 349,
      "context_length": 15887
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifier_data_not_an_array_check_regressor_data_not_an_array.4",
      "distance": 1.3123741149902344,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1975,
      "end_line": 1989,
      "tokens": 211,
      "context_length": 16098
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_dont_overwrite_parameters_check_dont_overwrite_parameters.2.21",
      "distance": 1.313185453414917,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 639,
      "end_line": 687,
      "tokens": 441,
      "context_length": 16539
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_selection/__init__.py_1_",
      "distance": 1.3134310245513916,
      "file_path": "sklearn/feature_selection/__init__.py",
      "start_line": 1,
      "end_line": 44,
      "tokens": 286,
      "context_length": 16825
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_PolynomialFeatures_PolynomialFeatures._combinations.3.1",
      "distance": 1.3142824172973633,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1273,
      "end_line": 1346,
      "tokens": 733,
      "context_length": 17558
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_selection/rfe.py_RFE._fit_RFE._fit.5",
      "distance": 1.3162274360656738,
      "file_path": "sklearn/feature_selection/rfe.py",
      "start_line": 142,
      "end_line": 223,
      "tokens": 662,
      "context_length": 18220
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OrdinalEncoder.inverse_transform_",
      "distance": 1.3166038990020752,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 745,
      "end_line": 780,
      "tokens": 266,
      "context_length": 18486,
      "file_pos": 19
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_VectorizerMixin_VectorizerMixin.decode.5.1",
      "distance": 1.3177056312561035,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 115,
      "end_line": 144,
      "tokens": 170,
      "context_length": 18656
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer._get_neighbor_feat_idx_ChainedImputer._get_neighbor_feat_idx.3.1",
      "distance": 1.317724585533142,
      "file_path": "sklearn/impute.py",
      "start_line": 653,
      "end_line": 691,
      "tokens": 330,
      "context_length": 18986
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_VectorizerMixin.build_preprocessor_VectorizerMixin.build_preprocessor.11.2.1.1",
      "distance": 1.3202526569366455,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 228,
      "end_line": 256,
      "tokens": 252,
      "context_length": 19238
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_selection/from_model.py_np__get_feature_importances.4.1",
      "distance": 1.320702075958252,
      "file_path": "sklearn/feature_selection/from_model.py",
      "start_line": 4,
      "end_line": 34,
      "tokens": 228,
      "context_length": 19466
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_overwrite_params_check_estimators_overwrite_params.16.8",
      "distance": 1.3227065801620483,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1885,
      "end_line": 1920,
      "tokens": 352,
      "context_length": 19818
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/pipeline.py_FeatureUnion._validate_transformers_FeatureUnion._iter.3.1",
      "distance": 1.3228130340576172,
      "file_path": "sklearn/pipeline.py",
      "start_line": 688,
      "end_line": 711,
      "tokens": 195,
      "context_length": 20013
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_BaseGradientBoosting.feature_importances__BaseGradientBoosting._validate_y.self.n_classes_.4.1",
      "distance": 1.3246172666549683,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 1219,
      "end_line": 1247,
      "tokens": 237,
      "context_length": 20250
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_TfidfTransformer.idf__TfidfVectorizer",
      "distance": 1.3263084888458252,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 1248,
      "end_line": 1586,
      "tokens": 140,
      "context_length": 20390
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/_feature_agglomeration.py_1_AgglomerationTransform.transform.7.1",
      "distance": 1.3270721435546875,
      "file_path": "sklearn/cluster/_feature_agglomeration.py",
      "start_line": 1,
      "end_line": 59,
      "tokens": 390,
      "context_length": 20780
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_VectorizerMixin._validate_vocabulary_VectorizerMixin._validate_vocabulary.2.6.self.fixed_vocabulary_.1",
      "distance": 1.3282439708709717,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 294,
      "end_line": 320,
      "tokens": 230,
      "context_length": 21010
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py_DictVectorizer.fit_transform_DictVectorizer.fit_transform.2.1",
      "distance": 1.3284685611724854,
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "start_line": 213,
      "end_line": 231,
      "tokens": 144,
      "context_length": 21154
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_scaling_importance.py_1_31",
      "distance": 1.3309125900268555,
      "file_path": "examples/preprocessing/plot_scaling_importance.py",
      "start_line": 1,
      "end_line": 82,
      "tokens": 762,
      "context_length": 21916
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_forest_importances.py_1_",
      "distance": 1.3325247764587402,
      "file_path": "examples/ensemble/plot_forest_importances.py",
      "start_line": 1,
      "end_line": 55,
      "tokens": 373,
      "context_length": 22289
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/forest.py_BaseForest.feature_importances__accumulate_prediction.2.1.2.1.1",
      "distance": 1.333418846130371,
      "file_path": "sklearn/ensemble/forest.py",
      "start_line": 358,
      "end_line": 388,
      "tokens": 239,
      "context_length": 22528
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/weight_boosting.py_BaseWeightBoosting.feature_importances__BaseWeightBoosting._validate_X_predict.3.1",
      "distance": 1.3352242708206177,
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "start_line": 237,
      "end_line": 272,
      "tokens": 283,
      "context_length": 22811
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/dict_learning.py_SparseCodingMixin.transform_SparseCodingMixin.transform.6.1",
      "distance": 1.3371295928955078,
      "file_path": "sklearn/decomposition/dict_learning.py",
      "start_line": 866,
      "end_line": 902,
      "tokens": 267,
      "context_length": 23078
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_transformer_general_check_transformer_general.7",
      "distance": 1.338627815246582,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 850,
      "end_line": 864,
      "tokens": 169,
      "context_length": 23247
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_selection/rfe.py_RFE_RFE.1",
      "distance": 1.3392539024353027,
      "file_path": "sklearn/feature_selection/rfe.py",
      "start_line": 36,
      "end_line": 116,
      "tokens": 759,
      "context_length": 24006
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_dtype_object_check_complex_data.X.5",
      "distance": 1.3395705223083496,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 557,
      "end_line": 592,
      "tokens": 328,
      "context_length": 24334
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_feature_union.py_1_",
      "distance": 1.3395987749099731,
      "file_path": "examples/compose/plot_feature_union.py",
      "start_line": 1,
      "end_line": 61,
      "tokens": 411,
      "context_length": 24745
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_PolynomialFeatures.fit_PolynomialFeatures.fit.6.1",
      "distance": 1.3422259092330933,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1388,
      "end_line": 1408,
      "tokens": 133,
      "context_length": 24878
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sample_weights_list_check_sample_weights_list.3.8",
      "distance": 1.3430252075195312,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 541,
      "end_line": 554,
      "tokens": 166,
      "context_length": 25044
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__yield_non_meta_checks__yield_non_meta_checks.19",
      "distance": 1.3455731868743896,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 85,
      "end_line": 118,
      "tokens": 257,
      "context_length": 25301
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_selection/rfe.py_RFECV_RFECV.1",
      "distance": 1.34672212600708,
      "file_path": "sklearn/feature_selection/rfe.py",
      "start_line": 279,
      "end_line": 384,
      "tokens": 955,
      "context_length": 26256
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sample_weights_pandas_series_check_sample_weights_pandas_series.estimator.2.1.7.1",
      "distance": 1.3472058773040771,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 517,
      "end_line": 538,
      "tokens": 272,
      "context_length": 26528
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_1_ALLOW_NAN.1",
      "distance": 1.3485337495803833,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1,
      "end_line": 82,
      "tokens": 708,
      "context_length": 27236
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_transformer_data_not_an_array_check_transformers_unfitted.3.1",
      "distance": 1.3506397008895874,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 867,
      "end_line": 889,
      "tokens": 248,
      "context_length": 27484
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_PowerTransformer_PowerTransformer.__init__.self.copy.1",
      "distance": 1.351487398147583,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 2392,
      "end_line": 2468,
      "tokens": 649,
      "context_length": 28133
    },
    {
      "position": 79,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_CountVectorizer._limit_features_CountVectorizer._limit_features.16.1",
      "distance": 1.3553123474121094,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 839,
      "end_line": 878,
      "tokens": 376,
      "context_length": 28509
    },
    {
      "position": 80,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/dict_learning.py__sparse_encode.7__sparse_encode.9.1",
      "distance": 1.3562984466552734,
      "file_path": "sklearn/decomposition/dict_learning.py",
      "start_line": 113,
      "end_line": 181,
      "tokens": 692,
      "context_length": 29201
    },
    {
      "position": 81,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_CountVectorizer.__init___CountVectorizer.__init__.self.dtype.1",
      "distance": 1.3568285703659058,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 792,
      "end_line": 823,
      "tokens": 319,
      "context_length": 29520
    },
    {
      "position": 82,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_CountVectorizer._count_vocab_CountVectorizer._count_vocab.16.1",
      "distance": 1.3574137687683105,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 880,
      "end_line": 940,
      "tokens": 467,
      "context_length": 29987
    },
    {
      "position": 83,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_train_check_regressors_train.23.1",
      "distance": 1.3578341007232666,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1717,
      "end_line": 1759,
      "tokens": 474,
      "context_length": 30461
    },
    {
      "position": 84,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_FeatureAgglomeration_FeatureAgglomeration.1",
      "distance": 1.3609447479248047,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 844,
      "end_line": 920,
      "tokens": 744,
      "context_length": 31205
    },
    {
      "position": 85,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.3.2",
      "distance": 1.3612260818481445,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1786,
      "end_line": 1828,
      "tokens": 449,
      "context_length": 31654
    },
    {
      "position": 86,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/hashing.py_numbers_FeatureHasher.1",
      "distance": 1.36678147315979,
      "file_path": "sklearn/feature_extraction/hashing.py",
      "start_line": 4,
      "end_line": 85,
      "tokens": 795,
      "context_length": 32449
    },
    {
      "position": 87,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_one_label_check_classifiers_one_label.8.5.2.2",
      "distance": 1.3724629878997803,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1305,
      "end_line": 1336,
      "tokens": 258,
      "context_length": 32707
    },
    {
      "position": 88,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_dtypes_check_estimators_dtypes.10.5.1.1",
      "distance": 1.373788595199585,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1034,
      "end_line": 1057,
      "tokens": 269,
      "context_length": 32976
    },
    {
      "position": 89,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/hashing.py_FeatureHasher.transform_",
      "distance": 1.3745713233947754,
      "file_path": "sklearn/feature_extraction/hashing.py",
      "start_line": 134,
      "end_line": 172,
      "tokens": 347,
      "context_length": 33323
    },
    {
      "position": 90,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/pairwise.py_KERNEL_PARAMS_KERNEL_PARAMS.1",
      "distance": 1.3748714923858643,
      "file_path": "sklearn/metrics/pairwise.py",
      "start_line": 1467,
      "end_line": 1477,
      "tokens": 107,
      "context_length": 33430
    },
    {
      "position": 91,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/online_lda.py_LatentDirichletAllocation._init_latent_vars_LatentDirichletAllocation._init_latent_vars.self.exp_dirichlet_component_.1",
      "distance": 1.3780109882354736,
      "file_path": "sklearn/decomposition/online_lda.py",
      "start_line": 316,
      "end_line": 341,
      "tokens": 243,
      "context_length": 33673
    },
    {
      "position": 92,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_compare_reduction.py_1_56",
      "distance": 1.3802952766418457,
      "file_path": "examples/compose/plot_compare_reduction.py",
      "start_line": 1,
      "end_line": 105,
      "tokens": 809,
      "context_length": 34482
    },
    {
      "position": 93,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_GradientBoostingClassifier.1_GradientBoostingClassifier.1",
      "distance": 1.3812875747680664,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 1286,
      "end_line": 1527,
      "tokens": 2411,
      "context_length": 36893
    },
    {
      "position": 94,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.transform_OneHotEncoder.transform.2.2.1.1",
      "distance": 1.3815040588378906,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 555,
      "end_line": 573,
      "tokens": 121,
      "context_length": 37014,
      "file_pos": 31
    },
    {
      "position": 95,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_25__TREE_BUILDERS.1",
      "distance": 1.3817944526672363,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 581,
      "end_line": 601,
      "tokens": 134,
      "context_length": 37148
    },
    {
      "position": 96,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_pipeline_consistency_check_pipeline_consistency.14.2.4",
      "distance": 1.3837628364562988,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 969,
      "end_line": 1003,
      "tokens": 372,
      "context_length": 37520
    },
    {
      "position": 97,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_selection/from_model.py_SelectFromModel_SelectFromModel.__init__.self.max_features.1",
      "distance": 1.3838326930999756,
      "file_path": "sklearn/feature_selection/from_model.py",
      "start_line": 81,
      "end_line": 140,
      "tokens": 590,
      "context_length": 38110
    },
    {
      "position": 98,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__check_transformer__check_transformer.12.4.2.1",
      "distance": 1.384446382522583,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 892,
      "end_line": 966,
      "tokens": 702,
      "context_length": 38812
    },
    {
      "position": 99,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_int_check_regressors_int.18",
      "distance": 1.3852617740631104,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1689,
      "end_line": 1714,
      "tokens": 277,
      "context_length": 39089
    },
    {
      "position": 100,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.fit_OneHotEncoder.fit.4.3.2.1",
      "distance": 1.3853323459625244,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 377,
      "end_line": 403,
      "tokens": 178,
      "context_length": 39267,
      "file_pos": 31
    },
    {
      "position": 101,
      "id": "/tmp/repos/scikit-learn/sklearn/externals/six.py__moved_attributes__moved_attributes.1",
      "distance": 1.3856967687606812,
      "file_path": "sklearn/externals/six.py",
      "start_line": 138,
      "end_line": 193,
      "tokens": 900,
      "context_length": 40167
    }
  ],
  "files": [
    {
      "file_path": "sklearn/preprocessing/data.py",
      "position": 1,
      "tokens": 21857,
      "context_length": 21857
    },
    {
      "file_path": "sklearn/preprocessing/_encoders.py",
      "position": 2,
      "tokens": 6442,
      "context_length": 28299
    },
    {
      "file_path": "sklearn/pipeline.py",
      "position": 3,
      "tokens": 6593,
      "context_length": 34892
    },
    {
      "file_path": "sklearn/feature_extraction/text.py",
      "position": 4,
      "tokens": 12712,
      "context_length": 47604
    },
    {
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "position": 5,
      "tokens": 2724,
      "context_length": 50328
    },
    {
      "file_path": "sklearn/compose/_column_transformer.py",
      "position": 6,
      "tokens": 5125,
      "context_length": 55453
    },
    {
      "file_path": "sklearn/preprocessing/__init__.py",
      "position": 7,
      "tokens": 441,
      "context_length": 55894
    },
    {
      "file_path": "examples/ensemble/plot_feature_transformation.py",
      "position": 8,
      "tokens": 1123,
      "context_length": 57017
    },
    {
      "file_path": "examples/preprocessing/plot_discretization_classification.py",
      "position": 9,
      "tokens": 1860,
      "context_length": 58877
    },
    {
      "file_path": "sklearn/preprocessing/label.py",
      "position": 10,
      "tokens": 7472,
      "context_length": 66349
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 11,
      "tokens": 18278,
      "context_length": 84627
    },
    {
      "file_path": "sklearn/feature_extraction/hashing.py",
      "position": 12,
      "tokens": 1530,
      "context_length": 86157
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 13,
      "tokens": 20476,
      "context_length": 106633
    },
    {
      "file_path": "sklearn/base.py",
      "position": 14,
      "tokens": 3893,
      "context_length": 110526
    },
    {
      "file_path": "sklearn/impute.py",
      "position": 15,
      "tokens": 9793,
      "context_length": 120319
    },
    {
      "file_path": "sklearn/feature_extraction/__init__.py",
      "position": 16,
      "tokens": 99,
      "context_length": 120418
    },
    {
      "file_path": "sklearn/utils/metaestimators.py",
      "position": 17,
      "tokens": 1653,
      "context_length": 122071
    },
    {
      "file_path": "sklearn/feature_selection/__init__.py",
      "position": 18,
      "tokens": 286,
      "context_length": 122357
    },
    {
      "file_path": "sklearn/feature_selection/rfe.py",
      "position": 19,
      "tokens": 4015,
      "context_length": 126372
    },
    {
      "file_path": "sklearn/feature_selection/from_model.py",
      "position": 20,
      "tokens": 1802,
      "context_length": 128174
    },
    {
      "file_path": "sklearn/cluster/_feature_agglomeration.py",
      "position": 21,
      "tokens": 571,
      "context_length": 128745
    },
    {
      "file_path": "examples/preprocessing/plot_scaling_importance.py",
      "position": 22,
      "tokens": 1203,
      "context_length": 129948
    },
    {
      "file_path": "examples/ensemble/plot_forest_importances.py",
      "position": 23,
      "tokens": 373,
      "context_length": 130321
    },
    {
      "file_path": "sklearn/ensemble/forest.py",
      "position": 24,
      "tokens": 16995,
      "context_length": 147316
    },
    {
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "position": 25,
      "tokens": 8770,
      "context_length": 156086
    },
    {
      "file_path": "sklearn/decomposition/dict_learning.py",
      "position": 26,
      "tokens": 11298,
      "context_length": 167384
    },
    {
      "file_path": "examples/compose/plot_feature_union.py",
      "position": 27,
      "tokens": 435,
      "context_length": 167819
    },
    {
      "file_path": "sklearn/cluster/hierarchical.py",
      "position": 28,
      "tokens": 8266,
      "context_length": 176085
    },
    {
      "file_path": "sklearn/metrics/pairwise.py",
      "position": 29,
      "tokens": 13137,
      "context_length": 189222
    },
    {
      "file_path": "sklearn/decomposition/online_lda.py",
      "position": 30,
      "tokens": 6590,
      "context_length": 195812
    },
    {
      "file_path": "examples/compose/plot_compare_reduction.py",
      "position": 31,
      "tokens": 1056,
      "context_length": 196868
    },
    {
      "file_path": "sklearn/externals/six.py",
      "position": 32,
      "tokens": 5129,
      "context_length": 201997
    }
  ]
}