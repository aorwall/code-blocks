{
  "instance_id": "scikit-learn__scikit-learn-10306",
  "model_patch": "diff --git a/sklearn/cluster/birch.py b/sklearn/cluster/birch.py\nindex d2dcd8d9a..5583b7a86 100644\n--- a/sklearn/cluster/birch.py\n+++ b/sklearn/cluster/birch.py\n@@ -623,10 +623,11 @@ class Birch(BaseEstimator, TransformerMixin, ClusterMixin):\n         if clusterer is None or not_enough_centroids:\n             self.subcluster_labels_ = np.arange(len(centroids))\n             if not_enough_centroids:\n+                from sklearn.exceptions import ConvergenceWarning\n                 warnings.warn(\n                     \"Number of subclusters found (%d) by Birch is less \"\n                     \"than (%d). Decrease the threshold.\"\n-                    % (len(centroids), self.n_clusters))\n+                    % (len(centroids), self.n_clusters), ConvergenceWarning)\n         else:\n             # The global clustering step that clusters the subclusters of\n             # the leaves. It assumes the centroids of the subclusters as\ndiff --git a/sklearn/decomposition/fastica_.py b/sklearn/decomposition/fastica_.py\nindex f4f6eb3a0..5b1c07a8e 100644\n--- a/sklearn/decomposition/fastica_.py\n+++ b/sklearn/decomposition/fastica_.py\n@@ -115,8 +115,9 @@ def _ica_par(X, tol, g, fun_args, max_iter, w_init):\n         if lim < tol:\n             break\n     else:\n+        from sklearn.exceptions import ConvergenceWarning\n         warnings.warn('FastICA did not converge. Consider increasing '\n-                      'tolerance or the maximum number of iterations.')\n+                      'tolerance or the maximum number of iterations.', ConvergenceWarning)\n \n     return W, ii + 1\n \n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/cluster/birch.py",
    "sklearn/decomposition/fastica_.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "b90661d6a46aa3619d3eec94d5281f5888add501",
  "patch": "diff --git a/sklearn/cluster/affinity_propagation_.py b/sklearn/cluster/affinity_propagation_.py\n--- a/sklearn/cluster/affinity_propagation_.py\n+++ b/sklearn/cluster/affinity_propagation_.py\n@@ -390,5 +390,5 @@ def predict(self, X):\n         else:\n             warnings.warn(\"This model does not have any cluster centers \"\n                           \"because affinity propagation did not converge. \"\n-                          \"Labeling every sample as '-1'.\")\n+                          \"Labeling every sample as '-1'.\", ConvergenceWarning)\n             return np.array([-1] * X.shape[0])\ndiff --git a/sklearn/cluster/birch.py b/sklearn/cluster/birch.py\n--- a/sklearn/cluster/birch.py\n+++ b/sklearn/cluster/birch.py\n@@ -15,7 +15,7 @@\n from ..utils import check_array\n from ..utils.extmath import row_norms, safe_sparse_dot\n from ..utils.validation import check_is_fitted\n-from ..exceptions import NotFittedError\n+from ..exceptions import NotFittedError, ConvergenceWarning\n from .hierarchical import AgglomerativeClustering\n \n \n@@ -626,7 +626,7 @@ def _global_clustering(self, X=None):\n                 warnings.warn(\n                     \"Number of subclusters found (%d) by Birch is less \"\n                     \"than (%d). Decrease the threshold.\"\n-                    % (len(centroids), self.n_clusters))\n+                    % (len(centroids), self.n_clusters), ConvergenceWarning)\n         else:\n             # The global clustering step that clusters the subclusters of\n             # the leaves. It assumes the centroids of the subclusters as\ndiff --git a/sklearn/cross_decomposition/pls_.py b/sklearn/cross_decomposition/pls_.py\n--- a/sklearn/cross_decomposition/pls_.py\n+++ b/sklearn/cross_decomposition/pls_.py\n@@ -16,6 +16,7 @@\n from ..utils import check_array, check_consistent_length\n from ..utils.extmath import svd_flip\n from ..utils.validation import check_is_fitted, FLOAT_DTYPES\n+from ..exceptions import ConvergenceWarning\n from ..externals import six\n \n __all__ = ['PLSCanonical', 'PLSRegression', 'PLSSVD']\n@@ -74,7 +75,8 @@ def _nipals_twoblocks_inner_loop(X, Y, mode=\"A\", max_iter=500, tol=1e-06,\n         if np.dot(x_weights_diff.T, x_weights_diff) < tol or Y.shape[1] == 1:\n             break\n         if ite == max_iter:\n-            warnings.warn('Maximum number of iterations reached')\n+            warnings.warn('Maximum number of iterations reached',\n+                          ConvergenceWarning)\n             break\n         x_weights_old = x_weights\n         ite += 1\ndiff --git a/sklearn/decomposition/fastica_.py b/sklearn/decomposition/fastica_.py\n--- a/sklearn/decomposition/fastica_.py\n+++ b/sklearn/decomposition/fastica_.py\n@@ -15,6 +15,7 @@\n from scipy import linalg\n \n from ..base import BaseEstimator, TransformerMixin\n+from ..exceptions import ConvergenceWarning\n from ..externals import six\n from ..externals.six import moves\n from ..externals.six import string_types\n@@ -116,7 +117,8 @@ def _ica_par(X, tol, g, fun_args, max_iter, w_init):\n             break\n     else:\n         warnings.warn('FastICA did not converge. Consider increasing '\n-                      'tolerance or the maximum number of iterations.')\n+                      'tolerance or the maximum number of iterations.',\n+                      ConvergenceWarning)\n \n     return W, ii + 1\n \ndiff --git a/sklearn/gaussian_process/gpc.py b/sklearn/gaussian_process/gpc.py\n--- a/sklearn/gaussian_process/gpc.py\n+++ b/sklearn/gaussian_process/gpc.py\n@@ -19,6 +19,7 @@\n from sklearn.utils import check_random_state\n from sklearn.preprocessing import LabelEncoder\n from sklearn.multiclass import OneVsRestClassifier, OneVsOneClassifier\n+from sklearn.exceptions import ConvergenceWarning\n \n \n # Values required for approximating the logistic sigmoid by\n@@ -428,7 +429,8 @@ def _constrained_optimization(self, obj_func, initial_theta, bounds):\n                 fmin_l_bfgs_b(obj_func, initial_theta, bounds=bounds)\n             if convergence_dict[\"warnflag\"] != 0:\n                 warnings.warn(\"fmin_l_bfgs_b terminated abnormally with the \"\n-                              \" state: %s\" % convergence_dict)\n+                              \" state: %s\" % convergence_dict,\n+                              ConvergenceWarning)\n         elif callable(self.optimizer):\n             theta_opt, func_min = \\\n                 self.optimizer(obj_func, initial_theta, bounds=bounds)\ndiff --git a/sklearn/gaussian_process/gpr.py b/sklearn/gaussian_process/gpr.py\n--- a/sklearn/gaussian_process/gpr.py\n+++ b/sklearn/gaussian_process/gpr.py\n@@ -16,6 +16,7 @@\n from sklearn.utils import check_random_state\n from sklearn.utils.validation import check_X_y, check_array\n from sklearn.utils.deprecation import deprecated\n+from sklearn.exceptions import ConvergenceWarning\n \n \n class GaussianProcessRegressor(BaseEstimator, RegressorMixin):\n@@ -461,7 +462,8 @@ def _constrained_optimization(self, obj_func, initial_theta, bounds):\n                 fmin_l_bfgs_b(obj_func, initial_theta, bounds=bounds)\n             if convergence_dict[\"warnflag\"] != 0:\n                 warnings.warn(\"fmin_l_bfgs_b terminated abnormally with the \"\n-                              \" state: %s\" % convergence_dict)\n+                              \" state: %s\" % convergence_dict,\n+                              ConvergenceWarning)\n         elif callable(self.optimizer):\n             theta_opt, func_min = \\\n                 self.optimizer(obj_func, initial_theta, bounds=bounds)\ndiff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py\n--- a/sklearn/linear_model/logistic.py\n+++ b/sklearn/linear_model/logistic.py\n@@ -29,7 +29,7 @@\n from ..utils.fixes import logsumexp\n from ..utils.optimize import newton_cg\n from ..utils.validation import check_X_y\n-from ..exceptions import NotFittedError\n+from ..exceptions import NotFittedError, ConvergenceWarning\n from ..utils.multiclass import check_classification_targets\n from ..externals.joblib import Parallel, delayed\n from ..model_selection import check_cv\n@@ -716,7 +716,7 @@ def logistic_regression_path(X, y, pos_class=None, Cs=10, fit_intercept=True,\n                     iprint=(verbose > 0) - 1, pgtol=tol)\n             if info[\"warnflag\"] == 1 and verbose > 0:\n                 warnings.warn(\"lbfgs failed to converge. Increase the number \"\n-                              \"of iterations.\")\n+                              \"of iterations.\", ConvergenceWarning)\n             try:\n                 n_iter_i = info['nit'] - 1\n             except:\ndiff --git a/sklearn/linear_model/ransac.py b/sklearn/linear_model/ransac.py\n--- a/sklearn/linear_model/ransac.py\n+++ b/sklearn/linear_model/ransac.py\n@@ -13,6 +13,7 @@\n from ..utils.validation import check_is_fitted\n from .base import LinearRegression\n from ..utils.validation import has_fit_parameter\n+from ..exceptions import ConvergenceWarning\n \n _EPSILON = np.spacing(1)\n \n@@ -453,7 +454,7 @@ def fit(self, X, y, sample_weight=None):\n                               \" early due to skipping more iterations than\"\n                               \" `max_skips`. See estimator attributes for\"\n                               \" diagnostics (n_skips*).\",\n-                              UserWarning)\n+                              ConvergenceWarning)\n \n         # estimate final model using all inliers\n         base_estimator.fit(X_inlier_best, y_inlier_best)\ndiff --git a/sklearn/linear_model/ridge.py b/sklearn/linear_model/ridge.py\n--- a/sklearn/linear_model/ridge.py\n+++ b/sklearn/linear_model/ridge.py\n@@ -31,6 +31,7 @@\n from ..model_selection import GridSearchCV\n from ..externals import six\n from ..metrics.scorer import check_scoring\n+from ..exceptions import ConvergenceWarning\n \n \n def _solve_sparse_cg(X, y, alpha, max_iter=None, tol=1e-3, verbose=0):\n@@ -73,7 +74,7 @@ def _mv(x):\n \n         if max_iter is None and info > 0 and verbose:\n             warnings.warn(\"sparse_cg did not converge after %d iterations.\" %\n-                          info)\n+                          info, ConvergenceWarning)\n \n     return coefs\n \n",
  "test_patch": "diff --git a/sklearn/cluster/tests/test_affinity_propagation.py b/sklearn/cluster/tests/test_affinity_propagation.py\n--- a/sklearn/cluster/tests/test_affinity_propagation.py\n+++ b/sklearn/cluster/tests/test_affinity_propagation.py\n@@ -133,12 +133,14 @@ def test_affinity_propagation_predict_non_convergence():\n     X = np.array([[0, 0], [1, 1], [-2, -2]])\n \n     # Force non-convergence by allowing only a single iteration\n-    af = AffinityPropagation(preference=-10, max_iter=1).fit(X)\n+    af = assert_warns(ConvergenceWarning,\n+                      AffinityPropagation(preference=-10, max_iter=1).fit, X)\n \n     # At prediction time, consider new samples as noise since there are no\n     # clusters\n-    assert_array_equal(np.array([-1, -1, -1]),\n-                       af.predict(np.array([[2, 2], [3, 3], [4, 4]])))\n+    to_predict = np.array([[2, 2], [3, 3], [4, 4]])\n+    y = assert_warns(ConvergenceWarning, af.predict, to_predict)\n+    assert_array_equal(np.array([-1, -1, -1]), y)\n \n \n def test_equal_similarities_and_preferences():\ndiff --git a/sklearn/cluster/tests/test_birch.py b/sklearn/cluster/tests/test_birch.py\n--- a/sklearn/cluster/tests/test_birch.py\n+++ b/sklearn/cluster/tests/test_birch.py\n@@ -9,6 +9,7 @@\n from sklearn.cluster.birch import Birch\n from sklearn.cluster.hierarchical import AgglomerativeClustering\n from sklearn.datasets import make_blobs\n+from sklearn.exceptions import ConvergenceWarning\n from sklearn.linear_model import ElasticNet\n from sklearn.metrics import pairwise_distances_argmin, v_measure_score\n \n@@ -93,7 +94,7 @@ def test_n_clusters():\n \n     # Test that a small number of clusters raises a warning.\n     brc4 = Birch(threshold=10000.)\n-    assert_warns(UserWarning, brc4.fit, X)\n+    assert_warns(ConvergenceWarning, brc4.fit, X)\n \n \n def test_sparse_X():\ndiff --git a/sklearn/cross_decomposition/tests/test_pls.py b/sklearn/cross_decomposition/tests/test_pls.py\n--- a/sklearn/cross_decomposition/tests/test_pls.py\n+++ b/sklearn/cross_decomposition/tests/test_pls.py\n@@ -3,11 +3,12 @@\n \n from sklearn.utils.testing import (assert_equal, assert_array_almost_equal,\n                                    assert_array_equal, assert_true,\n-                                   assert_raise_message)\n+                                   assert_raise_message, assert_warns)\n from sklearn.datasets import load_linnerud\n from sklearn.cross_decomposition import pls_, CCA\n from sklearn.preprocessing import StandardScaler\n from sklearn.utils import check_random_state\n+from sklearn.exceptions import ConvergenceWarning\n \n \n def test_pls():\n@@ -260,6 +261,15 @@ def check_ortho(M, err_msg):\n     check_ortho(pls_ca.y_scores_, \"y scores are not orthogonal\")\n \n \n+def test_convergence_fail():\n+    d = load_linnerud()\n+    X = d.data\n+    Y = d.target\n+    pls_bynipals = pls_.PLSCanonical(n_components=X.shape[1],\n+                                     max_iter=2, tol=1e-10)\n+    assert_warns(ConvergenceWarning, pls_bynipals.fit, X, Y)\n+\n+\n def test_PLSSVD():\n     # Let's check the PLSSVD doesn't return all possible component but just\n     # the specified number\ndiff --git a/sklearn/decomposition/tests/test_fastica.py b/sklearn/decomposition/tests/test_fastica.py\n--- a/sklearn/decomposition/tests/test_fastica.py\n+++ b/sklearn/decomposition/tests/test_fastica.py\n@@ -18,6 +18,7 @@\n from sklearn.decomposition import FastICA, fastica, PCA\n from sklearn.decomposition.fastica_ import _gs_decorrelation\n from sklearn.externals.six import moves\n+from sklearn.exceptions import ConvergenceWarning\n \n \n def center_and_norm(x, axis=-1):\n@@ -141,6 +142,31 @@ def test_fastica_nowhiten():\n     assert_true(hasattr(ica, 'mixing_'))\n \n \n+def test_fastica_convergence_fail():\n+    # Test the FastICA algorithm on very simple data\n+    # (see test_non_square_fastica).\n+    # Ensure a ConvergenceWarning raised if the tolerance is sufficiently low.\n+    rng = np.random.RandomState(0)\n+\n+    n_samples = 1000\n+    # Generate two sources:\n+    t = np.linspace(0, 100, n_samples)\n+    s1 = np.sin(t)\n+    s2 = np.ceil(np.sin(np.pi * t))\n+    s = np.c_[s1, s2].T\n+    center_and_norm(s)\n+    s1, s2 = s\n+\n+    # Mixing matrix\n+    mixing = rng.randn(6, 2)\n+    m = np.dot(mixing, s)\n+\n+    # Do fastICA with tolerance 0. to ensure failing convergence\n+    ica = FastICA(algorithm=\"parallel\", n_components=2, random_state=rng,\n+                  max_iter=2, tol=0.)\n+    assert_warns(ConvergenceWarning, ica.fit, m.T)\n+\n+\n def test_non_square_fastica(add_noise=False):\n     # Test the FastICA algorithm on very simple data.\n     rng = np.random.RandomState(0)\ndiff --git a/sklearn/linear_model/tests/test_logistic.py b/sklearn/linear_model/tests/test_logistic.py\n--- a/sklearn/linear_model/tests/test_logistic.py\n+++ b/sklearn/linear_model/tests/test_logistic.py\n@@ -312,6 +312,15 @@ def test_consistency_path():\n                                   err_msg=\"with solver = %s\" % solver)\n \n \n+def test_logistic_regression_path_convergence_fail():\n+    rng = np.random.RandomState(0)\n+    X = np.concatenate((rng.randn(100, 2) + [1, 1], rng.randn(100, 2)))\n+    y = [1] * 100 + [-1] * 100\n+    Cs = [1e3]\n+    assert_warns(ConvergenceWarning, logistic_regression_path,\n+                 X, y, Cs=Cs, tol=0., max_iter=1, random_state=0, verbose=1)\n+\n+\n def test_liblinear_dual_random_state():\n     # random_state is relevant for liblinear solver only if dual=True\n     X, y = make_classification(n_samples=20, random_state=0)\ndiff --git a/sklearn/linear_model/tests/test_ransac.py b/sklearn/linear_model/tests/test_ransac.py\n--- a/sklearn/linear_model/tests/test_ransac.py\n+++ b/sklearn/linear_model/tests/test_ransac.py\n@@ -13,6 +13,7 @@\n from sklearn.utils.testing import assert_raises\n from sklearn.linear_model import LinearRegression, RANSACRegressor, Lasso\n from sklearn.linear_model.ransac import _dynamic_max_trials\n+from sklearn.exceptions import ConvergenceWarning\n \n \n # Generate coordinates of line\n@@ -230,7 +231,7 @@ def is_data_valid(X, y):\n                                        max_skips=3,\n                                        max_trials=5)\n \n-    assert_warns(UserWarning, ransac_estimator.fit, X, y)\n+    assert_warns(ConvergenceWarning, ransac_estimator.fit, X, y)\n     assert_equal(ransac_estimator.n_skips_no_inliers_, 0)\n     assert_equal(ransac_estimator.n_skips_invalid_data_, 4)\n     assert_equal(ransac_estimator.n_skips_invalid_model_, 0)\ndiff --git a/sklearn/linear_model/tests/test_ridge.py b/sklearn/linear_model/tests/test_ridge.py\n--- a/sklearn/linear_model/tests/test_ridge.py\n+++ b/sklearn/linear_model/tests/test_ridge.py\n@@ -14,6 +14,8 @@\n from sklearn.utils.testing import ignore_warnings\n from sklearn.utils.testing import assert_warns\n \n+from sklearn.exceptions import ConvergenceWarning\n+\n from sklearn import datasets\n from sklearn.metrics import mean_squared_error\n from sklearn.metrics import make_scorer\n@@ -137,6 +139,16 @@ def test_ridge_regression_sample_weights():\n                 assert_array_almost_equal(coefs, coefs2)\n \n \n+def test_ridge_regression_convergence_fail():\n+    rng = np.random.RandomState(0)\n+    y = rng.randn(5)\n+    X = rng.randn(5, 10)\n+\n+    assert_warns(ConvergenceWarning, ridge_regression,\n+                 X, y, alpha=1.0, solver=\"sparse_cg\",\n+                 tol=0., max_iter=None, verbose=1)\n+\n+\n def test_ridge_sample_weights():\n     # TODO: loop over sparse data as well\n \n",
  "problem_statement": "Some UserWarnings should be ConvergenceWarnings\nSome warnings raised during testing show that we do not use `ConvergenceWarning` when it is appropriate in some cases. For example (from [here](https://github.com/scikit-learn/scikit-learn/issues/10158#issuecomment-345453334)):\r\n\r\n```python\r\n/home/lesteve/dev/alt-scikit-learn/sklearn/decomposition/fastica_.py:118: UserWarning: FastICA did not converge. Consider increasing tolerance or the maximum number of iterations.\r\n/home/lesteve/dev/alt-scikit-learn/sklearn/cluster/birch.py:629: UserWarning: Number of subclusters found (2) by Birch is less than (3). Decrease the threshold.\r\n```\r\n\r\nThese should be changed, at least. For bonus points, the contributor could look for other warning messages that mention \"converge\".\n",
  "hints_text": "Could I give this a go?\n@patrick1011 please go ahead!",
  "created_at": "2017-12-13T15:10:48Z",
  "version": "0.20",
  "FAIL_TO_PASS": "[\"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_non_convergence\", \"sklearn/cluster/tests/test_birch.py::test_n_clusters\", \"sklearn/cross_decomposition/tests/test_pls.py::test_convergence_fail\", \"sklearn/decomposition/tests/test_fastica.py::test_fastica_convergence_fail\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_convergence_fail\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_warn_exceed_max_skips\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_convergence_fail\"]",
  "PASS_TO_PASS": "[\"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_equal_mutual_similarities\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_fit_non_convergence\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_error\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_equal_similarities_and_preferences\", \"sklearn/cluster/tests/test_birch.py::test_birch_predict\", \"sklearn/cluster/tests/test_birch.py::test_branching_factor\", \"sklearn/cluster/tests/test_birch.py::test_n_samples_leaves_roots\", \"sklearn/cluster/tests/test_birch.py::test_partial_fit\", \"sklearn/cluster/tests/test_birch.py::test_sparse_X\", \"sklearn/cluster/tests/test_birch.py::test_threshold\", \"sklearn/cross_decomposition/tests/test_pls.py::test_PLSSVD\", \"sklearn/cross_decomposition/tests/test_pls.py::test_pls\", \"sklearn/cross_decomposition/tests/test_pls.py::test_pls_errors\", \"sklearn/cross_decomposition/tests/test_pls.py::test_pls_scaling\", \"sklearn/cross_decomposition/tests/test_pls.py::test_predict_transform_copy\", \"sklearn/cross_decomposition/tests/test_pls.py::test_univariate_pls_regression\", \"sklearn/decomposition/tests/test_fastica.py::test_fastica_nowhiten\", \"sklearn/decomposition/tests/test_fastica.py::test_fastica_simple\", \"sklearn/decomposition/tests/test_fastica.py::test_fit_transform\", \"sklearn/decomposition/tests/test_fastica.py::test_gs\", \"sklearn/decomposition/tests/test_fastica.py::test_inverse_transform\", \"sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica\", \"sklearn/linear_model/tests/test_logistic.py::test_check_solver_option\", \"sklearn/linear_model/tests/test_logistic.py::test_consistency_path\", \"sklearn/linear_model/tests/test_logistic.py::test_dtype_match\", \"sklearn/linear_model/tests/test_logistic.py::test_error\", \"sklearn/linear_model/tests/test_logistic.py::test_inconsistent_input\", \"sklearn/linear_model/tests/test_logistic.py::test_intercept_logistic_helper\", \"sklearn/linear_model/tests/test_logistic.py::test_liblinear_decision_function_zero\", \"sklearn/linear_model/tests/test_logistic.py::test_liblinear_dual_random_state\", \"sklearn/linear_model/tests/test_logistic.py::test_liblinear_logregcv_sparse\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_sparse\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_grad_hess\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_loss_and_grad\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_class_weights\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_convergence_warnings\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multinomial\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_sample_weights\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers_multiclass\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regressioncv_class_weights\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_cv_penalty\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling_zero\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_l1\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_l1_sparse_data\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_predict_proba_multinomial\", \"sklearn/linear_model/tests/test_logistic.py::test_lr_liblinear_warning\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary_probabilities\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_grad_hess\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_logistic_regression_string_inputs\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation\", \"sklearn/linear_model/tests/test_logistic.py::test_n_iter\", \"sklearn/linear_model/tests/test_logistic.py::test_nan\", \"sklearn/linear_model/tests/test_logistic.py::test_ovr_multinomial_iris\", \"sklearn/linear_model/tests/test_logistic.py::test_predict_2_classes\", \"sklearn/linear_model/tests/test_logistic.py::test_predict_3_classes\", \"sklearn/linear_model/tests/test_logistic.py::test_predict_iris\", \"sklearn/linear_model/tests/test_logistic.py::test_saga_sparse\", \"sklearn/linear_model/tests/test_logistic.py::test_saga_vs_liblinear\", \"sklearn/linear_model/tests/test_logistic.py::test_sparsify\", \"sklearn/linear_model/tests/test_logistic.py::test_warm_start\", \"sklearn/linear_model/tests/test_logistic.py::test_write_parameters\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_default_residual_threshold\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_dynamic_max_trials\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_exceed_max_skips\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_fit_sample_weight\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_inliers_outliers\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_is_data_valid\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_is_model_valid\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_max_trials\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_min_n_samples\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_multi_dimensional_targets\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_no_valid_data\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_no_valid_model\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_none_estimator\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_predict\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_resid_thresh_no_inliers\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_residual_loss\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_residual_metric\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_score\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_sparse_coo\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_sparse_csc\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_sparse_csr\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_stop_n_inliers\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_stop_score\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights_cv\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match_cholesky\", \"sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_helper\", \"sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_svd_helper\", \"sklearn/linear_model/tests/test_ridge.py::test_n_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_primal_dual_relationship\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_sample_weights_greater_than_1d\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_solver_not_supported\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_no_support_multilabel\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_cv_sparse_svd\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_individual_penalties\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_intercept\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_shapes\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_singular\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sparse_svd\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_vs_lstsq\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_sample_weight\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_store_cv_values\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_cg_max_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_design_with_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_toy_ridge_object\"]",
  "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1",
  "patch_files": [
    "sklearn/cluster/affinity_propagation_.py",
    "sklearn/cluster/birch.py",
    "sklearn/cross_decomposition/pls_.py",
    "sklearn/decomposition/fastica_.py",
    "sklearn/gaussian_process/gpc.py",
    "sklearn/gaussian_process/gpr.py",
    "sklearn/linear_model/logistic.py",
    "sklearn/linear_model/ransac.py",
    "sklearn/linear_model/ridge.py"
  ],
  "test_patch_files": [
    "sklearn/cluster/tests/test_affinity_propagation.py",
    "sklearn/cluster/tests/test_birch.py",
    "sklearn/cross_decomposition/tests/test_pls.py",
    "sklearn/decomposition/tests/test_fastica.py",
    "sklearn/linear_model/tests/test_logistic.py",
    "sklearn/linear_model/tests/test_ransac.py",
    "sklearn/linear_model/tests/test_ridge.py"
  ],
  "patch_diff_details": {
    "sklearn/cluster/affinity_propagation_.py": {
      "diffs": [
        {
          "start_line_old": 393,
          "end_line_old": 393,
          "file_pos": 14,
          "file_context_length": 114236,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_affinity_propagation.26_affinity_propagation.27.2.1.1",
          "closest_snippet_line_distance": 162
        }
      ]
    },
    "sklearn/cluster/birch.py": {
      "diffs": [
        {
          "start_line_old": 18,
          "end_line_old": 18,
          "file_pos": 4,
          "file_context_length": 31176,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch_Birch.1",
          "closest_snippet_line_distance": 306
        },
        {
          "start_line_old": 629,
          "end_line_old": 629,
          "file_pos": 4,
          "file_context_length": 31176,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch_Birch.1",
          "closest_snippet_line_distance": 203
        }
      ]
    },
    "sklearn/cross_decomposition/pls_.py": {
      "diffs": [
        {
          "start_line_old": 19,
          "end_line_old": 19
        },
        {
          "start_line_old": 77,
          "end_line_old": 77
        }
      ]
    },
    "sklearn/decomposition/fastica_.py": {
      "diffs": [
        {
          "start_line_old": 18,
          "end_line_old": 18,
          "file_pos": 26,
          "file_context_length": 174137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/decomposition/fastica_.py__ica_par__ica_par.6.1",
          "closest_snippet_line_distance": 80
        },
        {
          "start_line_old": 119,
          "end_line_old": 119,
          "file_pos": 26,
          "file_context_length": 174137,
          "pos": 76,
          "context_length": 26544
        }
      ]
    },
    "sklearn/gaussian_process/gpc.py": {
      "diffs": [
        {
          "start_line_old": 22,
          "end_line_old": 22
        },
        {
          "start_line_old": 431,
          "end_line_old": 431
        }
      ]
    },
    "sklearn/gaussian_process/gpr.py": {
      "diffs": [
        {
          "start_line_old": 19,
          "end_line_old": 19
        },
        {
          "start_line_old": 464,
          "end_line_old": 464
        }
      ]
    },
    "sklearn/linear_model/logistic.py": {
      "diffs": [
        {
          "start_line_old": 32,
          "end_line_old": 32
        },
        {
          "start_line_old": 719,
          "end_line_old": 719
        }
      ]
    },
    "sklearn/linear_model/ransac.py": {
      "diffs": [
        {
          "start_line_old": 16,
          "end_line_old": 16
        },
        {
          "start_line_old": 456,
          "end_line_old": 456
        }
      ]
    },
    "sklearn/linear_model/ridge.py": {
      "diffs": [
        {
          "start_line_old": 34,
          "end_line_old": 34
        },
        {
          "start_line_old": 76,
          "end_line_old": 76
        }
      ]
    }
  },
  "vectors": 2896,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_ChangedBehaviorWarning_DataConversionWarning.1",
      "distance": 0.7604953050613403,
      "file_path": "sklearn/exceptions.py",
      "start_line": 40,
      "end_line": 71,
      "tokens": 216,
      "context_length": 216
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_DataDimensionalityWarning_EfficiencyWarning.1",
      "distance": 0.8689066171646118,
      "file_path": "sklearn/exceptions.py",
      "start_line": 74,
      "end_line": 96,
      "tokens": 186,
      "context_length": 402
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_FitFailedWarning_FitFailedWarning.1",
      "distance": 0.9443144798278809,
      "file_path": "sklearn/exceptions.py",
      "start_line": 99,
      "end_line": 128,
      "tokens": 341,
      "context_length": 743
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py_assert_warns_assert_warns.5.1",
      "distance": 0.9590370655059814,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 117,
      "end_line": 159,
      "tokens": 299,
      "context_length": 1042
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_NonBLASDotWarning_",
      "distance": 0.9919605255126953,
      "file_path": "sklearn/exceptions.py",
      "start_line": 131,
      "end_line": 157,
      "tokens": 175,
      "context_length": 1217
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.3.2",
      "distance": 1.046912670135498,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1576,
      "end_line": 1618,
      "tokens": 449,
      "context_length": 1666
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py_assert_warns_message_assert_warns_message.2",
      "distance": 1.0526506900787354,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 162,
      "end_line": 228,
      "tokens": 522,
      "context_length": 2188
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py_69_assert_no_warnings.2",
      "distance": 1.055663824081421,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 231,
      "end_line": 248,
      "tokens": 164,
      "context_length": 2352
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_clustering_check_clustering.38",
      "distance": 1.0697532892227173,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1145,
      "end_line": 1199,
      "tokens": 567,
      "context_length": 2919
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train_check_classifiers_train.7.22.y_prob.8.y_log_prob.3",
      "distance": 1.0782594680786133,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1253,
      "end_line": 1360,
      "tokens": 1123,
      "context_length": 4042
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py__CFSubcluster.merge_subcluster__CFSubcluster.radius.3.1",
      "distance": 1.0858041048049927,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 297,
      "end_line": 321,
      "tokens": 270,
      "context_length": 4312,
      "file_pos": 4
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_supervised_y_2d_check_supervised_y_2d.17",
      "distance": 1.086374282836914,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1414,
      "end_line": 1443,
      "tokens": 324,
      "context_length": 4636
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_np_DEFAULT_EPSILON.1",
      "distance": 1.0893988609313965,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 7,
      "end_line": 42,
      "tokens": 312,
      "context_length": 4948
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_nan_inf_check_estimators_nan_inf.rnd.13.2.10.1.4.1",
      "distance": 1.0940015316009521,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1008,
      "end_line": 1076,
      "tokens": 601,
      "context_length": 5549
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_classes_check_classifiers_classes.9.11.1",
      "distance": 1.094380259513855,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1446,
      "end_line": 1480,
      "tokens": 336,
      "context_length": 5885
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/__init__.py_15_35.4.__all__.1",
      "distance": 1.1017520427703857,
      "file_path": "sklearn/__init__.py",
      "start_line": 97,
      "end_line": 148,
      "tokens": 510,
      "context_length": 6395
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_1_24",
      "distance": 1.107102394104004,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 1,
      "end_line": 31,
      "tokens": 141,
      "context_length": 6536
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_methods_subset_invariance_check_methods_subset_invariance.rnd.11.4.2",
      "distance": 1.1086513996124268,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 661,
      "end_line": 696,
      "tokens": 341,
      "context_length": 6877
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_balanced_classifiers_check_class_weight_balanced_classifiers.10",
      "distance": 1.1274104118347168,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1621,
      "end_line": 1638,
      "tokens": 174,
      "context_length": 7051
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_train_check_regressors_train.23.1",
      "distance": 1.1275110244750977,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1511,
      "end_line": 1549,
      "tokens": 442,
      "context_length": 7493
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_dtype_object_check_complex_data.X.5",
      "distance": 1.1351099014282227,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 489,
      "end_line": 524,
      "tokens": 328,
      "context_length": 7821
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_sys_cd_fast",
      "distance": 1.1390513181686401,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 8,
      "end_line": 29,
      "tokens": 154,
      "context_length": 7975
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_transformer_data_not_an_array_check_transformers_unfitted.3.1",
      "distance": 1.1417042016983032,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 792,
      "end_line": 814,
      "tokens": 248,
      "context_length": 8223
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_int_check_regressors_int.18",
      "distance": 1.1469504833221436,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1483,
      "end_line": 1508,
      "tokens": 277,
      "context_length": 8500
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_1_MULTI_OUTPUT.1",
      "distance": 1.150274395942688,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1,
      "end_line": 72,
      "tokens": 625,
      "context_length": 9125
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py__IgnoreWarnings__IgnoreWarnings.__exit__.6",
      "distance": 1.1521480083465576,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 281,
      "end_line": 338,
      "tokens": 449,
      "context_length": 9574
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_supervised_y_no_nan_check_supervised_y_no_nan.estimator.7.3.1",
      "distance": 1.1532795429229736,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 141,
      "end_line": 161,
      "tokens": 203,
      "context_length": 9777
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_balanced_linear_classifier_check_class_weight_balanced_linear_classifier.18",
      "distance": 1.1550297737121582,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1641,
      "end_line": 1672,
      "tokens": 340,
      "context_length": 10117
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__mini_batch_convergence__mini_batch_convergence.28.1",
      "distance": 1.1560380458831787,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1162,
      "end_line": 1225,
      "tokens": 659,
      "context_length": 10776
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__yield_clustering_checks__yield_all_checks.13",
      "distance": 1.156060814857483,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 203,
      "end_line": 237,
      "tokens": 305,
      "context_length": 11081
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_transformer_general_check_transformer_general.6",
      "distance": 1.1619027853012085,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 779,
      "end_line": 789,
      "tokens": 142,
      "context_length": 11223
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py_clean_warning_registry__delete_folder.2.2.1.1",
      "distance": 1.16484534740448,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 711,
      "end_line": 745,
      "tokens": 240,
      "context_length": 11463
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py__fit_coordinate_descent.6__fit_coordinate_descent.7.1",
      "distance": 1.167320966720581,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 481,
      "end_line": 506,
      "tokens": 247,
      "context_length": 11710
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/learning_curve.py_1___all__.1",
      "distance": 1.1674071550369263,
      "file_path": "sklearn/learning_curve.py",
      "start_line": 1,
      "end_line": 25,
      "tokens": 145,
      "context_length": 11855
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch._check_fit_Birch._check_fit.6.1",
      "distance": 1.1701619625091553,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 540,
      "end_line": 553,
      "tokens": 140,
      "context_length": 11995,
      "file_pos": 11
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_pipeline_consistency_check_pipeline_consistency.14.2.4",
      "distance": 1.1734853982925415,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 894,
      "end_line": 928,
      "tokens": 372,
      "context_length": 12367
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_bench_bench.2.1",
      "distance": 1.1739983558654785,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 67,
      "end_line": 92,
      "tokens": 201,
      "context_length": 12568
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_overwrite_params_check_estimators_overwrite_params.16.8",
      "distance": 1.1797044277191162,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1675,
      "end_line": 1710,
      "tokens": 352,
      "context_length": 12920
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sample_weights_list_check_sample_weights_list.3.8",
      "distance": 1.1805040836334229,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 473,
      "end_line": 486,
      "tokens": 166,
      "context_length": 13086
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_2_xrange",
      "distance": 1.1816366910934448,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 10,
      "end_line": 27,
      "tokens": 126,
      "context_length": 13212
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_data_not_an_array_check_estimators_data_not_an_array.14",
      "distance": 1.1817612648010254,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1782,
      "end_line": 1802,
      "tokens": 200,
      "context_length": 13412
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_affinity_propagation.8_affinity_propagation.25",
      "distance": 1.1831986904144287,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 121,
      "end_line": 205,
      "tokens": 796,
      "context_length": 14208,
      "file_pos": 14
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifier_data_not_an_array_check_regressor_data_not_an_array.4",
      "distance": 1.1832941770553589,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1765,
      "end_line": 1779,
      "tokens": 211,
      "context_length": 14419
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/deprecation.py_DeprecationDict_",
      "distance": 1.1838501691818237,
      "file_path": "sklearn/utils/deprecation.py",
      "start_line": 107,
      "end_line": 135,
      "tokens": 244,
      "context_length": 14663
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_dont_overwrite_parameters_check_dont_overwrite_parameters.2.21",
      "distance": 1.1860053539276123,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 571,
      "end_line": 619,
      "tokens": 441,
      "context_length": 15104
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__yield_classifier_checks__yield_classifier_checks.2",
      "distance": 1.187434196472168,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 112,
      "end_line": 138,
      "tokens": 258,
      "context_length": 15362
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_affinity_propagation.26_affinity_propagation.27.2.1.1",
      "distance": 1.1880226135253906,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 207,
      "end_line": 231,
      "tokens": 278,
      "context_length": 15640,
      "file_pos": 15
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit2d_1feature_check_fit2d_1feature.rnd.16.2.1.1",
      "distance": 1.1891382932662964,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 727,
      "end_line": 758,
      "tokens": 297,
      "context_length": 15937
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_partial_fit_n_features_check_estimators_partial_fit_n_features.2.6.1",
      "distance": 1.1915785074234009,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1119,
      "end_line": 1142,
      "tokens": 185,
      "context_length": 16122
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_plot_train_losses_plot_test_scores.2.5",
      "distance": 1.1928316354751587,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 95,
      "end_line": 121,
      "tokens": 218,
      "context_length": 16340
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_one_label_check_classifiers_one_label.8.5.2.2",
      "distance": 1.1932282447814941,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1219,
      "end_line": 1250,
      "tokens": 258,
      "context_length": 16598
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_dtypes_check_estimators_dtypes.10.5.1.1",
      "distance": 1.1945555210113525,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 959,
      "end_line": 982,
      "tokens": 269,
      "context_length": 16867
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_linkage_comparison.py_1_datasets.1",
      "distance": 1.1968302726745605,
      "file_path": "examples/cluster/plot_linkage_comparison.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 576,
      "context_length": 17443
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit1d_check_fit1d.rnd.9",
      "distance": 1.1976827383041382,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 761,
      "end_line": 776,
      "tokens": 139,
      "context_length": 17582
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_no_decision_function_check_regressors_no_decision_function.rng.8.5",
      "distance": 1.1978102922439575,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1552,
      "end_line": 1573,
      "tokens": 214,
      "context_length": 17796
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch._fit_Birch._fit.17.1",
      "distance": 1.1999638080596924,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 451,
      "end_line": 500,
      "tokens": 447,
      "context_length": 18243,
      "file_pos": 16
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_assumptions.py_1_",
      "distance": 1.2001662254333496,
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 511,
      "context_length": 18754
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__nls_subproblem.6__nls_subproblem.8.1",
      "distance": 1.2052932977676392,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 106,
      "end_line": 149,
      "tokens": 401,
      "context_length": 19155
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sample_weights_pandas_series_check_sample_weights_pandas_series.estimator.2.1.7.1",
      "distance": 1.208303451538086,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 450,
      "end_line": 470,
      "tokens": 253,
      "context_length": 19408
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_warnings_LinearSVC",
      "distance": 1.208510160446167,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 1,
      "end_line": 245,
      "tokens": 104,
      "context_length": 19512
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch_Birch.1",
      "distance": 1.21297025680542,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 324,
      "end_line": 426,
      "tokens": 990,
      "context_length": 20502,
      "file_pos": 19
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/sklearn/cross_validation.py_1___all__.1",
      "distance": 1.2130666971206665,
      "file_path": "sklearn/cross_validation.py",
      "start_line": 1,
      "end_line": 59,
      "tokens": 389,
      "context_length": 20891
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_linkage_comparison.py_35_",
      "distance": 1.2131130695343018,
      "file_path": "examples/cluster/plot_linkage_comparison.py",
      "start_line": 82,
      "end_line": 150,
      "tokens": 559,
      "context_length": 21450
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sparsify_coefficients_check_sparsify_coefficients.15",
      "distance": 1.2163195610046387,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1742,
      "end_line": 1762,
      "tokens": 233,
      "context_length": 21683
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_1_k_means_elkan",
      "distance": 1.2174482345581055,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1,
      "end_line": 37,
      "tokens": 207,
      "context_length": 21890
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py_30_normalized_mutual_info_scorer.1",
      "distance": 1.217738389968872,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 469,
      "end_line": 533,
      "tokens": 744,
      "context_length": 22634
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_cluster_comparison.py_37_",
      "distance": 1.217799186706543,
      "file_path": "examples/cluster/plot_cluster_comparison.py",
      "start_line": 88,
      "end_line": 184,
      "tokens": 833,
      "context_length": 23467
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit2d_predict1d_check_fit2d_predict1d.rnd.11.1.1",
      "distance": 1.2225453853607178,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 622,
      "end_line": 644,
      "tokens": 221,
      "context_length": 23688
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/pairwise.py_1__sparse_manhattan",
      "distance": 1.2227352857589722,
      "file_path": "sklearn/metrics/pairwise.py",
      "start_line": 1,
      "end_line": 30,
      "tokens": 131,
      "context_length": 23819
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_check_array.13_check_array.18.1",
      "distance": 1.2231669425964355,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 477,
      "end_line": 550,
      "tokens": 839,
      "context_length": 24658
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_set_checking_parameters_set_checking_parameters.params.12.3",
      "distance": 1.223196268081665,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 291,
      "end_line": 344,
      "tokens": 520,
      "context_length": 25178
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/optimize.py_1__LineSearchError.1",
      "distance": 1.22397780418396,
      "file_path": "sklearn/utils/optimize.py",
      "start_line": 1,
      "end_line": 24,
      "tokens": 139,
      "context_length": 25317
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/examples/covariance/plot_outlier_detection.py_27_",
      "distance": 1.2240655422210693,
      "file_path": "examples/covariance/plot_outlier_detection.py",
      "start_line": 77,
      "end_line": 130,
      "tokens": 632,
      "context_length": 25949
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_clusterer_compute_labels_predict_check_clusterer_compute_labels_predict.4.2.5",
      "distance": 1.2241723537445068,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1202,
      "end_line": 1216,
      "tokens": 146,
      "context_length": 26095
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit2d_1sample_check_fit2d_1sample.rnd.10.2.1.1",
      "distance": 1.2258901596069336,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 699,
      "end_line": 724,
      "tokens": 234,
      "context_length": 26329
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/fastica_.py__ica_par__ica_par.6.1",
      "distance": 1.22654390335083,
      "file_path": "sklearn/decomposition/fastica_.py",
      "start_line": 98,
      "end_line": 121,
      "tokens": 215,
      "context_length": 26544,
      "file_pos": 26
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_transformer_n_iter_check_transformer_n_iter.estimator.2.5.2.1",
      "distance": 1.2299139499664307,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1920,
      "end_line": 1943,
      "tokens": 308,
      "context_length": 26852
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_9___all__.1",
      "distance": 1.2310574054718018,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 10,
      "end_line": 65,
      "tokens": 335,
      "context_length": 27187
    }
  ],
  "files": [
    {
      "file_path": "sklearn/exceptions.py",
      "position": 1,
      "tokens": 1186,
      "context_length": 1186
    },
    {
      "file_path": "sklearn/utils/testing.py",
      "position": 2,
      "tokens": 6788,
      "context_length": 7974
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 3,
      "tokens": 17919,
      "context_length": 25893
    },
    {
      "file_path": "sklearn/cluster/birch.py",
      "position": 4,
      "tokens": 5283,
      "context_length": 31176
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 5,
      "tokens": 12141,
      "context_length": 43317
    },
    {
      "file_path": "sklearn/__init__.py",
      "position": 6,
      "tokens": 1221,
      "context_length": 44538
    },
    {
      "file_path": "sklearn/utils/validation.py",
      "position": 7,
      "tokens": 7263,
      "context_length": 51801
    },
    {
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "position": 8,
      "tokens": 20402,
      "context_length": 72203
    },
    {
      "file_path": "sklearn/cluster/k_means_.py",
      "position": 9,
      "tokens": 13725,
      "context_length": 85928
    },
    {
      "file_path": "sklearn/decomposition/nmf.py",
      "position": 10,
      "tokens": 11683,
      "context_length": 97611
    },
    {
      "file_path": "sklearn/learning_curve.py",
      "position": 11,
      "tokens": 3408,
      "context_length": 101019
    },
    {
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "position": 12,
      "tokens": 1948,
      "context_length": 102967
    },
    {
      "file_path": "sklearn/cluster/hierarchical.py",
      "position": 13,
      "tokens": 8090,
      "context_length": 111057
    },
    {
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "position": 14,
      "tokens": 3179,
      "context_length": 114236
    },
    {
      "file_path": "sklearn/utils/deprecation.py",
      "position": 15,
      "tokens": 930,
      "context_length": 115166
    },
    {
      "file_path": "examples/cluster/plot_linkage_comparison.py",
      "position": 16,
      "tokens": 1135,
      "context_length": 116301
    },
    {
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "position": 17,
      "tokens": 533,
      "context_length": 116834
    },
    {
      "file_path": "benchmarks/bench_plot_nmf.py",
      "position": 18,
      "tokens": 3913,
      "context_length": 120747
    },
    {
      "file_path": "sklearn/svm/classes.py",
      "position": 19,
      "tokens": 10551,
      "context_length": 131298
    },
    {
      "file_path": "sklearn/cross_validation.py",
      "position": 20,
      "tokens": 17492,
      "context_length": 148790
    },
    {
      "file_path": "sklearn/metrics/scorer.py",
      "position": 21,
      "tokens": 4874,
      "context_length": 153664
    },
    {
      "file_path": "examples/cluster/plot_cluster_comparison.py",
      "position": 22,
      "tokens": 1531,
      "context_length": 155195
    },
    {
      "file_path": "sklearn/metrics/pairwise.py",
      "position": 23,
      "tokens": 11532,
      "context_length": 166727
    },
    {
      "file_path": "sklearn/utils/optimize.py",
      "position": 24,
      "tokens": 1491,
      "context_length": 168218
    },
    {
      "file_path": "examples/covariance/plot_outlier_detection.py",
      "position": 25,
      "tokens": 1219,
      "context_length": 169437
    },
    {
      "file_path": "sklearn/decomposition/fastica_.py",
      "position": 26,
      "tokens": 4700,
      "context_length": 174137
    },
    {
      "file_path": "sklearn/preprocessing/data.py",
      "position": 27,
      "tokens": 25898,
      "context_length": 200035
    }
  ]
}