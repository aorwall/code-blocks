{
  "instance_id": "scikit-learn__scikit-learn-10870",
  "model_patch": "diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py\nindex 1cf8a0fb9..97b1be54f 100644\n--- a/sklearn/mixture/base.py\n+++ b/sklearn/mixture/base.py\n@@ -256,6 +256,8 @@ class BaseMixture(six.with_metaclass(ABCMeta, DensityMixin, BaseEstimator)):\n                 best_params = self._get_parameters()\n                 best_n_iter = n_iter\n \n+        self.lower_bound_ = max_lower_bound\n+\n         if not self.converged_:\n             warnings.warn('Initialization %d did not converge. '\n                           'Try different init parameters, '\ndiff --git a/sklearn/mixture/tests/test_gaussian_mixture.py b/sklearn/mixture/tests/test_gaussian_mixture.py\nindex 3b17bf17b..7802aa335 100644\n--- a/sklearn/mixture/tests/test_gaussian_mixture.py\n+++ b/sklearn/mixture/tests/test_gaussian_mixture.py\n@@ -990,15 +990,16 @@ def test_sample():\n \n @ignore_warnings(category=ConvergenceWarning)\n def test_init():\n-    # We check that by increasing the n_init number we have a better solution\n+    # Test that GaussianMixture with n_init > 1 indeed sets the lower_bound_ to the\n+    # max lower bound across all initializations.\n     random_state = 0\n     rand_data = RandomData(np.random.RandomState(random_state), scale=1)\n     n_components = rand_data.n_components\n     X = rand_data.X['full']\n \n-    gmm1 = GaussianMixture(n_components=n_components, n_init=1,\n-                           max_iter=1, random_state=random_state).fit(X)\n-    gmm2 = GaussianMixture(n_components=n_components, n_init=100,\n-                           max_iter=1, random_state=random_state).fit(X)\n-\n-    assert_greater(gmm2.lower_bound_, gmm1.lower_bound_)\n+    for random_state in range(10):  # Test across multiple random states\n+        gmm1 = GaussianMixture(n_components=n_components, n_init=1,\n+                               max_iter=1, random_state=random_state).fit(X)\n+        gmm2 = GaussianMixture(n_components=n_components, n_init=10,\n+                               max_iter=1, random_state=random_state).fit(X)\n+        assert gmm2.lower_bound_ >= gmm1.lower_bound_, random_state\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "pass",
  "model_patch_files": [
    "sklearn/mixture/base.py",
    "sklearn/mixture/tests/test_gaussian_mixture.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "b0e91e4110942e5b3c4333b1c6b6dfefbd1a6124",
  "patch": "diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py\n--- a/sklearn/mixture/base.py\n+++ b/sklearn/mixture/base.py\n@@ -172,11 +172,14 @@ def _initialize(self, X, resp):\n     def fit(self, X, y=None):\n         \"\"\"Estimate model parameters with the EM algorithm.\n \n-        The method fits the model `n_init` times and set the parameters with\n+        The method fits the model ``n_init`` times and sets the parameters with\n         which the model has the largest likelihood or lower bound. Within each\n-        trial, the method iterates between E-step and M-step for `max_iter`\n+        trial, the method iterates between E-step and M-step for ``max_iter``\n         times until the change of likelihood or lower bound is less than\n-        `tol`, otherwise, a `ConvergenceWarning` is raised.\n+        ``tol``, otherwise, a ``ConvergenceWarning`` is raised.\n+        If ``warm_start`` is ``True``, then ``n_init`` is ignored and a single\n+        initialization is performed upon the first call. Upon consecutive\n+        calls, training starts where it left off.\n \n         Parameters\n         ----------\n@@ -232,27 +235,28 @@ def fit_predict(self, X, y=None):\n \n             if do_init:\n                 self._initialize_parameters(X, random_state)\n-                self.lower_bound_ = -np.infty\n+\n+            lower_bound = (-np.infty if do_init else self.lower_bound_)\n \n             for n_iter in range(1, self.max_iter + 1):\n-                prev_lower_bound = self.lower_bound_\n+                prev_lower_bound = lower_bound\n \n                 log_prob_norm, log_resp = self._e_step(X)\n                 self._m_step(X, log_resp)\n-                self.lower_bound_ = self._compute_lower_bound(\n+                lower_bound = self._compute_lower_bound(\n                     log_resp, log_prob_norm)\n \n-                change = self.lower_bound_ - prev_lower_bound\n+                change = lower_bound - prev_lower_bound\n                 self._print_verbose_msg_iter_end(n_iter, change)\n \n                 if abs(change) < self.tol:\n                     self.converged_ = True\n                     break\n \n-            self._print_verbose_msg_init_end(self.lower_bound_)\n+            self._print_verbose_msg_init_end(lower_bound)\n \n-            if self.lower_bound_ > max_lower_bound:\n-                max_lower_bound = self.lower_bound_\n+            if lower_bound > max_lower_bound:\n+                max_lower_bound = lower_bound\n                 best_params = self._get_parameters()\n                 best_n_iter = n_iter\n \n@@ -265,6 +269,7 @@ def fit_predict(self, X, y=None):\n \n         self._set_parameters(best_params)\n         self.n_iter_ = best_n_iter\n+        self.lower_bound_ = max_lower_bound\n \n         return log_resp.argmax(axis=1)\n \ndiff --git a/sklearn/mixture/gaussian_mixture.py b/sklearn/mixture/gaussian_mixture.py\n--- a/sklearn/mixture/gaussian_mixture.py\n+++ b/sklearn/mixture/gaussian_mixture.py\n@@ -512,6 +512,8 @@ class GaussianMixture(BaseMixture):\n         If 'warm_start' is True, the solution of the last fitting is used as\n         initialization for the next call of fit(). This can speed up\n         convergence when fit is called several times on similar problems.\n+        In that case, 'n_init' is ignored and only a single initialization\n+        occurs upon the first call.\n         See :term:`the Glossary <warm_start>`.\n \n     verbose : int, default to 0.\n@@ -575,7 +577,8 @@ class GaussianMixture(BaseMixture):\n         Number of step used by the best fit of EM to reach the convergence.\n \n     lower_bound_ : float\n-        Log-likelihood of the best fit of EM.\n+        Lower bound value on the log-likelihood (of the training data with\n+        respect to the model) of the best fit of EM.\n \n     See Also\n     --------\n",
  "test_patch": "diff --git a/sklearn/mixture/tests/test_gaussian_mixture.py b/sklearn/mixture/tests/test_gaussian_mixture.py\n--- a/sklearn/mixture/tests/test_gaussian_mixture.py\n+++ b/sklearn/mixture/tests/test_gaussian_mixture.py\n@@ -764,7 +764,6 @@ def test_gaussian_mixture_verbose():\n \n \n def test_warm_start():\n-\n     random_state = 0\n     rng = np.random.RandomState(random_state)\n     n_samples, n_features, n_components = 500, 2, 2\n@@ -806,6 +805,25 @@ def test_warm_start():\n     assert_true(h.converged_)\n \n \n+@ignore_warnings(category=ConvergenceWarning)\n+def test_convergence_detected_with_warm_start():\n+    # We check that convergence is detected when warm_start=True\n+    rng = np.random.RandomState(0)\n+    rand_data = RandomData(rng)\n+    n_components = rand_data.n_components\n+    X = rand_data.X['full']\n+\n+    for max_iter in (1, 2, 50):\n+        gmm = GaussianMixture(n_components=n_components, warm_start=True,\n+                              max_iter=max_iter, random_state=rng)\n+        for _ in range(100):\n+            gmm.fit(X)\n+            if gmm.converged_:\n+                break\n+        assert gmm.converged_\n+        assert max_iter >= gmm.n_iter_\n+\n+\n def test_score():\n     covar_type = 'full'\n     rng = np.random.RandomState(0)\n@@ -991,14 +1009,14 @@ def test_sample():\n @ignore_warnings(category=ConvergenceWarning)\n def test_init():\n     # We check that by increasing the n_init number we have a better solution\n-    random_state = 0\n-    rand_data = RandomData(np.random.RandomState(random_state), scale=1)\n-    n_components = rand_data.n_components\n-    X = rand_data.X['full']\n+    for random_state in range(25):\n+        rand_data = RandomData(np.random.RandomState(random_state), scale=1)\n+        n_components = rand_data.n_components\n+        X = rand_data.X['full']\n \n-    gmm1 = GaussianMixture(n_components=n_components, n_init=1,\n-                           max_iter=1, random_state=random_state).fit(X)\n-    gmm2 = GaussianMixture(n_components=n_components, n_init=100,\n-                           max_iter=1, random_state=random_state).fit(X)\n+        gmm1 = GaussianMixture(n_components=n_components, n_init=1,\n+                               max_iter=1, random_state=random_state).fit(X)\n+        gmm2 = GaussianMixture(n_components=n_components, n_init=10,\n+                               max_iter=1, random_state=random_state).fit(X)\n \n-    assert_greater(gmm2.lower_bound_, gmm1.lower_bound_)\n+        assert gmm2.lower_bound_ >= gmm1.lower_bound_\n",
  "problem_statement": "In Gaussian mixtures, when n_init > 1, the lower_bound_ is not always the max\n#### Description\r\nIn Gaussian mixtures, when `n_init` is set to any value greater than 1, the `lower_bound_` is not the max lower bound across all initializations, but just the lower bound of the last initialization.\r\n\r\nThe bug can be fixed by adding the following line just before `return self` in `BaseMixture.fit()`:\r\n\r\n```python\r\nself.lower_bound_ = max_lower_bound\r\n```\r\n\r\nThe test that should have caught this bug is `test_init()` in `mixture/tests/test_gaussian_mixture.py`, but it just does a single test, so it had a 50% chance of missing the issue. It should be updated to try many random states.\r\n\r\n#### Steps/Code to Reproduce\r\n```python\r\nimport numpy as np\r\nfrom sklearn.mixture import GaussianMixture\r\n\r\nX = np.random.rand(1000, 10)\r\nfor random_state in range(100):\r\n    gm1 = GaussianMixture(n_components=2, n_init=1, random_state=random_state).fit(X)\r\n    gm2 = GaussianMixture(n_components=2, n_init=10, random_state=random_state).fit(X)\r\n    assert gm2.lower_bound_ > gm1.lower_bound_, random_state\r\n```\r\n\r\n#### Expected Results\r\nNo error.\r\n\r\n#### Actual Results\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 4, in <module>\r\nAssertionError: 4\r\n```\r\n\r\n#### Versions\r\n\r\n```\r\n>>> import platform; print(platform.platform())\r\nDarwin-17.4.0-x86_64-i386-64bit\r\n>>> import sys; print(\"Python\", sys.version)\r\nPython 3.6.4 (default, Dec 21 2017, 20:33:21)\r\n[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.38)]\r\n>>> import numpy; print(\"NumPy\", numpy.__version__)\r\nNumPy 1.14.2\r\n>>> import scipy; print(\"SciPy\", scipy.__version__)\r\nSciPy 1.0.0\r\n>>> import sklearn; print(\"Scikit-Learn\", sklearn.__version__)\r\nScikit-Learn 0.19.1\r\n```\nIn Gaussian mixtures, when n_init > 1, the lower_bound_ is not always the max\n#### Description\r\nIn Gaussian mixtures, when `n_init` is set to any value greater than 1, the `lower_bound_` is not the max lower bound across all initializations, but just the lower bound of the last initialization.\r\n\r\nThe bug can be fixed by adding the following line just before `return self` in `BaseMixture.fit()`:\r\n\r\n```python\r\nself.lower_bound_ = max_lower_bound\r\n```\r\n\r\nThe test that should have caught this bug is `test_init()` in `mixture/tests/test_gaussian_mixture.py`, but it just does a single test, so it had a 50% chance of missing the issue. It should be updated to try many random states.\r\n\r\n#### Steps/Code to Reproduce\r\n```python\r\nimport numpy as np\r\nfrom sklearn.mixture import GaussianMixture\r\n\r\nX = np.random.rand(1000, 10)\r\nfor random_state in range(100):\r\n    gm1 = GaussianMixture(n_components=2, n_init=1, random_state=random_state).fit(X)\r\n    gm2 = GaussianMixture(n_components=2, n_init=10, random_state=random_state).fit(X)\r\n    assert gm2.lower_bound_ > gm1.lower_bound_, random_state\r\n```\r\n\r\n#### Expected Results\r\nNo error.\r\n\r\n#### Actual Results\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 4, in <module>\r\nAssertionError: 4\r\n```\r\n\r\n#### Versions\r\n\r\n```\r\n>>> import platform; print(platform.platform())\r\nDarwin-17.4.0-x86_64-i386-64bit\r\n>>> import sys; print(\"Python\", sys.version)\r\nPython 3.6.4 (default, Dec 21 2017, 20:33:21)\r\n[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.38)]\r\n>>> import numpy; print(\"NumPy\", numpy.__version__)\r\nNumPy 1.14.2\r\n>>> import scipy; print(\"SciPy\", scipy.__version__)\r\nSciPy 1.0.0\r\n>>> import sklearn; print(\"Scikit-Learn\", sklearn.__version__)\r\nScikit-Learn 0.19.1\r\n```\n",
  "hints_text": "\n",
  "created_at": "2018-03-25T14:06:57Z",
  "version": "0.20",
  "FAIL_TO_PASS": "[\"sklearn/mixture/tests/test_gaussian_mixture.py::test_init\"]",
  "PASS_TO_PASS": "[\"sklearn/mixture/tests/test_gaussian_mixture.py::test_bic_1d_1component\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_X\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_means\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_precisions\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_weights\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_compute_log_det_cholesky\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_convergence_detected_with_warm_start\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_aic_bic\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_attributes\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_estimate_log_prob_resp\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_best_params\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_convergence_warning\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_predict\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_log_probabilities\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_n_parameters\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_predict_predict_proba\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_verbose\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_suffstat_sk_spherical\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_monotonic_likelihood\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_multiple_init\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_property\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_regularisation\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_sample\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_score\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_score_samples\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_diag\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_full\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_tied\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_warm_start\"]",
  "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1",
  "patch_files": [
    "sklearn/mixture/base.py",
    "sklearn/mixture/gaussian_mixture.py"
  ],
  "test_patch_files": [
    "sklearn/mixture/tests/test_gaussian_mixture.py"
  ],
  "patch_diff_details": {
    "sklearn/mixture/base.py": {
      "diffs": [
        {
          "start_line_old": 175,
          "end_line_old": 179,
          "file_pos": 4,
          "file_context_length": 18882,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._estimate_log_prob_resp_BaseMixture._print_verbose_msg_init_beg.2.2.self._iter_prev_time.1",
          "closest_snippet_line_distance": 302,
          "pos": 114,
          "context_length": 50522
        },
        {
          "start_line_old": 235,
          "end_line_old": 255,
          "file_pos": 4,
          "file_context_length": 18882,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._m_step_BaseMixture._set_parameters.1",
          "closest_snippet_line_distance": 55,
          "pos": 97,
          "context_length": 42164
        },
        {
          "start_line_old": 268,
          "end_line_old": 268,
          "file_pos": 4,
          "file_context_length": 18882,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._m_step_BaseMixture._set_parameters.1",
          "closest_snippet_line_distance": 22,
          "pos": 97,
          "context_length": 42164
        }
      ]
    },
    "sklearn/mixture/gaussian_mixture.py": {
      "diffs": [
        {
          "start_line_old": 515,
          "end_line_old": 515,
          "file_pos": 2,
          "file_context_length": 13530,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._initialize_GaussianMixture._initialize.7.5.self.precisions_cholesky_.1",
          "closest_snippet_line_distance": 110,
          "pos": 9,
          "context_length": 5624
        },
        {
          "start_line_old": 578,
          "end_line_old": 578,
          "file_pos": 2,
          "file_context_length": 13530,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._initialize_GaussianMixture._initialize.7.5.self.precisions_cholesky_.1",
          "closest_snippet_line_distance": 47,
          "pos": 9,
          "context_length": 5624
        }
      ]
    }
  },
  "vectors": 2866,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._compute_lower_bound_BayesianGaussianMixture._compute_lower_bound.10.1",
      "distance": 0.8451828956604004,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 702,
      "end_line": 749,
      "tokens": 470,
      "context_length": 470
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture.__init___GaussianMixture.__init__.self.precisions_init.1",
      "distance": 0.8650423288345337,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 586,
      "end_line": 600,
      "tokens": 197,
      "context_length": 667,
      "file_pos": 2
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._check_parameters_GaussianMixture._check_parameters.6.self.precisions_init.1",
      "distance": 0.8793271780014038,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 602,
      "end_line": 623,
      "tokens": 211,
      "context_length": 878,
      "file_pos": 2
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_means_parameters_BayesianGaussianMixture._check_means_parameters.4.2.2",
      "distance": 0.8845030665397644,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 369,
      "end_line": 393,
      "tokens": 207,
      "context_length": 1085
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._checkcovariance_prior_parameter_BayesianGaussianMixture._checkcovariance_prior_parameter.3.6.1",
      "distance": 0.8852202892303467,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 413,
      "end_line": 452,
      "tokens": 419,
      "context_length": 1504
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._estimate_log_prob_GaussianMixture._get_parameters.1.1",
      "distance": 0.8978302478790283,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 677,
      "end_line": 692,
      "tokens": 148,
      "context_length": 1652,
      "file_pos": 2
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._initialize_GaussianMixture._initialize.7.5.self.precisions_cholesky_.1",
      "distance": 0.9229769706726074,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 625,
      "end_line": 656,
      "tokens": 309,
      "context_length": 1961,
      "file_pos": 2
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture.1_BayesianGaussianMixture.1",
      "distance": 0.9274581074714661,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 66,
      "end_line": 307,
      "tokens": 2354,
      "context_length": 4315
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture_GaussianMixture.1",
      "distance": 0.9281892776489258,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 435,
      "end_line": 584,
      "tokens": 1309,
      "context_length": 5624,
      "file_pos": 2
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture.__init___BayesianGaussianMixture.__init__.self.covariance_prior.1",
      "distance": 0.9316456913948059,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 309,
      "end_line": 329,
      "tokens": 270,
      "context_length": 5894
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_weights_parameters_BayesianGaussianMixture._check_weights_parameters.2.3.1",
      "distance": 0.9385676383972168,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 357,
      "end_line": 367,
      "tokens": 123,
      "context_length": 6017
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_precision_parameters_BayesianGaussianMixture._check_precision_parameters.3.3.1",
      "distance": 0.9401512145996094,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 395,
      "end_line": 411,
      "tokens": 169,
      "context_length": 6186
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._set_parameters_GaussianMixture._set_parameters.4.4.self.precisions_.1",
      "distance": 0.9429370164871216,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 694,
      "end_line": 710,
      "tokens": 196,
      "context_length": 6382,
      "file_pos": 2
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_sin.py_12_",
      "distance": 0.9534189105033875,
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "start_line": 103,
      "end_line": 155,
      "tokens": 644,
      "context_length": 7026
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_1__check_weights.8.1",
      "distance": 0.9607794284820557,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 1,
      "end_line": 51,
      "tokens": 326,
      "context_length": 7352,
      "file_pos": 3
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_parameters_BayesianGaussianMixture._check_parameters.7",
      "distance": 0.9621648788452148,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 331,
      "end_line": 355,
      "tokens": 236,
      "context_length": 7588
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_log_prob_BayesianGaussianMixture._estimate_log_prob.6.1",
      "distance": 0.9633216857910156,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 687,
      "end_line": 700,
      "tokens": 177,
      "context_length": 7765
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._check_parameters_BaseMixture._initialize_parameters.4",
      "distance": 0.9803739190101624,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 124,
      "end_line": 158,
      "tokens": 261,
      "context_length": 8026,
      "file_pos": 4
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._get_parameters_",
      "distance": 0.9811921119689941,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 751,
      "end_line": 786,
      "tokens": 363,
      "context_length": 8389
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._check_initial_parameters_BaseMixture._check_initial_parameters.8",
      "distance": 0.994555652141571,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 88,
      "end_line": 122,
      "tokens": 289,
      "context_length": 8678,
      "file_pos": 4
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_selection.py_1_Y_.1",
      "distance": 1.004178524017334,
      "file_path": "examples/mixture/plot_gmm_selection.py",
      "start_line": 1,
      "end_line": 77,
      "tokens": 657,
      "context_length": 9335
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_log_weights_BayesianGaussianMixture._estimate_log_weights.1.5.2.1",
      "distance": 1.0082621574401855,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 674,
      "end_line": 685,
      "tokens": 154,
      "context_length": 9489
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._n_parameters_GaussianMixture._n_parameters.5.1",
      "distance": 1.0109474658966064,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 712,
      "end_line": 724,
      "tokens": 171,
      "context_length": 9660,
      "file_pos": 5
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._initialize_BayesianGaussianMixture._initialize.5",
      "distance": 1.0183089971542358,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 454,
      "end_line": 468,
      "tokens": 125,
      "context_length": 9785
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_is_fitted_BayesianGaussianMixture._m_step.6",
      "distance": 1.024796485900879,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 649,
      "end_line": 672,
      "tokens": 219,
      "context_length": 10004
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_means_BayesianGaussianMixture._estimate_means.self.means_.1",
      "distance": 1.031083345413208,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 488,
      "end_line": 500,
      "tokens": 119,
      "context_length": 10123
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm.py_10_",
      "distance": 1.037355661392212,
      "file_path": "examples/mixture/plot_gmm.py",
      "start_line": 68,
      "end_line": 89,
      "tokens": 235,
      "context_length": 10358
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture.sample_BaseMixture.sample.9.1",
      "distance": 1.0377742052078247,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 389,
      "end_line": 436,
      "tokens": 389,
      "context_length": 10747,
      "file_pos": 6
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture.bic_",
      "distance": 1.0382025241851807,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 726,
      "end_line": 754,
      "tokens": 181,
      "context_length": 10928,
      "file_pos": 6
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._print_verbose_msg_iter_end_",
      "distance": 1.0385360717773438,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 512,
      "end_line": 530,
      "tokens": 235,
      "context_length": 11163,
      "file_pos": 6
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_concentration_prior.py_1_9",
      "distance": 1.052794337272644,
      "file_path": "examples/mixture/plot_concentration_prior.py",
      "start_line": 1,
      "end_line": 40,
      "tokens": 331,
      "context_length": 11494
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_GaussianNB._joint_log_likelihood__ALPHA_MIN.1",
      "distance": 1.0588181018829346,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 429,
      "end_line": 444,
      "tokens": 169,
      "context_length": 11663
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_1_check_is_fitted",
      "distance": 1.0589579343795776,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 1,
      "end_line": 18,
      "tokens": 142,
      "context_length": 11805
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_concentration_prior.py_12_",
      "distance": 1.0604698657989502,
      "file_path": "examples/mixture/plot_concentration_prior.py",
      "start_line": 87,
      "end_line": 137,
      "tokens": 571,
      "context_length": 12376
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_pdf.py_1_",
      "distance": 1.0615551471710205,
      "file_path": "examples/mixture/plot_gmm_pdf.py",
      "start_line": 1,
      "end_line": 51,
      "tokens": 398,
      "context_length": 12774
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/examples/gaussian_process/plot_gpr_noisy.py_1_33",
      "distance": 1.0635510683059692,
      "file_path": "examples/gaussian_process/plot_gpr_noisy.py",
      "start_line": 1,
      "end_line": 67,
      "tokens": 747,
      "context_length": 13521
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_covariances.py_iris_",
      "distance": 1.0638340711593628,
      "file_path": "examples/mixture/plot_gmm_covariances.py",
      "start_line": 68,
      "end_line": 135,
      "tokens": 599,
      "context_length": 14120
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__check_precisions__check_precisions.7.1",
      "distance": 1.0642458200454712,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 98,
      "end_line": 137,
      "tokens": 318,
      "context_length": 14438,
      "file_pos": 11
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_nan_inf_check_estimators_nan_inf.rnd.13.2.10.1.4.1",
      "distance": 1.07453453540802,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1082,
      "end_line": 1150,
      "tokens": 601,
      "context_length": 15039
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_stability_low_dim_dense.py_1_n_clusters.1",
      "distance": 1.0750601291656494,
      "file_path": "examples/cluster/plot_kmeans_stability_low_dim_dense.py",
      "start_line": 1,
      "end_line": 52,
      "tokens": 391,
      "context_length": 15430
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm.py_1_color_iter.1",
      "distance": 1.0760762691497803,
      "file_path": "examples/mixture/plot_gmm.py",
      "start_line": 1,
      "end_line": 36,
      "tokens": 289,
      "context_length": 15719
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__check_means__check_means.4.1",
      "distance": 1.0773013830184937,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 54,
      "end_line": 74,
      "tokens": 133,
      "context_length": 15852,
      "file_pos": 13
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._m_step_GaussianMixture._m_step.self.precisions_cholesky_.1",
      "distance": 1.0798314809799194,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 658,
      "end_line": 675,
      "tokens": 174,
      "context_length": 16026,
      "file_pos": 13
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_stability_low_dim_dense.py_25_",
      "distance": 1.0799789428710938,
      "file_path": "examples/cluster/plot_kmeans_stability_low_dim_dense.py",
      "start_line": 70,
      "end_line": 120,
      "tokens": 506,
      "context_length": 16532
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_weights_BayesianGaussianMixture._estimate_weights.2.4.self.weight_concentration_.1",
      "distance": 1.0804378986358643,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 470,
      "end_line": 486,
      "tokens": 166,
      "context_length": 16698
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_sin.py_1_color_iter.1",
      "distance": 1.0857529640197754,
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "start_line": 1,
      "end_line": 54,
      "tokens": 464,
      "context_length": 17162
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/kernels.py_Hyperparameter.__new___Hyperparameter.__eq__.1.1",
      "distance": 1.0879426002502441,
      "file_path": "sklearn/gaussian_process/kernels.py",
      "start_line": 93,
      "end_line": 116,
      "tokens": 291,
      "context_length": 17453
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_GaussianNB._partial_fit_GaussianNB._partial_fit.14.1",
      "distance": 1.0906633138656616,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 311,
      "end_line": 399,
      "tokens": 802,
      "context_length": 18255
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_BaseGradientBoosting._check_params_BaseGradientBoosting._check_params.14.1",
      "distance": 1.0930156707763672,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 810,
      "end_line": 893,
      "tokens": 806,
      "context_length": 19061
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_adjusted_for_chance_measures.py_score_funcs_",
      "distance": 1.0934319496154785,
      "file_path": "examples/cluster/plot_adjusted_for_chance_measures.py",
      "start_line": 58,
      "end_line": 123,
      "tokens": 542,
      "context_length": 19603
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_glmnet.py_10_",
      "distance": 1.0950331687927246,
      "file_path": "benchmarks/bench_glmnet.py",
      "start_line": 47,
      "end_line": 129,
      "tokens": 796,
      "context_length": 20399
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGD._validate_params_BaseSGD._validate_params.self._max_iter.1",
      "distance": 1.102043867111206,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 90,
      "end_line": 149,
      "tokens": 708,
      "context_length": 21107
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_GaussianNB._partial_fit.15_GaussianNB._partial_fit.19.1",
      "distance": 1.1033604145050049,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 401,
      "end_line": 427,
      "tokens": 246,
      "context_length": 21353
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__PGNMF._fit_transform__PGNMF._fit_transform.13.1",
      "distance": 1.1038918495178223,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 231,
      "end_line": 278,
      "tokens": 530,
      "context_length": 21883
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sgd_regression.py_np_",
      "distance": 1.1050351858139038,
      "file_path": "benchmarks/bench_sgd_regression.py",
      "start_line": 4,
      "end_line": 151,
      "tokens": 1314,
      "context_length": 23197
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_GaussianNB_GaussianNB.__init__.self.var_smoothing.1",
      "distance": 1.105112075805664,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 107,
      "end_line": 166,
      "tokens": 542,
      "context_length": 23739
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__check_precision_positivity__check_precisions_full.2.1",
      "distance": 1.1084506511688232,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 77,
      "end_line": 95,
      "tokens": 180,
      "context_length": 23919,
      "file_pos": 20
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_clustering_check_clustering.39",
      "distance": 1.1085164546966553,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1226,
      "end_line": 1284,
      "tokens": 600,
      "context_length": 24519
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_mnist.py_ESTIMATORS_ESTIMATORS.1",
      "distance": 1.1094908714294434,
      "file_path": "benchmarks/bench_mnist.py",
      "start_line": 85,
      "end_line": 106,
      "tokens": 314,
      "context_length": 24833
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/examples/gaussian_process/plot_gpr_noisy.py_34_",
      "distance": 1.111189365386963,
      "file_path": "examples/gaussian_process/plot_gpr_noisy.py",
      "start_line": 68,
      "end_line": 98,
      "tokens": 353,
      "context_length": 25186
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/examples/gaussian_process/plot_gpr_noisy_targets.py_1_56",
      "distance": 1.1133214235305786,
      "file_path": "examples/gaussian_process/plot_gpr_noisy_targets.py",
      "start_line": 1,
      "end_line": 100,
      "tokens": 757,
      "context_length": 25943
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_covariances.py_1_colors.1",
      "distance": 1.1143003702163696,
      "file_path": "examples/mixture/plot_gmm_covariances.py",
      "start_line": 1,
      "end_line": 44,
      "tokens": 282,
      "context_length": 26225
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture_BaseMixture.__init__.self.verbose_interval.1",
      "distance": 1.1143195629119873,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 67,
      "end_line": 86,
      "tokens": 170,
      "context_length": 26395,
      "file_pos": 22
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train.9_check_classifiers_train.9.21.y_prob.8.y_log_prob.3",
      "distance": 1.1152074337005615,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1354,
      "end_line": 1451,
      "tokens": 1021,
      "context_length": 27416
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_precisions_BayesianGaussianMixture._estimate_precisions.self.precisions_cholesky_.1",
      "distance": 1.116281270980835,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 502,
      "end_line": 525,
      "tokens": 239,
      "context_length": 27655
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_assumptions.py_1_",
      "distance": 1.1170334815979004,
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 511,
      "context_length": 28166
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/gpr.py_GaussianProcessRegressor.fit.15_GaussianProcessRegressor.fit.18.1",
      "distance": 1.119163990020752,
      "file_path": "sklearn/gaussian_process/gpr.py",
      "start_line": 247,
      "end_line": 259,
      "tokens": 170,
      "context_length": 28336
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py_load_20news_",
      "distance": 1.1207048892974854,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 371,
      "end_line": 423,
      "tokens": 514,
      "context_length": 28850
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_tied_BayesianGaussianMixture._estimate_wishart_tied.10",
      "distance": 1.1219825744628906,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 561,
      "end_line": 589,
      "tokens": 282,
      "context_length": 29132
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_np_DEFAULT_EPSILON.1",
      "distance": 1.1224764585494995,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 7,
      "end_line": 42,
      "tokens": 327,
      "context_length": 29459
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_incremental_pca.py_1_benchmark.9.1",
      "distance": 1.1245546340942383,
      "file_path": "benchmarks/bench_plot_incremental_pca.py",
      "start_line": 1,
      "end_line": 32,
      "tokens": 176,
      "context_length": 29635
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_randomized_svd.py_1_30",
      "distance": 1.1279795169830322,
      "file_path": "benchmarks/bench_plot_randomized_svd.py",
      "start_line": 1,
      "end_line": 110,
      "tokens": 950,
      "context_length": 30585
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__estimate_log_gaussian_prob__estimate_log_gaussian_prob.7.1",
      "distance": 1.1289165019989014,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 381,
      "end_line": 432,
      "tokens": 553,
      "context_length": 31138,
      "file_pos": 26
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__fit_projected_gradient__fit_projected_gradient.11.1",
      "distance": 1.1292074918746948,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 152,
      "end_line": 193,
      "tokens": 476,
      "context_length": 31614
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/__init__.py__",
      "distance": 1.1293277740478516,
      "file_path": "sklearn/mixture/__init__.py",
      "start_line": 1,
      "end_line": 11,
      "tokens": 0,
      "context_length": 31614
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/examples/gaussian_process/plot_gpc.py_1_33",
      "distance": 1.1317336559295654,
      "file_path": "examples/gaussian_process/plot_gpc.py",
      "start_line": 1,
      "end_line": 77,
      "tokens": 751,
      "context_length": 32365
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_spherical_BayesianGaussianMixture._estimate_wishart_spherical.10",
      "distance": 1.1333811283111572,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 620,
      "end_line": 647,
      "tokens": 260,
      "context_length": 32625
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_outliers_train_check_outliers_train.37.contamination.7.2",
      "distance": 1.1334013938903809,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1454,
      "end_line": 1516,
      "tokens": 511,
      "context_length": 33136
    },
    {
      "position": 79,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py__check_X__check_X.5.1",
      "distance": 1.1344451904296875,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 41,
      "end_line": 64,
      "tokens": 208,
      "context_length": 33344,
      "file_pos": 28
    },
    {
      "position": 80,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.3.2",
      "distance": 1.135442852973938,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1785,
      "end_line": 1827,
      "tokens": 449,
      "context_length": 33793
    },
    {
      "position": 81,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_1_25.3.2",
      "distance": 1.1355851888656616,
      "file_path": "sklearn/utils/fixes.py",
      "start_line": 1,
      "end_line": 96,
      "tokens": 646,
      "context_length": 34439
    },
    {
      "position": 82,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_full_BayesianGaussianMixture._estimate_wishart_full.10",
      "distance": 1.1372625827789307,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 527,
      "end_line": 559,
      "tokens": 316,
      "context_length": 34755
    },
    {
      "position": 83,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__k_init.14__k_init.15.1",
      "distance": 1.140359878540039,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 107,
      "end_line": 142,
      "tokens": 330,
      "context_length": 35085
    },
    {
      "position": 84,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__nls_subproblem.6__nls_subproblem.8.1",
      "distance": 1.141951322555542,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 106,
      "end_line": 149,
      "tokens": 401,
      "context_length": 35486
    },
    {
      "position": 85,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._m_step_BaseMixture._set_parameters.1",
      "distance": 1.1444268226623535,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 290,
      "end_line": 314,
      "tokens": 150,
      "context_length": 35636,
      "file_pos": 30
    },
    {
      "position": 86,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGD._allocate_parameter_mem_BaseSGD._allocate_parameter_mem.4.self.average_intercept_.1",
      "distance": 1.1465505361557007,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 190,
      "end_line": 249,
      "tokens": 552,
      "context_length": 36188
    },
    {
      "position": 87,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sample_without_replacement.py_16_",
      "distance": 1.1472220420837402,
      "file_path": "benchmarks/bench_sample_without_replacement.py",
      "start_line": 38,
      "end_line": 208,
      "tokens": 1233,
      "context_length": 37421
    },
    {
      "position": 88,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_methods_subset_invariance_check_methods_subset_invariance.rnd.11.4.2",
      "distance": 1.1481983661651611,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 731,
      "end_line": 766,
      "tokens": 343,
      "context_length": 37764
    },
    {
      "position": 89,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_diag_BayesianGaussianMixture._estimate_wishart_diag.10",
      "distance": 1.148941993713379,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 591,
      "end_line": 618,
      "tokens": 270,
      "context_length": 38034
    },
    {
      "position": 90,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm.py_plot_results_plot_results.7",
      "distance": 1.15022873878479,
      "file_path": "examples/mixture/plot_gmm.py",
      "start_line": 39,
      "end_line": 65,
      "tokens": 309,
      "context_length": 38343
    },
    {
      "position": 91,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/gpr.py_GaussianProcessRegressor.__init___GaussianProcessRegressor.y_train_mean.1.1",
      "distance": 1.151444435119629,
      "file_path": "sklearn/gaussian_process/gpr.py",
      "start_line": 136,
      "end_line": 157,
      "tokens": 207,
      "context_length": 38550
    },
    {
      "position": 92,
      "id": "/tmp/repos/scikit-learn/examples/covariance/plot_robust_vs_empirical_covariance.py_err_loc_emp_pure_34",
      "distance": 1.1526461839675903,
      "file_path": "examples/covariance/plot_robust_vs_empirical_covariance.py",
      "start_line": 77,
      "end_line": 141,
      "tokens": 785,
      "context_length": 39335
    },
    {
      "position": 93,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_parameters_default_constructible_check_parameters_default_constructible.classifier.4.17.6.2.1.3.1",
      "distance": 1.1541048288345337,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2014,
      "end_line": 2085,
      "tokens": 578,
      "context_length": 39913
    },
    {
      "position": 94,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_28__compute_log_det_cholesky.3.1",
      "distance": 1.1567127704620361,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 339,
      "end_line": 378,
      "tokens": 320,
      "context_length": 40233,
      "file_pos": 32
    },
    {
      "position": 95,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_BaseGradientBoosting.fit.12_BaseGradientBoosting.fit.25.1",
      "distance": 1.1584192514419556,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 1017,
      "end_line": 1076,
      "tokens": 579,
      "context_length": 40812
    },
    {
      "position": 96,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_MiniBatchKMeans.fit.24_MiniBatchKMeans.fit.32.1",
      "distance": 1.1584584712982178,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1507,
      "end_line": 1584,
      "tokens": 730,
      "context_length": 41542
    },
    {
      "position": 97,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture.fit_predict_BaseMixture.fit_predict.15.1",
      "distance": 1.1589570045471191,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 194,
      "end_line": 269,
      "tokens": 622,
      "context_length": 42164,
      "file_pos": 32
    },
    {
      "position": 98,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_cluster_iris.py_1_",
      "distance": 1.1599490642547607,
      "file_path": "examples/cluster/plot_cluster_iris.py",
      "start_line": 1,
      "end_line": 93,
      "tokens": 751,
      "context_length": 42915
    },
    {
      "position": 99,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit1d_check_fit1d.rnd.9",
      "distance": 1.1607861518859863,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 831,
      "end_line": 846,
      "tokens": 139,
      "context_length": 43054
    },
    {
      "position": 100,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/gpr.py_GaussianProcessRegressor._constrained_optimization_",
      "distance": 1.1614692211151123,
      "file_path": "sklearn/gaussian_process/gpr.py",
      "start_line": 459,
      "end_line": 474,
      "tokens": 168,
      "context_length": 43222
    },
    {
      "position": 101,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_selection.py_37_",
      "distance": 1.1619230508804321,
      "file_path": "examples/mixture/plot_gmm_selection.py",
      "start_line": 78,
      "end_line": 99,
      "tokens": 234,
      "context_length": 43456
    },
    {
      "position": 102,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/least_angle.py_lars_path.23_lars_path.23.10.3.AA.3",
      "distance": 1.1628801822662354,
      "file_path": "sklearn/linear_model/least_angle.py",
      "start_line": 207,
      "end_line": 365,
      "tokens": 1584,
      "context_length": 45040
    },
    {
      "position": 103,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._estimate_log_prob_resp_BaseMixture._print_verbose_msg_init_beg.2.2.self._iter_prev_time.1",
      "distance": 1.1635076999664307,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 477,
      "end_line": 510,
      "tokens": 294,
      "context_length": 45334,
      "file_pos": 34
    },
    {
      "position": 104,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_covertype.py_ESTIMATORS_ESTIMATORS.1",
      "distance": 1.164083480834961,
      "file_path": "benchmarks/bench_covertype.py",
      "start_line": 100,
      "end_line": 110,
      "tokens": 151,
      "context_length": 45485
    },
    {
      "position": 105,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_oob.py_1_34",
      "distance": 1.1641452312469482,
      "file_path": "examples/ensemble/plot_gradient_boosting_oob.py",
      "start_line": 1,
      "end_line": 91,
      "tokens": 772,
      "context_length": 46257
    },
    {
      "position": 106,
      "id": "/tmp/repos/scikit-learn/examples/gaussian_process/plot_gpr_prior_posterior.py_11_",
      "distance": 1.1663968563079834,
      "file_path": "examples/gaussian_process/plot_gpr_prior_posterior.py",
      "start_line": 36,
      "end_line": 79,
      "tokens": 500,
      "context_length": 46757
    },
    {
      "position": 107,
      "id": "/tmp/repos/scikit-learn/sklearn/manifold/mds.py_smacof.dissimilarities_smacof.7.2.1.1",
      "distance": 1.1665470600128174,
      "file_path": "sklearn/manifold/mds.py",
      "start_line": 234,
      "end_line": 276,
      "tokens": 433,
      "context_length": 47190
    },
    {
      "position": 108,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_BaseDiscreteNB.partial_fit_BaseDiscreteNB.partial_fit.24.1",
      "distance": 1.1675219535827637,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 484,
      "end_line": 564,
      "tokens": 765,
      "context_length": 47955
    },
    {
      "position": 109,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGDRegressor._fit_regressor_SGDRegressor",
      "distance": 1.167560338973999,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 1259,
      "end_line": 1557,
      "tokens": 661,
      "context_length": 48616
    },
    {
      "position": 110,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_early_stopping.py_1_bar2.1",
      "distance": 1.1675894260406494,
      "file_path": "examples/ensemble/plot_gradient_boosting_early_stopping.py",
      "start_line": 1,
      "end_line": 103,
      "tokens": 772,
      "context_length": 49388
    },
    {
      "position": 111,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py_1__norm.2.1",
      "distance": 1.1677613258361816,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 1,
      "end_line": 47,
      "tokens": 298,
      "context_length": 49686
    },
    {
      "position": 112,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/lof.py_LocalOutlierFactor.__init___LocalOutlierFactor.__init__.self.contamination.1",
      "distance": 1.168160319328308,
      "file_path": "sklearn/neighbors/lof.py",
      "start_line": 138,
      "end_line": 152,
      "tokens": 174,
      "context_length": 49860
    },
    {
      "position": 113,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGDClassifier._partial_fit_BaseSGDClassifier._partial_fit.13.1",
      "distance": 1.168197751045227,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 492,
      "end_line": 537,
      "tokens": 416,
      "context_length": 50276
    },
    {
      "position": 114,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._initialize_BaseMixture.fit.3.1",
      "distance": 1.1696187257766724,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 160,
      "end_line": 192,
      "tokens": 246,
      "context_length": 50522,
      "file_pos": 40
    },
    {
      "position": 115,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGDClassifier._fit_BaseSGDClassifier._fit.14.1",
      "distance": 1.1698848009109497,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 539,
      "end_line": 580,
      "tokens": 389,
      "context_length": 50911
    },
    {
      "position": 116,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGDRegressor._partial_fit_BaseSGDRegressor._partial_fit.9.1",
      "distance": 1.1699891090393066,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 1104,
      "end_line": 1132,
      "tokens": 298,
      "context_length": 51209
    },
    {
      "position": 117,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/gpc.py_GaussianProcessClassifier.__init___GaussianProcessClassifier.__init__.self.n_jobs.1",
      "distance": 1.1711039543151855,
      "file_path": "sklearn/gaussian_process/gpc.py",
      "start_line": 563,
      "end_line": 575,
      "tokens": 148,
      "context_length": 51357
    },
    {
      "position": 118,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_GaussianNB.partial_fit_GaussianNB.partial_fit.2.1",
      "distance": 1.172560691833496,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 269,
      "end_line": 309,
      "tokens": 324,
      "context_length": 51681
    },
    {
      "position": 119,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/gpc.py__BinaryGaussianProcessClassifierLaplace.__init____BinaryGaussianProcessClassifierLaplace.fit.16.1",
      "distance": 1.1736602783203125,
      "file_path": "sklearn/gaussian_process/gpc.py",
      "start_line": 148,
      "end_line": 244,
      "tokens": 851,
      "context_length": 52532
    },
    {
      "position": 120,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_20__estimate_gaussian_covariances_full.5.1",
      "distance": 1.174293875694275,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 140,
      "end_line": 169,
      "tokens": 236,
      "context_length": 52768,
      "file_pos": 41
    },
    {
      "position": 121,
      "id": "/tmp/repos/scikit-learn/sklearn/covariance/robust_covariance.py__c_step__c_step.24.1",
      "distance": 1.1751891374588013,
      "file_path": "sklearn/covariance/robust_covariance.py",
      "start_line": 95,
      "end_line": 175,
      "tokens": 755,
      "context_length": 53523
    },
    {
      "position": 122,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py__validate_shuffle_split_init__validate_shuffle_split_init.5.1.2.2",
      "distance": 1.1763672828674316,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1624,
      "end_line": 1664,
      "tokens": 417,
      "context_length": 53940
    }
  ],
  "files": [
    {
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "position": 1,
      "tokens": 7272,
      "context_length": 7272
    },
    {
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "position": 2,
      "tokens": 6258,
      "context_length": 13530
    },
    {
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "position": 3,
      "tokens": 1574,
      "context_length": 15104
    },
    {
      "file_path": "sklearn/mixture/base.py",
      "position": 4,
      "tokens": 3778,
      "context_length": 18882
    },
    {
      "file_path": "examples/mixture/plot_gmm_selection.py",
      "position": 5,
      "tokens": 891,
      "context_length": 19773
    },
    {
      "file_path": "examples/mixture/plot_gmm.py",
      "position": 6,
      "tokens": 833,
      "context_length": 20606
    },
    {
      "file_path": "examples/mixture/plot_concentration_prior.py",
      "position": 7,
      "tokens": 1462,
      "context_length": 22068
    },
    {
      "file_path": "sklearn/naive_bayes.py",
      "position": 8,
      "tokens": 8409,
      "context_length": 30477
    },
    {
      "file_path": "examples/mixture/plot_gmm_pdf.py",
      "position": 9,
      "tokens": 398,
      "context_length": 30875
    },
    {
      "file_path": "examples/gaussian_process/plot_gpr_noisy.py",
      "position": 10,
      "tokens": 1129,
      "context_length": 32004
    },
    {
      "file_path": "examples/mixture/plot_gmm_covariances.py",
      "position": 11,
      "tokens": 1217,
      "context_length": 33221
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 12,
      "tokens": 20045,
      "context_length": 53266
    },
    {
      "file_path": "examples/cluster/plot_kmeans_stability_low_dim_dense.py",
      "position": 13,
      "tokens": 1059,
      "context_length": 54325
    },
    {
      "file_path": "sklearn/gaussian_process/kernels.py",
      "position": 14,
      "tokens": 15289,
      "context_length": 69614
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 15,
      "tokens": 18278,
      "context_length": 87892
    },
    {
      "file_path": "examples/cluster/plot_adjusted_for_chance_measures.py",
      "position": 16,
      "tokens": 993,
      "context_length": 88885
    },
    {
      "file_path": "benchmarks/bench_glmnet.py",
      "position": 17,
      "tokens": 1087,
      "context_length": 89972
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 18,
      "tokens": 13974,
      "context_length": 103946
    },
    {
      "file_path": "benchmarks/bench_plot_nmf.py",
      "position": 19,
      "tokens": 3913,
      "context_length": 107859
    },
    {
      "file_path": "benchmarks/bench_sgd_regression.py",
      "position": 20,
      "tokens": 1341,
      "context_length": 109200
    },
    {
      "file_path": "benchmarks/bench_mnist.py",
      "position": 21,
      "tokens": 1731,
      "context_length": 110931
    },
    {
      "file_path": "examples/gaussian_process/plot_gpr_noisy_targets.py",
      "position": 22,
      "tokens": 976,
      "context_length": 111907
    },
    {
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "position": 23,
      "tokens": 533,
      "context_length": 112440
    },
    {
      "file_path": "sklearn/gaussian_process/gpr.py",
      "position": 24,
      "tokens": 4362,
      "context_length": 116802
    },
    {
      "file_path": "benchmarks/bench_plot_incremental_pca.py",
      "position": 25,
      "tokens": 1356,
      "context_length": 118158
    },
    {
      "file_path": "benchmarks/bench_plot_randomized_svd.py",
      "position": 26,
      "tokens": 4383,
      "context_length": 122541
    },
    {
      "file_path": "sklearn/mixture/__init__.py",
      "position": 27,
      "tokens": 60,
      "context_length": 122601
    },
    {
      "file_path": "examples/gaussian_process/plot_gpc.py",
      "position": 28,
      "tokens": 1036,
      "context_length": 123637
    },
    {
      "file_path": "sklearn/utils/fixes.py",
      "position": 29,
      "tokens": 2542,
      "context_length": 126179
    },
    {
      "file_path": "sklearn/cluster/k_means_.py",
      "position": 30,
      "tokens": 14696,
      "context_length": 140875
    },
    {
      "file_path": "benchmarks/bench_sample_without_replacement.py",
      "position": 31,
      "tokens": 1421,
      "context_length": 142296
    },
    {
      "file_path": "examples/covariance/plot_robust_vs_empirical_covariance.py",
      "position": 32,
      "tokens": 1672,
      "context_length": 143968
    },
    {
      "file_path": "examples/cluster/plot_cluster_iris.py",
      "position": 33,
      "tokens": 759,
      "context_length": 144727
    },
    {
      "file_path": "sklearn/linear_model/least_angle.py",
      "position": 34,
      "tokens": 13660,
      "context_length": 158387
    },
    {
      "file_path": "benchmarks/bench_covertype.py",
      "position": 35,
      "tokens": 1903,
      "context_length": 160290
    },
    {
      "file_path": "examples/ensemble/plot_gradient_boosting_oob.py",
      "position": 36,
      "tokens": 1248,
      "context_length": 161538
    },
    {
      "file_path": "examples/gaussian_process/plot_gpr_prior_posterior.py",
      "position": 37,
      "tokens": 831,
      "context_length": 162369
    },
    {
      "file_path": "sklearn/manifold/mds.py",
      "position": 38,
      "tokens": 3827,
      "context_length": 166196
    },
    {
      "file_path": "examples/ensemble/plot_gradient_boosting_early_stopping.py",
      "position": 39,
      "tokens": 1164,
      "context_length": 167360
    },
    {
      "file_path": "sklearn/neighbors/lof.py",
      "position": 40,
      "tokens": 3320,
      "context_length": 170680
    },
    {
      "file_path": "sklearn/gaussian_process/gpc.py",
      "position": 41,
      "tokens": 7072,
      "context_length": 177752
    },
    {
      "file_path": "sklearn/covariance/robust_covariance.py",
      "position": 42,
      "tokens": 6859,
      "context_length": 184611
    },
    {
      "file_path": "sklearn/model_selection/_split.py",
      "position": 43,
      "tokens": 18025,
      "context_length": 202636
    }
  ]
}