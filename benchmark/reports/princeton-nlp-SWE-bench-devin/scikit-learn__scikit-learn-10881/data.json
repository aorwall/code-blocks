{
  "instance_id": "scikit-learn__scikit-learn-10881",
  "model_patch": "diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py\nindex 26eaeaa02..d355855c9 100644\n--- a/sklearn/linear_model/logistic.py\n+++ b/sklearn/linear_model/logistic.py\n@@ -717,6 +717,9 @@ def logistic_regression_path(X, y, pos_class=None, Cs=10, fit_intercept=True,\n             args = (X, target, 1. / C, sample_weight)\n             w0, n_iter_i = newton_cg(hess, func, grad, w0, args=args,\n                                      maxiter=max_iter, tol=tol)\n+            if n_iter_i == max_iter and verbose > 0:\n+                warnings.warn(\"newton-cg failed to converge. Increase the \"\n+                              \"number of iterations.\", ConvergenceWarning)\n         elif solver == 'liblinear':\n             coef_, intercept_, n_iter_i, = _fit_liblinear(\n                 X, target, C, fit_intercept, intercept_scaling, None,\n@@ -744,6 +747,9 @@ def logistic_regression_path(X, y, pos_class=None, Cs=10, fit_intercept=True,\n                 beta, max_iter, tol,\n                 verbose, random_state, False, max_squared_sum, warm_start_sag,\n                 is_saga=(solver == 'saga'))\n+            if n_iter_i == max_iter and verbose > 0:\n+                warnings.warn(\"sag failed to converge. Increase the number \"\n+                              \"of iterations.\", ConvergenceWarning)\n \n         else:\n             raise ValueError(\"solver must be one of {'liblinear', 'lbfgs', \"\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/linear_model/logistic.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "4989a9503753a92089f39e154a2bb5d160b5d276",
  "patch": "diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py\n--- a/sklearn/linear_model/logistic.py\n+++ b/sklearn/linear_model/logistic.py\n@@ -707,7 +707,7 @@ def logistic_regression_path(X, y, pos_class=None, Cs=10, fit_intercept=True,\n                 func, w0, fprime=None,\n                 args=(X, target, 1. / C, sample_weight),\n                 iprint=(verbose > 0) - 1, pgtol=tol, maxiter=max_iter)\n-            if info[\"warnflag\"] == 1 and verbose > 0:\n+            if info[\"warnflag\"] == 1:\n                 warnings.warn(\"lbfgs failed to converge. Increase the number \"\n                               \"of iterations.\", ConvergenceWarning)\n             # In scipy <= 1.0.0, nit may exceed maxiter.\ndiff --git a/sklearn/svm/base.py b/sklearn/svm/base.py\n--- a/sklearn/svm/base.py\n+++ b/sklearn/svm/base.py\n@@ -907,7 +907,7 @@ def _fit_liblinear(X, y, C, fit_intercept, intercept_scaling, class_weight,\n     # on 32-bit platforms, we can't get to the UINT_MAX limit that\n     # srand supports\n     n_iter_ = max(n_iter_)\n-    if n_iter_ >= max_iter and verbose > 0:\n+    if n_iter_ >= max_iter:\n         warnings.warn(\"Liblinear failed to converge, increase \"\n                       \"the number of iterations.\", ConvergenceWarning)\n \n",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_logistic.py b/sklearn/linear_model/tests/test_logistic.py\n--- a/sklearn/linear_model/tests/test_logistic.py\n+++ b/sklearn/linear_model/tests/test_logistic.py\n@@ -800,15 +800,6 @@ def test_logistic_regression_class_weights():\n         assert_array_almost_equal(clf1.coef_, clf2.coef_, decimal=6)\n \n \n-def test_logistic_regression_convergence_warnings():\n-    # Test that warnings are raised if model does not converge\n-\n-    X, y = make_classification(n_samples=20, n_features=20, random_state=0)\n-    clf_lib = LogisticRegression(solver='liblinear', max_iter=2, verbose=1)\n-    assert_warns(ConvergenceWarning, clf_lib.fit, X, y)\n-    assert_equal(clf_lib.n_iter_, 2)\n-\n-\n def test_logistic_regression_multinomial():\n     # Tests for the multinomial option in logistic regression\n \n@@ -1033,7 +1024,6 @@ def test_logreg_predict_proba_multinomial():\n     assert_greater(clf_wrong_loss, clf_multi_loss)\n \n \n-@ignore_warnings\n def test_max_iter():\n     # Test that the maximum number of iteration is reached\n     X, y_bin = iris.data, iris.target.copy()\n@@ -1049,7 +1039,7 @@ def test_max_iter():\n                 lr = LogisticRegression(max_iter=max_iter, tol=1e-15,\n                                         multi_class=multi_class,\n                                         random_state=0, solver=solver)\n-                lr.fit(X, y_bin)\n+                assert_warns(ConvergenceWarning, lr.fit, X, y_bin)\n                 assert_equal(lr.n_iter_[0], max_iter)\n \n \ndiff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py\n--- a/sklearn/model_selection/tests/test_search.py\n+++ b/sklearn/model_selection/tests/test_search.py\n@@ -33,6 +33,7 @@\n from sklearn.base import BaseEstimator\n from sklearn.base import clone\n from sklearn.exceptions import NotFittedError\n+from sklearn.exceptions import ConvergenceWarning\n from sklearn.datasets import make_classification\n from sklearn.datasets import make_blobs\n from sklearn.datasets import make_multilabel_classification\n@@ -350,7 +351,9 @@ def test_return_train_score_warn():\n     for estimator in estimators:\n         for val in [True, False, 'warn']:\n             estimator.set_params(return_train_score=val)\n-            result[val] = assert_no_warnings(estimator.fit, X, y).cv_results_\n+            fit_func = ignore_warnings(estimator.fit,\n+                                       category=ConvergenceWarning)\n+            result[val] = assert_no_warnings(fit_func, X, y).cv_results_\n \n     train_keys = ['split0_train_score', 'split1_train_score',\n                   'split2_train_score', 'mean_train_score', 'std_train_score']\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -871,13 +871,17 @@ def test_consistent_proba():\n     assert_array_almost_equal(proba_1, proba_2)\n \n \n-def test_linear_svc_convergence_warnings():\n+def test_linear_svm_convergence_warnings():\n     # Test that warnings are raised if model does not converge\n \n-    lsvc = svm.LinearSVC(max_iter=2, verbose=1)\n+    lsvc = svm.LinearSVC(random_state=0, max_iter=2)\n     assert_warns(ConvergenceWarning, lsvc.fit, X, Y)\n     assert_equal(lsvc.n_iter_, 2)\n \n+    lsvr = svm.LinearSVR(random_state=0, max_iter=2)\n+    assert_warns(ConvergenceWarning, lsvr.fit, iris.data, iris.target)\n+    assert_equal(lsvr.n_iter_, 2)\n+\n \n def test_svr_coef_sign():\n     # Test that SVR(kernel=\"linear\") has coef_ with the right sign.\n",
  "problem_statement": "No warning when LogisticRegression does not converge\n<!--\r\nIf your issue is a usage question, submit it here instead:\r\n- StackOverflow with the scikit-learn tag: http://stackoverflow.com/questions/tagged/scikit-learn\r\n- Mailing List: https://mail.python.org/mailman/listinfo/scikit-learn\r\nFor more information, see User Questions: http://scikit-learn.org/stable/support.html#user-questions\r\n-->\r\n\r\n<!-- Instructions For Filing a Bug: https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md#filing-bugs -->\r\n\r\n#### Description\r\n<!-- Example: Joblib Error thrown when calling fit on LatentDirichletAllocation with evaluate_every > 0-->\r\nI've run LogisticRegressionCV on the Wisconsin Breast Cancer data, and the output of clf.n_iter_ was 100 for all but 1 of the variables. The default of 100 iterations was probably not sufficient in this case. Should there not be some kind of warning? I have done some tests and ~3000 iterations was probably a better choice for max_iter...\r\n\r\n#### Steps/Code to Reproduce\r\n```py\r\nfrom sklearn.datasets import load_breast_cancer\r\nfrom sklearn.linear_model import LogisticRegressionCV\r\n\r\ndata = load_breast_cancer()\r\ny = data.target\r\nX = data.data\r\n\r\nclf = LogisticRegressionCV()\r\nclf.fit(X, y)\r\nprint(clf.n_iter_)\r\n```\r\n\r\n<!--\r\nExample:\r\n```python\r\nfrom sklearn.feature_extraction.text import CountVectorizer\r\nfrom sklearn.decomposition import LatentDirichletAllocation\r\n\r\ndocs = [\"Help I have a bug\" for i in range(1000)]\r\n\r\nvectorizer = CountVectorizer(input=docs, analyzer='word')\r\nlda_features = vectorizer.fit_transform(docs)\r\n\r\nlda_model = LatentDirichletAllocation(\r\n    n_topics=10,\r\n    learning_method='online',\r\n    evaluate_every=10,\r\n    n_jobs=4,\r\n)\r\nmodel = lda_model.fit(lda_features)\r\n```\r\nIf the code is too long, feel free to put it in a public gist and link\r\nit in the issue: https://gist.github.com\r\n-->\r\n\r\n#### Expected Results\r\n<!-- Example: No error is thrown. Please paste or describe the expected results.-->\r\nSome kind of error to be shown. E.g: \"result did not converge, try increasing the maximum number of iterations (max_iter)\"\r\n\r\n#### Versions\r\n<!--\r\nPlease run the following snippet and paste the output below.\r\nimport platform; print(platform.platform())\r\nimport sys; print(\"Python\", sys.version)\r\nimport numpy; print(\"NumPy\", numpy.__version__)\r\nimport scipy; print(\"SciPy\", scipy.__version__)\r\nimport sklearn; print(\"Scikit-Learn\", sklearn.__version__)\r\n-->\r\n\r\n>>> import platform; print(platform.platform())\r\nDarwin-16.7.0-x86_64-i386-64bit\r\n>>> import sys; print(\"Python\", sys.version)\r\n('Python', '2.7.14 |Anaconda, Inc.| (default, Oct  5 2017, 02:28:52) \\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]')\r\n>>> import numpy; print(\"NumPy\", numpy.__version__)\r\n('NumPy', '1.13.3')\r\n>>> import scipy; print(\"SciPy\", scipy.__version__)\r\n('SciPy', '1.0.0')\r\n>>> import sklearn; print(\"Scikit-Learn\", sklearn.__version__)\r\n('Scikit-Learn', '0.19.1')\r\n\r\n\r\n<!-- Thanks for contributing! -->\r\n\n",
  "hints_text": "If you use verbose=1 in your snippet, you'll get plenty of ConvergenceWarning.\r\n\r\n```py\r\nfrom sklearn.datasets import load_breast_cancer\r\nfrom sklearn.linear_model import LogisticRegressionCV\r\n\r\ndata = load_breast_cancer()\r\ny = data.target\r\nX = data.data\r\n\r\nclf = LogisticRegressionCV(verbose=1)\r\nclf.fit(X, y)\r\nprint(clf.n_iter_)\r\n```\r\n\r\nI am going to close this one, please reopen if  you strongly disagree.\nI also think that `LogisticRegression` ~~(and `LogisticRegressionCV`)~~ should print a `ConvergenceWarning` when it fails to converge with default parameters.\r\n\r\n It does not make sense to expect the users to set the verbosity in order to get the warning. Also other methods don't do this:  e.g. MLPClassifier [may raise ConvergenceWarnings](https://github.com/scikit-learn/scikit-learn/blob/de29f3f22db6e017aef9dc77935d8ef43d2d7b44/sklearn/neural_network/tests/test_mlp.py#L70) so does [MultiTaskElasticNet](https://github.com/scikit-learn/scikit-learn/blob/da71b827b8b56bd8305b7fe6c13724c7b5355209/sklearn/linear_model/tests/test_coordinate_descent.py#L407) or [LassoLars](https://github.com/scikit-learn/scikit-learn/blob/34aad31924dc9c8551e6ff8edf4e729dbfc1b973/sklearn/linear_model/tests/test_least_angle.py#L349). \r\n\r\n The culprit is this [line](https://github.com/scikit-learn/scikit-learn/blob/da71b827b8b56bd8305b7fe6c13724c7b5355209/sklearn/linear_model/logistic.py#L710-L712) that only affects the `lbfgs` solver. This is more critical if we can to make `lbfgs` the default solver https://github.com/scikit-learn/scikit-learn/issues/9997 in `LogisticRegression`\nAfter more thoughts, the case of `LogisticRegressionCV` is more debatable, as there are always CV parameters that may fail to converge and handling it the same way as `GridSearchCV` would be probably more reasonable.\r\n\r\nHowever,\r\n```py\r\nfrom sklearn.datasets import load_breast_cancer\r\nfrom sklearn.linear_model import LogisticRegression\r\n\r\ndata = load_breast_cancer()\r\ny = data.target\r\nX = data.data\r\n\r\nclf = LogisticRegression(solver='lbfgs')\r\nclf.fit(X, y)\r\nprint(clf.n_iter_)\r\n```\r\nsilently fails to converge, and this is a bug IMO. This was also recently relevant in https://github.com/scikit-learn/scikit-learn/issues/10813\r\n\nA quick git grep seems to confirm that ConvergenceWarning are generally issued when verbose=0, reopening.\r\n\r\nThe same thing happens for solver='liblinear' (the default solver at the time of writing) by the way (you need to decrease max_iter e.g. set it to 1). There should be a test that checks the ConvergenceWarning for all solvers.\nI see that nobody is working on it. Can I do it ?\nSure,  thank you @AlexandreSev \nUnless @oliverangelil was planning to submit a PR..\nI think I need to correct also this [line](https://github.com/scikit-learn/scikit-learn/blob/da71b827b8b56bd8305b7fe6c13724c7b5355209/sklearn/linear_model/tests/test_logistic.py#L807). Do you agree ?\r\nMoreover, I just saw that the name of this [function](https://github.com/scikit-learn/scikit-learn/blob/da71b827b8b56bd8305b7fe6c13724c7b5355209/sklearn/linear_model/tests/test_logistic.py#L92) is not perfectly correct, since it does not test the convergence warning.\r\nMaybe we could write a test a bit like this [one](https://github.com/scikit-learn/scikit-learn/blob/da71b827b8b56bd8305b7fe6c13724c7b5355209/sklearn/linear_model/tests/test_logistic.py#L1037) to test all the warnings. What do you think ?\nYou can reuse test_max_iter indeed to check for all solvers that there has been a warning and add an assert_warns_message in it. If you do that, test_logistic_regression_convergence_warnings is not really needed any more. There is no need to touch test_lr_liblinear_warning.\r\n\r\nThe best is to open a PR and see how that goes! Not that you have mentioned changing the tests but you will also need to change sklearn/linear_model/logistic.py to make sure a ConvergenceWarning is issued for all the solvers.\r\n\r\n\nyes I think there are a few cases where we only warn if verbose. I'd rather\nconsistently warn even if verbose=0\n",
  "created_at": "2018-03-28T12:36:45Z",
  "version": "0.20",
  "FAIL_TO_PASS": "[\"sklearn/linear_model/tests/test_logistic.py::test_max_iter\", \"sklearn/svm/tests/test_svm.py::test_linear_svm_convergence_warnings\"]",
  "PASS_TO_PASS": "[\"sklearn/linear_model/tests/test_logistic.py::test_check_solver_option\", \"sklearn/linear_model/tests/test_logistic.py::test_consistency_path\", \"sklearn/linear_model/tests/test_logistic.py::test_dtype_match\", \"sklearn/linear_model/tests/test_logistic.py::test_error\", \"sklearn/linear_model/tests/test_logistic.py::test_inconsistent_input\", \"sklearn/linear_model/tests/test_logistic.py::test_intercept_logistic_helper\", \"sklearn/linear_model/tests/test_logistic.py::test_liblinear_decision_function_zero\", \"sklearn/linear_model/tests/test_logistic.py::test_liblinear_dual_random_state\", \"sklearn/linear_model/tests/test_logistic.py::test_liblinear_logregcv_sparse\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_sparse\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_grad_hess\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_loss_and_grad\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_class_weights\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_multinomial\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_path_convergence_fail\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_sample_weights\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regression_solvers_multiclass\", \"sklearn/linear_model/tests/test_logistic.py::test_logistic_regressioncv_class_weights\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_cv_penalty\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_intercept_scaling_zero\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_l1\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_l1_sparse_data\", \"sklearn/linear_model/tests/test_logistic.py::test_logreg_predict_proba_multinomial\", \"sklearn/linear_model/tests/test_logistic.py::test_lr_liblinear_warning\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_binary_probabilities\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_grad_hess\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_logistic_regression_string_inputs\", \"sklearn/linear_model/tests/test_logistic.py::test_multinomial_validation\", \"sklearn/linear_model/tests/test_logistic.py::test_n_iter\", \"sklearn/linear_model/tests/test_logistic.py::test_nan\", \"sklearn/linear_model/tests/test_logistic.py::test_ovr_multinomial_iris\", \"sklearn/linear_model/tests/test_logistic.py::test_predict_2_classes\", \"sklearn/linear_model/tests/test_logistic.py::test_predict_3_classes\", \"sklearn/linear_model/tests/test_logistic.py::test_predict_iris\", \"sklearn/linear_model/tests/test_logistic.py::test_saga_sparse\", \"sklearn/linear_model/tests/test_logistic.py::test_saga_vs_liblinear\", \"sklearn/linear_model/tests/test_logistic.py::test_sparsify\", \"sklearn/linear_model/tests/test_logistic.py::test_warm_start\", \"sklearn/linear_model/tests/test_logistic.py::test_write_parameters\", \"sklearn/model_selection/tests/test_search.py::test_X_as_list\", \"sklearn/model_selection/tests/test_search.py::test_classes__property\", \"sklearn/model_selection/tests/test_search.py::test_deprecated_grid_search_iid\", \"sklearn/model_selection/tests/test_search.py::test_fit_grid_point\", \"sklearn/model_selection/tests/test_search.py::test_grid_search\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_allows_nans\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_bad_param_grid\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_correct_score_results\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_results\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_results_multimetric\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_splits_consistency\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_error\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_failing_classifier\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_failing_classifier_raise\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_fit_params_deprecation\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_fit_params_two_places\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_groups\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_no_score\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_one_grid_point\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_precomputed_kernel\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_precomputed_kernel_error_nonsquare\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_score_method\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_sparse\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_sparse_scoring\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_when_param_grid_includes_range\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_with_fit_params\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_with_multioutput_data\", \"sklearn/model_selection/tests/test_search.py::test_gridsearch_nd\", \"sklearn/model_selection/tests/test_search.py::test_gridsearch_no_predict\", \"sklearn/model_selection/tests/test_search.py::test_no_refit\", \"sklearn/model_selection/tests/test_search.py::test_pandas_input\", \"sklearn/model_selection/tests/test_search.py::test_param_sampler\", \"sklearn/model_selection/tests/test_search.py::test_parameter_grid\", \"sklearn/model_selection/tests/test_search.py::test_parameters_sampler_replacement\", \"sklearn/model_selection/tests/test_search.py::test_pickle\", \"sklearn/model_selection/tests/test_search.py::test_predict_proba_disabled\", \"sklearn/model_selection/tests/test_search.py::test_random_search_cv_results\", \"sklearn/model_selection/tests/test_search.py::test_random_search_cv_results_multimetric\", \"sklearn/model_selection/tests/test_search.py::test_random_search_with_fit_params\", \"sklearn/model_selection/tests/test_search.py::test_refit\", \"sklearn/model_selection/tests/test_search.py::test_return_train_score_warn\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_results_none_param\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_results_rank_tie_breaking\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_timing\", \"sklearn/model_selection/tests/test_search.py::test_search_iid_param\", \"sklearn/model_selection/tests/test_search.py::test_search_train_scores_set_to_false\", \"sklearn/model_selection/tests/test_search.py::test_stochastic_gradient_loss_param\", \"sklearn/model_selection/tests/test_search.py::test_transform_inverse_transform_round_trip\", \"sklearn/model_selection/tests/test_search.py::test_trivial_cv_results_attr\", \"sklearn/model_selection/tests/test_search.py::test_unsupervised_grid_search\", \"sklearn/model_selection/tests/test_search.py::test_y_as_list\", \"sklearn/svm/tests/test_svm.py::test_auto_weight\", \"sklearn/svm/tests/test_svm.py::test_bad_input\", \"sklearn/svm/tests/test_svm.py::test_consistent_proba\", \"sklearn/svm/tests/test_svm.py::test_crammer_singer_binary\", \"sklearn/svm/tests/test_svm.py::test_decision_function\", \"sklearn/svm/tests/test_svm.py::test_decision_function_shape\", \"sklearn/svm/tests/test_svm.py::test_decision_function_shape_two_class\", \"sklearn/svm/tests/test_svm.py::test_dense_liblinear_intercept_handling\", \"sklearn/svm/tests/test_svm.py::test_gamma_auto\", \"sklearn/svm/tests/test_svm.py::test_gamma_scale\", \"sklearn/svm/tests/test_svm.py::test_hasattr_predict_proba\", \"sklearn/svm/tests/test_svm.py::test_immutable_coef_property\", \"sklearn/svm/tests/test_svm.py::test_liblinear_set_coef\", \"sklearn/svm/tests/test_svm.py::test_libsvm_iris\", \"sklearn/svm/tests/test_svm.py::test_libsvm_parameters\", \"sklearn/svm/tests/test_svm.py::test_linear_svc_intercept_scaling\", \"sklearn/svm/tests/test_svm.py::test_linear_svx_uppercase_loss_penality_raises_error\", \"sklearn/svm/tests/test_svm.py::test_linearsvc\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_crammer_singer\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_fit_sampleweight\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_iris\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_parameters\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_verbose\", \"sklearn/svm/tests/test_svm.py::test_linearsvr\", \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\", \"sklearn/svm/tests/test_svm.py::test_linearsvx_loss_penalty_deprecations\", \"sklearn/svm/tests/test_svm.py::test_lsvc_intercept_scaling_zero\", \"sklearn/svm/tests/test_svm.py::test_oneclass\", \"sklearn/svm/tests/test_svm.py::test_oneclass_decision_function\", \"sklearn/svm/tests/test_svm.py::test_oneclass_score_samples\", \"sklearn/svm/tests/test_svm.py::test_ovr_decision_function\", \"sklearn/svm/tests/test_svm.py::test_precomputed\", \"sklearn/svm/tests/test_svm.py::test_probability\", \"sklearn/svm/tests/test_svm.py::test_sample_weights\", \"sklearn/svm/tests/test_svm.py::test_sparse_precomputed\", \"sklearn/svm/tests/test_svm.py::test_svc_bad_kernel\", \"sklearn/svm/tests/test_svm.py::test_svc_clone_with_callable_kernel\", \"sklearn/svm/tests/test_svm.py::test_svr\", \"sklearn/svm/tests/test_svm.py::test_svr_coef_sign\", \"sklearn/svm/tests/test_svm.py::test_svr_errors\", \"sklearn/svm/tests/test_svm.py::test_svr_predict\", \"sklearn/svm/tests/test_svm.py::test_timeout\", \"sklearn/svm/tests/test_svm.py::test_tweak_params\", \"sklearn/svm/tests/test_svm.py::test_unfitted\", \"sklearn/svm/tests/test_svm.py::test_unicode_kernel\", \"sklearn/svm/tests/test_svm.py::test_weight\"]",
  "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1",
  "patch_files": [
    "sklearn/linear_model/logistic.py",
    "sklearn/svm/base.py"
  ],
  "test_patch_files": [
    "sklearn/linear_model/tests/test_logistic.py",
    "sklearn/model_selection/tests/test_search.py",
    "sklearn/svm/tests/test_svm.py"
  ],
  "patch_diff_details": {
    "sklearn/linear_model/logistic.py": {
      "diffs": [
        {
          "start_line_old": 710,
          "end_line_old": 710,
          "file_pos": 4,
          "file_context_length": 31705,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegressionCV.fit.fold_coefs__LogisticRegressionCV.fit.41.coefs_paths.1",
          "closest_snippet_line_distance": 970,
          "pos": 34,
          "context_length": 20133
        }
      ]
    },
    "sklearn/svm/base.py": {
      "diffs": [
        {
          "start_line_old": 910,
          "end_line_old": 910,
          "file_pos": 48,
          "file_context_length": 194714,
          "pos": 93,
          "context_length": 55113
        }
      ]
    }
  },
  "vectors": 2922,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py_1_models.1",
      "distance": 0.9037944078445435,
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py",
      "start_line": 1,
      "end_line": 59,
      "tokens": 462,
      "context_length": 462
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_bench_bench.2.1",
      "distance": 0.912921667098999,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 67,
      "end_line": 92,
      "tokens": 201,
      "context_length": 663
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_46_",
      "distance": 0.9410557150840759,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 197,
      "end_line": 239,
      "tokens": 373,
      "context_length": 1036
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_plot_train_losses_plot_test_scores.2.5",
      "distance": 0.9450313448905945,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 95,
      "end_line": 121,
      "tokens": 218,
      "context_length": 1254
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_plt_get_loss.6.1",
      "distance": 0.959754467010498,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 6,
      "end_line": 31,
      "tokens": 202,
      "context_length": 1456
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_np_DEFAULT_EPSILON.1",
      "distance": 0.9641145467758179,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 7,
      "end_line": 42,
      "tokens": 312,
      "context_length": 1768
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegression.1_LogisticRegression.1",
      "distance": 0.9658801555633545,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 956,
      "end_line": 1156,
      "tokens": 2187,
      "context_length": 3955,
      "file_pos": 4
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train_check_classifiers_train.7.22.y_prob.8.y_log_prob.3",
      "distance": 0.9659062027931213,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1272,
      "end_line": 1379,
      "tokens": 1122,
      "context_length": 5077
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_nan_inf_check_estimators_nan_inf.rnd.13.2.10.1.4.1",
      "distance": 0.9682848453521729,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1027,
      "end_line": 1095,
      "tokens": 601,
      "context_length": 5678
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_FitFailedWarning_FitFailedWarning.1",
      "distance": 0.9686900973320007,
      "file_path": "sklearn/exceptions.py",
      "start_line": 99,
      "end_line": 128,
      "tokens": 341,
      "context_length": 6019
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_17_bench_one.12.1",
      "distance": 0.9715267419815063,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 34,
      "end_line": 64,
      "tokens": 225,
      "context_length": 6244
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py_26_",
      "distance": 0.9749222993850708,
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py",
      "start_line": 61,
      "end_line": 119,
      "tokens": 519,
      "context_length": 6763
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_lasso_model_selection.py_29_",
      "distance": 0.9841038584709167,
      "file_path": "examples/linear_model/plot_lasso_model_selection.py",
      "start_line": 92,
      "end_line": 156,
      "tokens": 503,
      "context_length": 7266
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_ChangedBehaviorWarning_DataConversionWarning.1",
      "distance": 0.9855539202690125,
      "file_path": "sklearn/exceptions.py",
      "start_line": 40,
      "end_line": 71,
      "tokens": 216,
      "context_length": 7482
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/examples/text/plot_document_classification_20newsgroups.py_results_",
      "distance": 0.9880018830299377,
      "file_path": "examples/text/plot_document_classification_20newsgroups.py",
      "start_line": 250,
      "end_line": 328,
      "tokens": 673,
      "context_length": 8155
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_get_max_squared_sum_clfs.1",
      "distance": 0.9936691522598267,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 142,
      "end_line": 194,
      "tokens": 532,
      "context_length": 8687
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_train_check_regressors_train.23.1",
      "distance": 0.9971307516098022,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1636,
      "end_line": 1674,
      "tokens": 441,
      "context_length": 9128
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_glmnet.py_10_",
      "distance": 0.9973340034484863,
      "file_path": "benchmarks/bench_glmnet.py",
      "start_line": 47,
      "end_line": 129,
      "tokens": 796,
      "context_length": 9924
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_plot_dloss_plot_dloss.6.5",
      "distance": 0.9988934397697449,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 124,
      "end_line": 139,
      "tokens": 148,
      "context_length": 10072
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_sys_cd_fast",
      "distance": 1.0020073652267456,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 8,
      "end_line": 29,
      "tokens": 154,
      "context_length": 10226
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/__init__.py_1_30.4.__all__.1",
      "distance": 1.0123040676116943,
      "file_path": "sklearn/__init__.py",
      "start_line": 1,
      "end_line": 78,
      "tokens": 659,
      "context_length": 10885
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegressionCV.1_LogisticRegressionCV.1",
      "distance": 1.0203526020050049,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1368,
      "end_line": 1562,
      "tokens": 2098,
      "context_length": 12983,
      "file_pos": 11
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_ElasticNetCV.1_ElasticNetCV.1",
      "distance": 1.0250566005706787,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 1395,
      "end_line": 1571,
      "tokens": 1686,
      "context_length": 14669
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.3.2",
      "distance": 1.0256085395812988,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1701,
      "end_line": 1743,
      "tokens": 449,
      "context_length": 15118
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegressionCV.fit.42_",
      "distance": 1.0268664360046387,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1737,
      "end_line": 1792,
      "tokens": 542,
      "context_length": 15660,
      "file_pos": 11
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_DataDimensionalityWarning_EfficiencyWarning.1",
      "distance": 1.0317333936691284,
      "file_path": "sklearn/exceptions.py",
      "start_line": 74,
      "end_line": 96,
      "tokens": 186,
      "context_length": 15846
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_lasso_model_selection.py_1_alpha_aic_.1",
      "distance": 1.0321896076202393,
      "file_path": "examples/linear_model/plot_lasso_model_selection.py",
      "start_line": 1,
      "end_line": 78,
      "tokens": 691,
      "context_length": 16537
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/covariance/graph_lasso_.py_GraphicalLassoCV.fit.13_GraphicalLassoCV.fit.18",
      "distance": 1.0327403545379639,
      "file_path": "sklearn/covariance/graph_lasso_.py",
      "start_line": 619,
      "end_line": 697,
      "tokens": 821,
      "context_length": 17358
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_logistic_path.py_1_",
      "distance": 1.0350887775421143,
      "file_path": "examples/linear_model/plot_logistic_path.py",
      "start_line": 1,
      "end_line": 56,
      "tokens": 286,
      "context_length": 17644
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/learning_curve.py_1___all__.1",
      "distance": 1.035527229309082,
      "file_path": "sklearn/learning_curve.py",
      "start_line": 1,
      "end_line": 25,
      "tokens": 145,
      "context_length": 17789
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_1_get_scorer",
      "distance": 1.035760760307312,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1,
      "end_line": 37,
      "tokens": 219,
      "context_length": 18008,
      "file_pos": 14
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_early_stopping.py_1_bar2.1",
      "distance": 1.036859393119812,
      "file_path": "examples/ensemble/plot_gradient_boosting_early_stopping.py",
      "start_line": 1,
      "end_line": 103,
      "tokens": 772,
      "context_length": 18780
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegressionCV.fit.fold_coefs__LogisticRegressionCV.fit.41.coefs_paths.1",
      "distance": 1.0368865728378296,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1680,
      "end_line": 1735,
      "tokens": 642,
      "context_length": 19422,
      "file_pos": 15
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_logistic_regression_path.26_logistic_regression_path.27.1",
      "distance": 1.0485584735870361,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 704,
      "end_line": 762,
      "tokens": 711,
      "context_length": 20133,
      "file_pos": 15
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegressionCV.__init___LogisticRegressionCV.__init__.self.random_state.1",
      "distance": 1.0497905015945435,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1564,
      "end_line": 1584,
      "tokens": 221,
      "context_length": 20354,
      "file_pos": 15
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_outliers_train_check_outliers_train.36.contamination.7.2",
      "distance": 1.050750970840454,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1382,
      "end_line": 1440,
      "tokens": 489,
      "context_length": 20843
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/randomized_l1.py_RandomizedLogisticRegression_RandomizedLogisticRegression.1",
      "distance": 1.051966667175293,
      "file_path": "sklearn/linear_model/randomized_l1.py",
      "start_line": 390,
      "end_line": 506,
      "tokens": 1055,
      "context_length": 21898
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_train_error_vs_test_error.py_1_",
      "distance": 1.0531799793243408,
      "file_path": "examples/model_selection/plot_train_error_vs_test_error.py",
      "start_line": 1,
      "end_line": 76,
      "tokens": 606,
      "context_length": 22504
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegression.fit.22_LogisticRegression.fit.33.1",
      "distance": 1.0551972389221191,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1267,
      "end_line": 1308,
      "tokens": 426,
      "context_length": 22930,
      "file_pos": 17
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/examples/exercises/plot_cv_diabetes.py_1_",
      "distance": 1.0554828643798828,
      "file_path": "examples/exercises/plot_cv_diabetes.py",
      "start_line": 1,
      "end_line": 81,
      "tokens": 668,
      "context_length": 23598
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sgd_regression.py_np_",
      "distance": 1.0568304061889648,
      "file_path": "benchmarks/bench_sgd_regression.py",
      "start_line": 4,
      "end_line": 151,
      "tokens": 1314,
      "context_length": 24912
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit2d_1feature_check_fit2d_1feature.rnd.16.2.1.1",
      "distance": 1.0573937892913818,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 746,
      "end_line": 777,
      "tokens": 297,
      "context_length": 25209
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_sparse_logistic_regression_mnist.py_1_",
      "distance": 1.0587728023529053,
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_mnist.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 655,
      "context_length": 25864
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_enet_path.26_enet_path.28.1",
      "distance": 1.061741590499878,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 454,
      "end_line": 503,
      "tokens": 588,
      "context_length": 26452
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_mnist.py_ESTIMATORS_ESTIMATORS.1",
      "distance": 1.0620263814926147,
      "file_path": "benchmarks/bench_mnist.py",
      "start_line": 85,
      "end_line": 106,
      "tokens": 314,
      "context_length": 26766
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/examples/covariance/plot_outlier_detection.py_1_26",
      "distance": 1.0629956722259521,
      "file_path": "examples/covariance/plot_outlier_detection.py",
      "start_line": 1,
      "end_line": 76,
      "tokens": 586,
      "context_length": 27352
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_BaseGradientBoosting._check_params_BaseGradientBoosting._check_params.14.1",
      "distance": 1.0640760660171509,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 810,
      "end_line": 893,
      "tokens": 806,
      "context_length": 28158
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGD._validate_params_BaseSGD._validate_params.self._max_iter.1",
      "distance": 1.0674974918365479,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 85,
      "end_line": 136,
      "tokens": 595,
      "context_length": 28753
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_tree.py_13_",
      "distance": 1.070395588874817,
      "file_path": "benchmarks/bench_tree.py",
      "start_line": 64,
      "end_line": 125,
      "tokens": 523,
      "context_length": 29276
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_logistic_regression_path.22_logistic_regression_path.n_iter.1",
      "distance": 1.070882797241211,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 656,
      "end_line": 703,
      "tokens": 639,
      "context_length": 29915,
      "file_pos": 24
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_no_decision_function_check_regressors_no_decision_function.rng.8.5",
      "distance": 1.071533441543579,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1677,
      "end_line": 1698,
      "tokens": 214,
      "context_length": 30129
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_ensemble_oob.py_1_",
      "distance": 1.0734268426895142,
      "file_path": "examples/ensemble/plot_ensemble_oob.py",
      "start_line": 1,
      "end_line": 87,
      "tokens": 681,
      "context_length": 30810
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_int_check_regressors_int.18",
      "distance": 1.0745569467544556,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1608,
      "end_line": 1633,
      "tokens": 277,
      "context_length": 31087
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_learning_curve.py_digits_",
      "distance": 1.0748322010040283,
      "file_path": "examples/model_selection/plot_learning_curve.py",
      "start_line": 107,
      "end_line": 126,
      "tokens": 220,
      "context_length": 31307
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_randomized_search.py_17_",
      "distance": 1.0785599946975708,
      "file_path": "examples/model_selection/plot_randomized_search.py",
      "start_line": 54,
      "end_line": 89,
      "tokens": 332,
      "context_length": 31639
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_unfitted_check_estimators_unfitted.9.1",
      "distance": 1.079702377319336,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1462,
      "end_line": 1491,
      "tokens": 223,
      "context_length": 31862
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_model_complexity_influence.py__count_nonzero_coefficients_",
      "distance": 1.081845998764038,
      "file_path": "examples/applications/plot_model_complexity_influence.py",
      "start_line": 121,
      "end_line": 170,
      "tokens": 540,
      "context_length": 32402
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/examples/calibration/plot_compare_calibration.py_1_lr.1",
      "distance": 1.0839000940322876,
      "file_path": "examples/calibration/plot_compare_calibration.py",
      "start_line": 1,
      "end_line": 78,
      "tokens": 759,
      "context_length": 33161
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/examples/text/plot_document_classification_20newsgroups.py_90_benchmark.19.1",
      "distance": 1.0843968391418457,
      "file_path": "examples/text/plot_document_classification_20newsgroups.py",
      "start_line": 206,
      "end_line": 247,
      "tokens": 338,
      "context_length": 33499
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/examples/classification/plot_lda.py_18_",
      "distance": 1.0846118927001953,
      "file_path": "examples/classification/plot_lda.py",
      "start_line": 41,
      "end_line": 72,
      "tokens": 325,
      "context_length": 33824
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_oob.py_test_score_",
      "distance": 1.0851484537124634,
      "file_path": "examples/ensemble/plot_gradient_boosting_oob.py",
      "start_line": 92,
      "end_line": 137,
      "tokens": 447,
      "context_length": 34271
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/examples/neural_networks/plot_mlp_training_curves.py_1_plot_args.1",
      "distance": 1.0855727195739746,
      "file_path": "examples/neural_networks/plot_mlp_training_curves.py",
      "start_line": 1,
      "end_line": 48,
      "tokens": 544,
      "context_length": 34815
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_1_MULTI_OUTPUT.1",
      "distance": 1.086113691329956,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1,
      "end_line": 74,
      "tokens": 640,
      "context_length": 35455
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/doc/tutorial/text_analytics/solutions/exercise_02_sentiment.py_sys_",
      "distance": 1.0868427753448486,
      "file_path": "doc/tutorial/text_analytics/solutions/exercise_02_sentiment.py",
      "start_line": 14,
      "end_line": 80,
      "tokens": 633,
      "context_length": 36088
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py_30_normalized_mutual_info_scorer.1",
      "distance": 1.0872046947479248,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 469,
      "end_line": 533,
      "tokens": 744,
      "context_length": 36832
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/least_angle.py_lars_path.23_lars_path.23.10.3.AA.3",
      "distance": 1.0877825021743774,
      "file_path": "sklearn/linear_model/least_angle.py",
      "start_line": 207,
      "end_line": 365,
      "tokens": 1584,
      "context_length": 38416
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_LinearModelCV.fit.16_LinearModelCV.fit.45",
      "distance": 1.0880331993103027,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 1155,
      "end_line": 1227,
      "tokens": 810,
      "context_length": 39226
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_LassoCV.path_ElasticNetCV",
      "distance": 1.088927984237671,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 1380,
      "end_line": 1594,
      "tokens": 208,
      "context_length": 39434
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/randomized_l1.py_30__randomized_logistic.8.1",
      "distance": 1.089214563369751,
      "file_path": "sklearn/linear_model/randomized_l1.py",
      "start_line": 358,
      "end_line": 387,
      "tokens": 296,
      "context_length": 39730
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/examples/covariance/plot_outlier_detection.py_27_",
      "distance": 1.0898686647415161,
      "file_path": "examples/covariance/plot_outlier_detection.py",
      "start_line": 77,
      "end_line": 130,
      "tokens": 632,
      "context_length": 40362
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_robust_fit.py_29_",
      "distance": 1.0904324054718018,
      "file_path": "examples/linear_model/plot_robust_fit.py",
      "start_line": 74,
      "end_line": 98,
      "tokens": 285,
      "context_length": 40647
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/sklearn/covariance/graph_lasso_.py_graphical_lasso.19_graphical_lasso.20.2.1.2.1.1",
      "distance": 1.0908104181289673,
      "file_path": "sklearn/covariance/graph_lasso_.py",
      "start_line": 202,
      "end_line": 277,
      "tokens": 858,
      "context_length": 41505
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_covertype.py_25_",
      "distance": 1.0919325351715088,
      "file_path": "benchmarks/bench_covertype.py",
      "start_line": 113,
      "end_line": 191,
      "tokens": 757,
      "context_length": 42262
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_1_24",
      "distance": 1.0926181077957153,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 1,
      "end_line": 31,
      "tokens": 141,
      "context_length": 42403
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/examples/neighbors/plot_lof.py_1_",
      "distance": 1.0927281379699707,
      "file_path": "examples/neighbors/plot_lof.py",
      "start_line": 1,
      "end_line": 60,
      "tokens": 510,
      "context_length": 42913
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_oob.py_1_34",
      "distance": 1.0931801795959473,
      "file_path": "examples/ensemble/plot_gradient_boosting_oob.py",
      "start_line": 1,
      "end_line": 91,
      "tokens": 772,
      "context_length": 43685
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_ols_ridge_variance.py_1_",
      "distance": 1.0938522815704346,
      "file_path": "examples/linear_model/plot_ols_ridge_variance.py",
      "start_line": 1,
      "end_line": 72,
      "tokens": 526,
      "context_length": 44211
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_nested_cross_validation_iris.py_22_",
      "distance": 1.094163179397583,
      "file_path": "examples/model_selection/plot_nested_cross_validation_iris.py",
      "start_line": 74,
      "end_line": 118,
      "tokens": 433,
      "context_length": 44644
    },
    {
      "position": 79,
      "id": "/tmp/repos/scikit-learn/examples/plot_anomaly_comparison.py_1_rng.1",
      "distance": 1.094667911529541,
      "file_path": "examples/plot_anomaly_comparison.py",
      "start_line": 1,
      "end_line": 82,
      "tokens": 716,
      "context_length": 45360
    },
    {
      "position": 80,
      "id": "/tmp/repos/scikit-learn/examples/covariance/plot_covariance_estimation.py_1_34",
      "distance": 1.0948275327682495,
      "file_path": "examples/covariance/plot_covariance_estimation.py",
      "start_line": 1,
      "end_line": 89,
      "tokens": 772,
      "context_length": 46132
    },
    {
      "position": 81,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_logistic_regression_path.2_logistic_regression_path.21.8.w0.1",
      "distance": 1.0957175493240356,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 590,
      "end_line": 654,
      "tokens": 740,
      "context_length": 46872,
      "file_pos": 43
    },
    {
      "position": 82,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/randomized_l1.py_RandomizedLogisticRegression.__init___RandomizedLogisticRegression._preprocess_data.3.1",
      "distance": 1.096398949623108,
      "file_path": "sklearn/linear_model/randomized_l1.py",
      "start_line": 507,
      "end_line": 538,
      "tokens": 332,
      "context_length": 47204
    },
    {
      "position": 83,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_logistic.py_1_",
      "distance": 1.096771001815796,
      "file_path": "examples/linear_model/plot_logistic.py",
      "start_line": 1,
      "end_line": 67,
      "tokens": 440,
      "context_length": 47644
    },
    {
      "position": 84,
      "id": "/tmp/repos/scikit-learn/sklearn/covariance/robust_covariance.py__c_step__c_step.24.1",
      "distance": 1.0968501567840576,
      "file_path": "sklearn/covariance/robust_covariance.py",
      "start_line": 95,
      "end_line": 175,
      "tokens": 755,
      "context_length": 48399
    },
    {
      "position": 85,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_stability_low_dim_dense.py_25_",
      "distance": 1.0970571041107178,
      "file_path": "examples/cluster/plot_kmeans_stability_low_dim_dense.py",
      "start_line": 70,
      "end_line": 120,
      "tokens": 506,
      "context_length": 48905
    },
    {
      "position": 86,
      "id": "/tmp/repos/scikit-learn/examples/calibration/plot_compare_calibration.py_gnb_",
      "distance": 1.0970697402954102,
      "file_path": "examples/calibration/plot_compare_calibration.py",
      "start_line": 79,
      "end_line": 123,
      "tokens": 396,
      "context_length": 49301
    },
    {
      "position": 87,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_one_label_check_classifiers_one_label.8.5.2.2",
      "distance": 1.0977214574813843,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1238,
      "end_line": 1269,
      "tokens": 258,
      "context_length": 49559
    },
    {
      "position": 88,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_clustering_check_clustering.38",
      "distance": 1.0977652072906494,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1164,
      "end_line": 1218,
      "tokens": 567,
      "context_length": 50126
    },
    {
      "position": 89,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py__log_reg_scoring_path.2_LogisticRegression",
      "distance": 1.0982950925827026,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 895,
      "end_line": 1363,
      "tokens": 602,
      "context_length": 50728,
      "file_pos": 46
    },
    {
      "position": 90,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_LassoCV_LassoCV.1",
      "distance": 1.0989357233047485,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 1246,
      "end_line": 1379,
      "tokens": 1114,
      "context_length": 51842
    },
    {
      "position": 91,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__mini_batch_convergence__mini_batch_convergence.28.1",
      "distance": 1.100528597831726,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1162,
      "end_line": 1225,
      "tokens": 659,
      "context_length": 52501
    },
    {
      "position": 92,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_SGDClassifier.1_SGDClassifier.1",
      "distance": 1.100615382194519,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 594,
      "end_line": 788,
      "tokens": 1964,
      "context_length": 54465
    },
    {
      "position": 93,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py__fit_liblinear.2_",
      "distance": 1.1006889343261719,
      "file_path": "sklearn/svm/base.py",
      "start_line": 860,
      "end_line": 922,
      "tokens": 648,
      "context_length": 55113,
      "file_pos": 48
    },
    {
      "position": 94,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_set_checking_parameters_set_checking_parameters.params.12.3",
      "distance": 1.1014246940612793,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 310,
      "end_line": 363,
      "tokens": 520,
      "context_length": 55633
    },
    {
      "position": 95,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_regularization.py_1_",
      "distance": 1.102630615234375,
      "file_path": "examples/ensemble/plot_gradient_boosting_regularization.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 696,
      "context_length": 56329
    },
    {
      "position": 96,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_supervised_y_no_nan_check_supervised_y_no_nan.estimator.7.3.1",
      "distance": 1.1027674674987793,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 143,
      "end_line": 163,
      "tokens": 203,
      "context_length": 56532
    },
    {
      "position": 97,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_lof.py_15_",
      "distance": 1.1036630868911743,
      "file_path": "benchmarks/bench_lof.py",
      "start_line": 36,
      "end_line": 107,
      "tokens": 650,
      "context_length": 57182
    },
    {
      "position": 98,
      "id": "/tmp/repos/scikit-learn/examples/covariance/plot_robust_vs_empirical_covariance.py_err_loc_emp_pure_34",
      "distance": 1.1036707162857056,
      "file_path": "examples/covariance/plot_robust_vs_empirical_covariance.py",
      "start_line": 77,
      "end_line": 141,
      "tokens": 785,
      "context_length": 57967
    },
    {
      "position": 99,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegression.__init___LogisticRegression.__init__.self.n_jobs.1",
      "distance": 1.1037418842315674,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1158,
      "end_line": 1176,
      "tokens": 202,
      "context_length": 58169,
      "file_pos": 51
    },
    {
      "position": 100,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_mnist.py_30_",
      "distance": 1.1038910150527954,
      "file_path": "benchmarks/bench_mnist.py",
      "start_line": 109,
      "end_line": 181,
      "tokens": 695,
      "context_length": 58864
    },
    {
      "position": 101,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py_assert_warns_assert_warns.5.1",
      "distance": 1.1045777797698975,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 117,
      "end_line": 159,
      "tokens": 299,
      "context_length": 59163
    }
  ],
  "files": [
    {
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py",
      "position": 1,
      "tokens": 988,
      "context_length": 988
    },
    {
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "position": 2,
      "tokens": 1948,
      "context_length": 2936
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 3,
      "tokens": 12167,
      "context_length": 15103
    },
    {
      "file_path": "sklearn/linear_model/logistic.py",
      "position": 4,
      "tokens": 16602,
      "context_length": 31705
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 5,
      "tokens": 19276,
      "context_length": 50981
    },
    {
      "file_path": "sklearn/exceptions.py",
      "position": 6,
      "tokens": 1186,
      "context_length": 52167
    },
    {
      "file_path": "examples/linear_model/plot_lasso_model_selection.py",
      "position": 7,
      "tokens": 1329,
      "context_length": 53496
    },
    {
      "file_path": "examples/text/plot_document_classification_20newsgroups.py",
      "position": 8,
      "tokens": 2557,
      "context_length": 56053
    },
    {
      "file_path": "benchmarks/bench_glmnet.py",
      "position": 9,
      "tokens": 1087,
      "context_length": 57140
    },
    {
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "position": 10,
      "tokens": 20511,
      "context_length": 77651
    },
    {
      "file_path": "sklearn/__init__.py",
      "position": 11,
      "tokens": 792,
      "context_length": 78443
    },
    {
      "file_path": "sklearn/covariance/graph_lasso_.py",
      "position": 12,
      "tokens": 8184,
      "context_length": 86627
    },
    {
      "file_path": "examples/linear_model/plot_logistic_path.py",
      "position": 13,
      "tokens": 311,
      "context_length": 86938
    },
    {
      "file_path": "sklearn/learning_curve.py",
      "position": 14,
      "tokens": 3408,
      "context_length": 90346
    },
    {
      "file_path": "examples/ensemble/plot_gradient_boosting_early_stopping.py",
      "position": 15,
      "tokens": 1165,
      "context_length": 91511
    },
    {
      "file_path": "sklearn/linear_model/randomized_l1.py",
      "position": 16,
      "tokens": 5771,
      "context_length": 97282
    },
    {
      "file_path": "examples/model_selection/plot_train_error_vs_test_error.py",
      "position": 17,
      "tokens": 631,
      "context_length": 97913
    },
    {
      "file_path": "examples/exercises/plot_cv_diabetes.py",
      "position": 18,
      "tokens": 668,
      "context_length": 98581
    },
    {
      "file_path": "benchmarks/bench_sgd_regression.py",
      "position": 19,
      "tokens": 1341,
      "context_length": 99922
    },
    {
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_mnist.py",
      "position": 20,
      "tokens": 686,
      "context_length": 100608
    },
    {
      "file_path": "benchmarks/bench_mnist.py",
      "position": 21,
      "tokens": 1731,
      "context_length": 102339
    },
    {
      "file_path": "examples/covariance/plot_outlier_detection.py",
      "position": 22,
      "tokens": 1219,
      "context_length": 103558
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 23,
      "tokens": 18264,
      "context_length": 121822
    },
    {
      "file_path": "benchmarks/bench_tree.py",
      "position": 24,
      "tokens": 870,
      "context_length": 122692
    },
    {
      "file_path": "examples/ensemble/plot_ensemble_oob.py",
      "position": 25,
      "tokens": 733,
      "context_length": 123425
    },
    {
      "file_path": "examples/model_selection/plot_learning_curve.py",
      "position": 26,
      "tokens": 1205,
      "context_length": 124630
    },
    {
      "file_path": "examples/model_selection/plot_randomized_search.py",
      "position": 27,
      "tokens": 714,
      "context_length": 125344
    },
    {
      "file_path": "examples/applications/plot_model_complexity_influence.py",
      "position": 28,
      "tokens": 1524,
      "context_length": 126868
    },
    {
      "file_path": "examples/calibration/plot_compare_calibration.py",
      "position": 29,
      "tokens": 1181,
      "context_length": 128049
    },
    {
      "file_path": "examples/classification/plot_lda.py",
      "position": 30,
      "tokens": 591,
      "context_length": 128640
    },
    {
      "file_path": "examples/ensemble/plot_gradient_boosting_oob.py",
      "position": 31,
      "tokens": 1248,
      "context_length": 129888
    },
    {
      "file_path": "examples/neural_networks/plot_mlp_training_curves.py",
      "position": 32,
      "tokens": 927,
      "context_length": 130815
    },
    {
      "file_path": "doc/tutorial/text_analytics/solutions/exercise_02_sentiment.py",
      "position": 33,
      "tokens": 726,
      "context_length": 131541
    },
    {
      "file_path": "sklearn/metrics/scorer.py",
      "position": 34,
      "tokens": 4874,
      "context_length": 136415
    },
    {
      "file_path": "sklearn/linear_model/least_angle.py",
      "position": 35,
      "tokens": 13721,
      "context_length": 150136
    },
    {
      "file_path": "examples/linear_model/plot_robust_fit.py",
      "position": 36,
      "tokens": 794,
      "context_length": 150930
    },
    {
      "file_path": "benchmarks/bench_covertype.py",
      "position": 37,
      "tokens": 1903,
      "context_length": 152833
    },
    {
      "file_path": "sklearn/utils/validation.py",
      "position": 38,
      "tokens": 7362,
      "context_length": 160195
    },
    {
      "file_path": "examples/neighbors/plot_lof.py",
      "position": 39,
      "tokens": 510,
      "context_length": 160705
    },
    {
      "file_path": "examples/linear_model/plot_ols_ridge_variance.py",
      "position": 40,
      "tokens": 534,
      "context_length": 161239
    },
    {
      "file_path": "examples/model_selection/plot_nested_cross_validation_iris.py",
      "position": 41,
      "tokens": 1074,
      "context_length": 162313
    },
    {
      "file_path": "examples/plot_anomaly_comparison.py",
      "position": 42,
      "tokens": 1114,
      "context_length": 163427
    },
    {
      "file_path": "examples/covariance/plot_covariance_estimation.py",
      "position": 43,
      "tokens": 1141,
      "context_length": 164568
    },
    {
      "file_path": "examples/linear_model/plot_logistic.py",
      "position": 44,
      "tokens": 448,
      "context_length": 165016
    },
    {
      "file_path": "sklearn/covariance/robust_covariance.py",
      "position": 45,
      "tokens": 6859,
      "context_length": 171875
    },
    {
      "file_path": "examples/cluster/plot_kmeans_stability_low_dim_dense.py",
      "position": 46,
      "tokens": 1059,
      "context_length": 172934
    },
    {
      "file_path": "sklearn/cluster/k_means_.py",
      "position": 47,
      "tokens": 13721,
      "context_length": 186655
    },
    {
      "file_path": "sklearn/svm/base.py",
      "position": 48,
      "tokens": 8059,
      "context_length": 194714
    },
    {
      "file_path": "examples/ensemble/plot_gradient_boosting_regularization.py",
      "position": 49,
      "tokens": 724,
      "context_length": 195438
    },
    {
      "file_path": "benchmarks/bench_lof.py",
      "position": 50,
      "tokens": 916,
      "context_length": 196354
    },
    {
      "file_path": "examples/covariance/plot_robust_vs_empirical_covariance.py",
      "position": 51,
      "tokens": 1672,
      "context_length": 198026
    },
    {
      "file_path": "sklearn/utils/testing.py",
      "position": 52,
      "tokens": 6842,
      "context_length": 204868
    }
  ]
}