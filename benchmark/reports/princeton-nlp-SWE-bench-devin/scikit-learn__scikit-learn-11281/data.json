{
  "instance_id": "scikit-learn__scikit-learn-11281",
  "model_patch": "diff --git a/sklearn/mixture/gaussian_mixture.py b/sklearn/mixture/gaussian_mixture.py\nindex d58a9e326..27e9fce0b 100644\n--- a/sklearn/mixture/gaussian_mixture.py\n+++ b/sklearn/mixture/gaussian_mixture.py\n@@ -9,11 +9,11 @@ import numpy as np\n from scipy import linalg\n \n from .base import BaseMixture, _check_shape\n-from ..externals.six.moves import zip\n from ..utils import check_array\n from ..utils.validation import check_is_fitted\n from ..utils.extmath import row_norms\n-\n+import warnings\n+from sklearn.exceptions import ConvergenceWarning\n \n ###############################################################################\n # Gaussian mixture shape checkers used by the GaussianMixture class\n@@ -33,8 +33,7 @@ def _check_weights(weights, n_components):\n     -------\n     weights : array, shape (n_components,)\n     \"\"\"\n-    weights = check_array(weights, dtype=[np.float64, np.float32],\n-                          ensure_2d=False)\n+    weights = check_array(weights, dtype=\"float64\", ensure_2d=False)\n     _check_shape(weights, (n_components,), 'weights')\n \n     # check range\n@@ -69,7 +68,7 @@ def _check_means(means, n_components, n_features):\n     -------\n     means : array, (n_components, n_features)\n     \"\"\"\n-    means = check_array(means, dtype=[np.float64, np.float32], ensure_2d=False)\n+    means = check_array(means, dtype=\"float64\", ensure_2d=False)\n     _check_shape(means, (n_components, n_features), 'means')\n     return means\n \n@@ -118,9 +117,7 @@ def _check_precisions(precisions, covariance_type, n_components, n_features):\n     -------\n     precisions : array\n     \"\"\"\n-    precisions = check_array(precisions, dtype=[np.float64, np.float32],\n-                             ensure_2d=False,\n-                             allow_nd=covariance_type == 'full')\n+    precisions = check_array(precisions, dtype=\"float64\", ensure_2d=False, allow_nd=covariance_type == 'full')\n \n     precisions_shape = {'full': (n_components, n_features, n_features),\n                         'tied': (n_features, n_features),\n@@ -402,18 +399,17 @@ def _estimate_log_gaussian_prob(X, means, precisions_chol, covariance_type):\n     \"\"\"\n     n_samples, n_features = X.shape\n     n_components, _ = means.shape\n+    log_prob = np.zeros((n_samples, n_components))\n     # det(precision_chol) is half of det(precision)\n     log_det = _compute_log_det_cholesky(\n         precisions_chol, covariance_type, n_features)\n \n     if covariance_type == 'full':\n-        log_prob = np.empty((n_samples, n_components))\n         for k, (mu, prec_chol) in enumerate(zip(means, precisions_chol)):\n             y = np.dot(X, prec_chol) - np.dot(mu, prec_chol)\n             log_prob[:, k] = np.sum(np.square(y), axis=1)\n \n     elif covariance_type == 'tied':\n-        log_prob = np.empty((n_samples, n_components))\n         for k, mu in enumerate(means):\n             y = np.dot(X, precisions_chol) - np.dot(mu, precisions_chol)\n             log_prob[:, k] = np.sum(np.square(y), axis=1)\n@@ -580,13 +576,13 @@ class GaussianMixture(BaseMixture):\n         inference.\n     \"\"\"\n \n-    def __init__(self, n_components=1, covariance_type='full', tol=1e-3,\n+    def __init__(self, n_clusters=1, covariance_type='full', tol=1e-3,\n                  reg_covar=1e-6, max_iter=100, n_init=1, init_params='kmeans',\n                  weights_init=None, means_init=None, precisions_init=None,\n                  random_state=None, warm_start=False,\n                  verbose=0, verbose_interval=10):\n         super(GaussianMixture, self).__init__(\n-            n_components=n_components, tol=tol, reg_covar=reg_covar,\n+            n_components=n_clusters, tol=tol, reg_covar=reg_covar,\n             max_iter=max_iter, n_init=n_init, init_params=init_params,\n             random_state=random_state, warm_start=warm_start,\n             verbose=verbose, verbose_interval=verbose_interval)\n@@ -607,16 +603,16 @@ class GaussianMixture(BaseMixture):\n \n         if self.weights_init is not None:\n             self.weights_init = _check_weights(self.weights_init,\n-                                               self.n_components)\n+                                               self.n_clusters)\n \n         if self.means_init is not None:\n             self.means_init = _check_means(self.means_init,\n-                                           self.n_components, n_features)\n+                                           self.n_clusters, n_features)\n \n         if self.precisions_init is not None:\n             self.precisions_init = _check_precisions(self.precisions_init,\n                                                      self.covariance_type,\n-                                                     self.n_components,\n+                                                     self.n_clusters,\n                                                      n_features)\n \n     def _initialize(self, X, resp):\n@@ -684,6 +680,9 @@ class GaussianMixture(BaseMixture):\n     def _check_is_fitted(self):\n         check_is_fitted(self, ['weights_', 'means_', 'precisions_cholesky_'])\n \n+    # The _get_parameters method is an override of an abstract method from the\n+    # BaseMixture class. It correctly returns a tuple of the model's parameters.\n+    # The linter error reported is a false positive.\n     def _get_parameters(self):\n         return (self.weights_, self.means_, self.covariances_,\n                 self.precisions_cholesky_)\n@@ -706,45 +705,95 @@ class GaussianMixture(BaseMixture):\n         else:\n             self.precisions_ = self.precisions_cholesky_ ** 2\n \n-    def _n_parameters(self):\n-        \"\"\"Return the number of free parameters in the model.\"\"\"\n-        _, n_features = self.means_.shape\n-        if self.covariance_type == 'full':\n-            cov_params = self.n_components * n_features * (n_features + 1) / 2.\n-        elif self.covariance_type == 'diag':\n-            cov_params = self.n_components * n_features\n-        elif self.covariance_type == 'tied':\n-            cov_params = n_features * (n_features + 1) / 2.\n-        elif self.covariance_type == 'spherical':\n-            cov_params = self.n_components\n-        mean_params = n_features * self.n_components\n-        return int(cov_params + mean_params + self.n_components - 1)\n+    def fit(self, X, y=None):\n+        \"\"\"Estimate model parameters with the EM algorithm.\n \n-    def bic(self, X):\n-        \"\"\"Bayesian information criterion for the current model on the input X.\n+        The method fits the model n_init times and sets the parameters with\n+        which the model has the largest likelihood or lower bound. Within each\n+        trial, the method iterates between E-step and M-step for max_iter\n+        times until the change of likelihood or lower bound is less than\n+        tol, otherwise, a ConvergenceWarning is raised.\n \n         Parameters\n         ----------\n-        X : array of shape (n_samples, n_dimensions)\n+        X : array-like, shape (n_samples, n_dimensions)\n+            The input data array.\n+\n+        y : Ignored\n \n         Returns\n         -------\n-        bic : float\n-            The lower the better.\n+        self\n         \"\"\"\n-        return (-2 * self.score(X) * X.shape[0] +\n-                self._n_parameters() * np.log(X.shape[0]))\n+        self.fit_predict(X, y)\n+        return self\n \n-    def aic(self, X):\n-        \"\"\"Akaike information criterion for the current model on the input X.\n+    def fit_predict(self, X, y=None):\n+        \"\"\"Estimate model parameters using X and predict the labels for X.\n+\n+        The method fits the model n_init times and sets the parameters with\n+        which the model has the largest likelihood or lower bound. Within each\n+        trial, the method iterates between E-step and M-step for max_iter\n+        times until the change of likelihood or lower bound is less than\n+        tol, otherwise, a ConvergenceWarning is raised. After fitting, it\n+        predicts the most probable label for the input data points.\n \n         Parameters\n         ----------\n-        X : array of shape (n_samples, n_dimensions)\n+        X : array-like, shape (n_samples, n_dimensions)\n+            The input data array.\n+\n+        y : Ignored\n \n         Returns\n         -------\n-        aic : float\n-            The lower the better.\n+        labels : array, shape (n_samples,)\n+            Component labels.\n         \"\"\"\n-        return -2 * self.score(X) * X.shape[0] + 2 * self._n_parameters()\n+        # Initialize parameters\n+        self._initialize_parameters(X, self.random_state)\n+\n+        max_lower_bound = -np.infty\n+        self.converged_ = False\n+\n+        best_params = None\n+        best_n_iter = -1\n+\n+        for init in range(self.n_init):\n+            self._initialize_parameters(X, self.random_state)\n+            current_lower_bound = -np.infty\n+            n_iter = 0\n+\n+            for n_iter in range(self.max_iter):\n+                prev_lower_bound = current_lower_bound\n+\n+                log_prob_norm, log_resp = self._e_step(X)\n+                self._m_step(X, log_resp)\n+                current_lower_bound = self._compute_lower_bound(log_resp, log_prob_norm)\n+\n+                change = current_lower_bound - prev_lower_bound\n+                if abs(change) < self.tol:\n+                    self.converged_ = True\n+                    break\n+\n+            if current_lower_bound > max_lower_bound:\n+                max_lower_bound = current_lower_bound\n+                best_params = self._get_parameters()\n+                best_n_iter = n_iter\n+\n+        if not self.converged_:\n+            warnings.warn('Initialization did not converge. '\n+                          'Try different init parameters, '\n+                          'or increase max_iter, tol '\n+                          'or check for degenerate data.',\n+                          ConvergenceWarning)\n+\n+        self._set_parameters(best_params)\n+        self.n_iter_ = best_n_iter\n+        self.lower_bound_ = max_lower_bound\n+\n+        # Compute the labels\n+        _, log_resp = self._e_step(X)\n+        self.labels_ = log_resp.argmax(axis=1)\n+\n+        return self.labels_\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/mixture/gaussian_mixture.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "4143356c3c51831300789e4fdf795d83716dbab6",
  "patch": "diff --git a/sklearn/mixture/base.py b/sklearn/mixture/base.py\n--- a/sklearn/mixture/base.py\n+++ b/sklearn/mixture/base.py\n@@ -172,7 +172,7 @@ def _initialize(self, X, resp):\n     def fit(self, X, y=None):\n         \"\"\"Estimate model parameters with the EM algorithm.\n \n-        The method fit the model `n_init` times and set the parameters with\n+        The method fits the model `n_init` times and set the parameters with\n         which the model has the largest likelihood or lower bound. Within each\n         trial, the method iterates between E-step and M-step for `max_iter`\n         times until the change of likelihood or lower bound is less than\n@@ -188,6 +188,32 @@ def fit(self, X, y=None):\n         -------\n         self\n         \"\"\"\n+        self.fit_predict(X, y)\n+        return self\n+\n+    def fit_predict(self, X, y=None):\n+        \"\"\"Estimate model parameters using X and predict the labels for X.\n+\n+        The method fits the model n_init times and sets the parameters with\n+        which the model has the largest likelihood or lower bound. Within each\n+        trial, the method iterates between E-step and M-step for `max_iter`\n+        times until the change of likelihood or lower bound is less than\n+        `tol`, otherwise, a `ConvergenceWarning` is raised. After fitting, it\n+        predicts the most probable label for the input data points.\n+\n+        .. versionadded:: 0.20\n+\n+        Parameters\n+        ----------\n+        X : array-like, shape (n_samples, n_features)\n+            List of n_features-dimensional data points. Each row\n+            corresponds to a single data point.\n+\n+        Returns\n+        -------\n+        labels : array, shape (n_samples,)\n+            Component labels.\n+        \"\"\"\n         X = _check_X(X, self.n_components, ensure_min_samples=2)\n         self._check_initial_parameters(X)\n \n@@ -240,7 +266,7 @@ def fit(self, X, y=None):\n         self._set_parameters(best_params)\n         self.n_iter_ = best_n_iter\n \n-        return self\n+        return log_resp.argmax(axis=1)\n \n     def _e_step(self, X):\n         \"\"\"E step.\n",
  "test_patch": "diff --git a/sklearn/mixture/tests/test_bayesian_mixture.py b/sklearn/mixture/tests/test_bayesian_mixture.py\n--- a/sklearn/mixture/tests/test_bayesian_mixture.py\n+++ b/sklearn/mixture/tests/test_bayesian_mixture.py\n@@ -1,12 +1,16 @@\n # Author: Wei Xue <xuewei4d@gmail.com>\n #         Thierry Guillemot <thierry.guillemot.work@gmail.com>\n # License: BSD 3 clause\n+import copy\n \n import numpy as np\n from scipy.special import gammaln\n \n from sklearn.utils.testing import assert_raise_message\n from sklearn.utils.testing import assert_almost_equal\n+from sklearn.utils.testing import assert_array_equal\n+\n+from sklearn.metrics.cluster import adjusted_rand_score\n \n from sklearn.mixture.bayesian_mixture import _log_dirichlet_norm\n from sklearn.mixture.bayesian_mixture import _log_wishart_norm\n@@ -14,7 +18,7 @@\n from sklearn.mixture import BayesianGaussianMixture\n \n from sklearn.mixture.tests.test_gaussian_mixture import RandomData\n-from sklearn.exceptions import ConvergenceWarning\n+from sklearn.exceptions import ConvergenceWarning, NotFittedError\n from sklearn.utils.testing import assert_greater_equal, ignore_warnings\n \n \n@@ -419,3 +423,49 @@ def test_invariant_translation():\n             assert_almost_equal(bgmm1.means_, bgmm2.means_ - 100)\n             assert_almost_equal(bgmm1.weights_, bgmm2.weights_)\n             assert_almost_equal(bgmm1.covariances_, bgmm2.covariances_)\n+\n+\n+def test_bayesian_mixture_fit_predict():\n+    rng = np.random.RandomState(0)\n+    rand_data = RandomData(rng, scale=7)\n+    n_components = 2 * rand_data.n_components\n+\n+    for covar_type in COVARIANCE_TYPE:\n+        bgmm1 = BayesianGaussianMixture(n_components=n_components,\n+                                        max_iter=100, random_state=rng,\n+                                        tol=1e-3, reg_covar=0)\n+        bgmm1.covariance_type = covar_type\n+        bgmm2 = copy.deepcopy(bgmm1)\n+        X = rand_data.X[covar_type]\n+\n+        Y_pred1 = bgmm1.fit(X).predict(X)\n+        Y_pred2 = bgmm2.fit_predict(X)\n+        assert_array_equal(Y_pred1, Y_pred2)\n+\n+\n+def test_bayesian_mixture_predict_predict_proba():\n+    # this is the same test as test_gaussian_mixture_predict_predict_proba()\n+    rng = np.random.RandomState(0)\n+    rand_data = RandomData(rng)\n+    for prior_type in PRIOR_TYPE:\n+        for covar_type in COVARIANCE_TYPE:\n+            X = rand_data.X[covar_type]\n+            Y = rand_data.Y\n+            bgmm = BayesianGaussianMixture(\n+                n_components=rand_data.n_components,\n+                random_state=rng,\n+                weight_concentration_prior_type=prior_type,\n+                covariance_type=covar_type)\n+\n+            # Check a warning message arrive if we don't do fit\n+            assert_raise_message(NotFittedError,\n+                                 \"This BayesianGaussianMixture instance\"\n+                                 \" is not fitted yet. Call 'fit' with \"\n+                                 \"appropriate arguments before using \"\n+                                 \"this method.\", bgmm.predict, X)\n+\n+            bgmm.fit(X)\n+            Y_pred = bgmm.predict(X)\n+            Y_pred_proba = bgmm.predict_proba(X).argmax(axis=1)\n+            assert_array_equal(Y_pred, Y_pred_proba)\n+            assert_greater_equal(adjusted_rand_score(Y, Y_pred), .95)\ndiff --git a/sklearn/mixture/tests/test_gaussian_mixture.py b/sklearn/mixture/tests/test_gaussian_mixture.py\n--- a/sklearn/mixture/tests/test_gaussian_mixture.py\n+++ b/sklearn/mixture/tests/test_gaussian_mixture.py\n@@ -3,6 +3,7 @@\n # License: BSD 3 clause\n \n import sys\n+import copy\n import warnings\n \n import numpy as np\n@@ -569,6 +570,26 @@ def test_gaussian_mixture_predict_predict_proba():\n         assert_greater(adjusted_rand_score(Y, Y_pred), .95)\n \n \n+def test_gaussian_mixture_fit_predict():\n+    rng = np.random.RandomState(0)\n+    rand_data = RandomData(rng)\n+    for covar_type in COVARIANCE_TYPE:\n+        X = rand_data.X[covar_type]\n+        Y = rand_data.Y\n+        g = GaussianMixture(n_components=rand_data.n_components,\n+                            random_state=rng, weights_init=rand_data.weights,\n+                            means_init=rand_data.means,\n+                            precisions_init=rand_data.precisions[covar_type],\n+                            covariance_type=covar_type)\n+\n+        # check if fit_predict(X) is equivalent to fit(X).predict(X)\n+        f = copy.deepcopy(g)\n+        Y_pred1 = f.fit(X).predict(X)\n+        Y_pred2 = g.fit_predict(X)\n+        assert_array_equal(Y_pred1, Y_pred2)\n+        assert_greater(adjusted_rand_score(Y, Y_pred2), .95)\n+\n+\n def test_gaussian_mixture_fit():\n     # recover the ground truth\n     rng = np.random.RandomState(0)\n",
  "problem_statement": "Should mixture models have a clusterer-compatible interface\nMixture models are currently a bit different. They are basically clusterers, except they are probabilistic, and are applied to inductive problems unlike many clusterers. But they are unlike clusterers in API:\r\n* they have an `n_components` parameter, with identical purpose to `n_clusters`\r\n* they do not store the `labels_` of the training data\r\n* they do not have a `fit_predict` method\r\n\r\nAnd they are almost entirely documented separately.\r\n\r\nShould we make the MMs more like clusterers?\n",
  "hints_text": "In my opinion, yes.\r\n\r\nI wanted to compare K-Means, GMM and HDBSCAN and was very disappointed that GMM does not have a `fit_predict` method. The HDBSCAN examples use `fit_predict`, so I was expecting GMM to have the same interface.\nI think we should add ``fit_predict`` at least. I wouldn't rename ``n_components``.\nI would like to work on this!\n@Eight1911 go for it. It is probably relatively simple but maybe not entirely trivial.\n@Eight1911 Mind if I take a look at this?\n@Eight1911 Do you mind if I jump in as well?",
  "created_at": "2018-06-15T17:15:25Z",
  "version": "0.20",
  "FAIL_TO_PASS": "[\"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_fit_predict\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_predict\"]",
  "PASS_TO_PASS": "[\"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_check_is_fitted\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_covariance_type\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_means_prior_initialisation\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_precisions_prior_initialisation\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_predict_predict_proba\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weight_concentration_prior_type\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weights\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_bayesian_mixture_weights_prior_initialisation\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_check_covariance_precision\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_compare_covar_type\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_invariant_translation\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_log_dirichlet_norm\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_log_wishart_norm\", \"sklearn/mixture/tests/test_bayesian_mixture.py::test_monotonic_likelihood\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_bic_1d_1component\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_X\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_means\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_precisions\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_check_weights\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_compute_log_det_cholesky\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_aic_bic\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_attributes\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_estimate_log_prob_resp\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_best_params\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_fit_convergence_warning\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_log_probabilities\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_n_parameters\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_predict_predict_proba\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_mixture_verbose\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_gaussian_suffstat_sk_spherical\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_init\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_monotonic_likelihood\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_multiple_init\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_property\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_regularisation\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_sample\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_score\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_score_samples\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_diag\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_full\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_suffstat_sk_tied\", \"sklearn/mixture/tests/test_gaussian_mixture.py::test_warm_start\"]",
  "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1",
  "patch_files": [
    "sklearn/mixture/base.py"
  ],
  "test_patch_files": [
    "sklearn/mixture/tests/test_bayesian_mixture.py",
    "sklearn/mixture/tests/test_gaussian_mixture.py"
  ],
  "patch_diff_details": {
    "sklearn/mixture/base.py": {
      "diffs": [
        {
          "start_line_old": 175,
          "end_line_old": 175,
          "file_pos": 4,
          "file_context_length": 24668,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._check_initial_parameters_BaseMixture._check_initial_parameters.8",
          "closest_snippet_line_distance": 53,
          "pos": 90,
          "context_length": 32275
        },
        {
          "start_line_old": 191,
          "end_line_old": 191,
          "file_pos": 4,
          "file_context_length": 24668,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._check_initial_parameters_BaseMixture._check_initial_parameters.8",
          "closest_snippet_line_distance": 69,
          "pos": 90,
          "context_length": 32275
        },
        {
          "start_line_old": 243,
          "end_line_old": 243,
          "file_pos": 4,
          "file_context_length": 24668,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._check_initial_parameters_BaseMixture._check_initial_parameters.8",
          "closest_snippet_line_distance": 121,
          "pos": 90,
          "context_length": 32275
        }
      ]
    }
  },
  "vectors": 2964,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture_GaussianMixture.1",
      "distance": 0.9172172546386719,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 435,
      "end_line": 581,
      "tokens": 1312,
      "context_length": 1312
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase__GMMBase.1",
      "distance": 0.9200107455253601,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 133,
      "end_line": 257,
      "tokens": 1207,
      "context_length": 2519
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture.1_BayesianGaussianMixture.1",
      "distance": 0.947173535823822,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 66,
      "end_line": 307,
      "tokens": 2354,
      "context_length": 4873
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture_BaseMixture.__init__.self.verbose_interval.1",
      "distance": 0.9493292570114136,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 67,
      "end_line": 86,
      "tokens": 170,
      "context_length": 5043,
      "file_pos": 4
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/__init__.py_1_",
      "distance": 0.9604777097702026,
      "file_path": "sklearn/mixture/__init__.py",
      "start_line": 1,
      "end_line": 23,
      "tokens": 167,
      "context_length": 5210
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase__DPGMMBase.1",
      "distance": 0.9751525521278381,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 128,
      "end_line": 219,
      "tokens": 781,
      "context_length": 5991
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_1_gammaln.1.1",
      "distance": 0.9795762300491333,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 1,
      "end_line": 44,
      "tokens": 261,
      "context_length": 6252
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py_1_log_multivariate_normal_density.3.1",
      "distance": 0.9832819104194641,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 1,
      "end_line": 72,
      "tokens": 502,
      "context_length": 6754
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_selection.py_1_Y_.1",
      "distance": 0.9854599833488464,
      "file_path": "examples/mixture/plot_gmm_selection.py",
      "start_line": 1,
      "end_line": 77,
      "tokens": 657,
      "context_length": 7411
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase._fit.7__GMMBase._fit.12.1",
      "distance": 0.993828296661377,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 490,
      "end_line": 581,
      "tokens": 862,
      "context_length": 8273
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase._get_covars__GMMBase._set_covars.self.covars_.1",
      "distance": 1.008332371711731,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 281,
      "end_line": 305,
      "tokens": 253,
      "context_length": 8526
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._fit.14__DPGMMBase._fit.22.1",
      "distance": 1.0103102922439575,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 549,
      "end_line": 619,
      "tokens": 772,
      "context_length": 9298
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._update_concentration__DPGMMBase._update_concentration.6",
      "distance": 1.028865933418274,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 299,
      "end_line": 306,
      "tokens": 123,
      "context_length": 9421
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm.py_1_color_iter.1",
      "distance": 1.0335454940795898,
      "file_path": "examples/mixture/plot_gmm.py",
      "start_line": 1,
      "end_line": 36,
      "tokens": 289,
      "context_length": 9710
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py_GMM_GMM.__init__.1",
      "distance": 1.0369322299957275,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 667,
      "end_line": 687,
      "tokens": 219,
      "context_length": 9929
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._get_parameters_",
      "distance": 1.0390021800994873,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 751,
      "end_line": 786,
      "tokens": 363,
      "context_length": 10292
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture.__init___BayesianGaussianMixture.__init__.self.covariance_prior.1",
      "distance": 1.040981650352478,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 309,
      "end_line": 329,
      "tokens": 270,
      "context_length": 10562
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase._do_mstep__GMMBase._do_mstep.8.1",
      "distance": 1.0445119142532349,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 605,
      "end_line": 621,
      "tokens": 203,
      "context_length": 10765
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_1__check_weights.8.1",
      "distance": 1.0545129776000977,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 1,
      "end_line": 51,
      "tokens": 326,
      "context_length": 11091
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_VBGMM_VBGMM.1",
      "distance": 1.0565130710601807,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 648,
      "end_line": 741,
      "tokens": 799,
      "context_length": 11890
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase.__init____GMMBase.__init__.12.1",
      "distance": 1.05711829662323,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 259,
      "end_line": 279,
      "tokens": 212,
      "context_length": 12102
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_1__check_shape.3.1",
      "distance": 1.0586700439453125,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 1,
      "end_line": 38,
      "tokens": 189,
      "context_length": 12291,
      "file_pos": 8
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._set_parameters_GaussianMixture._set_parameters.4.4.self.precisions_.1",
      "distance": 1.0600179433822632,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 691,
      "end_line": 707,
      "tokens": 196,
      "context_length": 12487
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_DPGMM_DPGMM.__init__.1",
      "distance": 1.0600224733352661,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 622,
      "end_line": 645,
      "tokens": 289,
      "context_length": 12776
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture.__init___GaussianMixture.__init__.self.precisions_init.1",
      "distance": 1.0645570755004883,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 583,
      "end_line": 597,
      "tokens": 197,
      "context_length": 12973
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_log_prob_BayesianGaussianMixture._estimate_log_prob.6.1",
      "distance": 1.0684795379638672,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 687,
      "end_line": 700,
      "tokens": 177,
      "context_length": 13150
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm.py_10_",
      "distance": 1.068942666053772,
      "file_path": "examples/mixture/plot_gmm.py",
      "start_line": 68,
      "end_line": 89,
      "tokens": 235,
      "context_length": 13385
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_sin.py_12_",
      "distance": 1.0716285705566406,
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "start_line": 103,
      "end_line": 155,
      "tokens": 644,
      "context_length": 14029
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._estimate_log_prob_GaussianMixture._get_parameters.1.1",
      "distance": 1.0768556594848633,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 674,
      "end_line": 689,
      "tokens": 148,
      "context_length": 14177
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_is_fitted_BayesianGaussianMixture._m_step.6",
      "distance": 1.0841634273529053,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 649,
      "end_line": 672,
      "tokens": 219,
      "context_length": 14396
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._m_step_BaseMixture._set_parameters.1",
      "distance": 1.087332844734192,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 264,
      "end_line": 288,
      "tokens": 150,
      "context_length": 14546,
      "file_pos": 9
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_VBGMM._update_concentration_VBGMM._bound_concentration.5.1",
      "distance": 1.0968538522720337,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 819,
      "end_line": 842,
      "tokens": 339,
      "context_length": 14885
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase.score__GMMBase.predict_proba.3.1",
      "distance": 1.0999081134796143,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 346,
      "end_line": 392,
      "tokens": 286,
      "context_length": 15171
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase.score_samples__GMMBase.score_samples.10.1",
      "distance": 1.1006208658218384,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 307,
      "end_line": 344,
      "tokens": 318,
      "context_length": 15489
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_VBGMM.__init___VBGMM.__init__.self.alpha.1",
      "distance": 1.1011087894439697,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 743,
      "end_line": 750,
      "tokens": 211,
      "context_length": 15700
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._update_means__DPGMMBase._update_means.3.1.5.5",
      "distance": 1.1028742790222168,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 308,
      "end_line": 325,
      "tokens": 249,
      "context_length": 15949
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_sin.py_1_color_iter.1",
      "distance": 1.1038939952850342,
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "start_line": 1,
      "end_line": 54,
      "tokens": 464,
      "context_length": 16413
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase.score_samples__DPGMMBase.score_samples.18.1",
      "distance": 1.1041600704193115,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 247,
      "end_line": 297,
      "tokens": 510,
      "context_length": 16923
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_covariances.py_iris_",
      "distance": 1.1068018674850464,
      "file_path": "examples/mixture/plot_gmm_covariances.py",
      "start_line": 68,
      "end_line": 135,
      "tokens": 599,
      "context_length": 17522
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_covariances.py_1_colors.1",
      "distance": 1.1106312274932861,
      "file_path": "examples/mixture/plot_gmm_covariances.py",
      "start_line": 1,
      "end_line": 44,
      "tokens": 282,
      "context_length": 17804
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_clustering_check_clustering.39",
      "distance": 1.111593246459961,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1183,
      "end_line": 1241,
      "tokens": 600,
      "context_length": 18404
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._check_parameters_GaussianMixture._check_parameters.6.self.precisions_init.1",
      "distance": 1.1123228073120117,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 599,
      "end_line": 620,
      "tokens": 211,
      "context_length": 18615
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._n_parameters_GaussianMixture._n_parameters.5.1",
      "distance": 1.1138486862182617,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 709,
      "end_line": 721,
      "tokens": 171,
      "context_length": 18786
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase.bic__GMMBase.aic.2.1",
      "distance": 1.113927960395813,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 637,
      "end_line": 664,
      "tokens": 177,
      "context_length": 18963
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_1_check_is_fitted",
      "distance": 1.118495225906372,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 1,
      "end_line": 18,
      "tokens": 142,
      "context_length": 19105
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture.bic_",
      "distance": 1.1218478679656982,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 723,
      "end_line": 751,
      "tokens": 181,
      "context_length": 19286
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_pdf.py_1_",
      "distance": 1.1240299940109253,
      "file_path": "examples/mixture/plot_gmm_pdf.py",
      "start_line": 1,
      "end_line": 51,
      "tokens": 398,
      "context_length": 19684
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._logprior__DPGMMBase._set_weights.2",
      "distance": 1.12469482421875,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 473,
      "end_line": 500,
      "tokens": 282,
      "context_length": 19966
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture.predict_proba_BaseMixture.predict_proba.5.1",
      "distance": 1.1283385753631592,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 343,
      "end_line": 361,
      "tokens": 165,
      "context_length": 20131,
      "file_pos": 12
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/base.py_23_ClusterMixin.fit_predict.5.1",
      "distance": 1.1285629272460938,
      "file_path": "sklearn/base.py",
      "start_line": 379,
      "end_line": 400,
      "tokens": 131,
      "context_length": 20262
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._initialize_GaussianMixture._initialize.7.5.self.precisions_cholesky_.1",
      "distance": 1.1301008462905884,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 622,
      "end_line": 653,
      "tokens": 309,
      "context_length": 20571
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_log_weights_BayesianGaussianMixture._estimate_log_weights.1.5.2.1",
      "distance": 1.1334800720214844,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 674,
      "end_line": 685,
      "tokens": 154,
      "context_length": 20725
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_GaussianMixture._m_step_GaussianMixture._m_step.self.precisions_cholesky_.1",
      "distance": 1.1358747482299805,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 655,
      "end_line": 672,
      "tokens": 174,
      "context_length": 20899
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase._n_parameters__GMMBase._n_parameters.5.1",
      "distance": 1.1449847221374512,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 623,
      "end_line": 635,
      "tokens": 173,
      "context_length": 21072
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_means_BayesianGaussianMixture._estimate_means.self.means_.1",
      "distance": 1.1458345651626587,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 488,
      "end_line": 500,
      "tokens": 119,
      "context_length": 21191
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_VBGMM.score_samples_VBGMM.score_samples.11.1",
      "distance": 1.1458780765533447,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 776,
      "end_line": 817,
      "tokens": 433,
      "context_length": 21624
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_means_parameters_BayesianGaussianMixture._check_means_parameters.4.2.2",
      "distance": 1.149988055229187,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 369,
      "end_line": 393,
      "tokens": 207,
      "context_length": 21831
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._initialize_BayesianGaussianMixture._initialize.5",
      "distance": 1.1501834392547607,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 454,
      "end_line": 468,
      "tokens": 125,
      "context_length": 21956
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase.fit_predict__GMMBase.fit_predict.2.1",
      "distance": 1.1511274576187134,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 436,
      "end_line": 453,
      "tokens": 138,
      "context_length": 22094
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_concentration_prior.py_1_9",
      "distance": 1.1514077186584473,
      "file_path": "examples/mixture/plot_concentration_prior.py",
      "start_line": 1,
      "end_line": 40,
      "tokens": 331,
      "context_length": 22425
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._update_precisions__DPGMMBase._update_precisions.3.6.1.10",
      "distance": 1.1532456874847412,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 327,
      "end_line": 380,
      "tokens": 804,
      "context_length": 23229
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_selection.py_37_",
      "distance": 1.1583341360092163,
      "file_path": "examples/mixture/plot_gmm_selection.py",
      "start_line": 78,
      "end_line": 99,
      "tokens": 234,
      "context_length": 23463
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_parameters_BayesianGaussianMixture._check_parameters.7",
      "distance": 1.1586849689483643,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 331,
      "end_line": 355,
      "tokens": 236,
      "context_length": 23699
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase.__init____DPGMMBase._set_covars.1",
      "distance": 1.1658682823181152,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 220,
      "end_line": 245,
      "tokens": 282,
      "context_length": 23981
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_weights_parameters_BayesianGaussianMixture._check_weights_parameters.2.3.1",
      "distance": 1.1688592433929443,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 357,
      "end_line": 367,
      "tokens": 123,
      "context_length": 24104
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._check_parameters_BaseMixture._initialize.2",
      "distance": 1.1704291105270386,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 124,
      "end_line": 170,
      "tokens": 324,
      "context_length": 24428,
      "file_pos": 14
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_cluster_comparison.py_1_datasets.1",
      "distance": 1.17391037940979,
      "file_path": "examples/cluster/plot_cluster_comparison.py",
      "start_line": 1,
      "end_line": 86,
      "tokens": 698,
      "context_length": 25126
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._estimate_log_prob_resp_BaseMixture._print_verbose_msg_init_beg.2.2.self._iter_prev_time.1",
      "distance": 1.1759612560272217,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 451,
      "end_line": 484,
      "tokens": 294,
      "context_length": 25420,
      "file_pos": 15
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_weights_BayesianGaussianMixture._estimate_weights.2.4.self.weight_concentration_.1",
      "distance": 1.1768436431884766,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 470,
      "end_line": 486,
      "tokens": 166,
      "context_length": 25586
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__log_multivariate_normal_density_full__log_multivariate_normal_density_full.6.1",
      "distance": 1.181680679321289,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 720,
      "end_line": 743,
      "tokens": 283,
      "context_length": 25869
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase.sample__GMMBase.sample.12.1",
      "distance": 1.1817444562911987,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 394,
      "end_line": 434,
      "tokens": 346,
      "context_length": 26215
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/__init__.py_1_",
      "distance": 1.1823915243148804,
      "file_path": "sklearn/cluster/__init__.py",
      "start_line": 1,
      "end_line": 37,
      "tokens": 284,
      "context_length": 26499
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._e_step_BaseMixture._e_step.3.1",
      "distance": 1.1869688034057617,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 245,
      "end_line": 262,
      "tokens": 149,
      "context_length": 26648,
      "file_pos": 16
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__sample_gaussian__sample_gaussian.6.1",
      "distance": 1.1900742053985596,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 111,
      "end_line": 130,
      "tokens": 174,
      "context_length": 26822
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py_distribute_covar_matrix_to_match_covariance_type_distribute_covar_matrix_to_match_covariance_type.3.1",
      "distance": 1.1921613216400146,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 784,
      "end_line": 801,
      "tokens": 206,
      "context_length": 27028
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._fit__DPGMMBase._fit.13.self.weights_.1",
      "distance": 1.1926918029785156,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 502,
      "end_line": 547,
      "tokens": 400,
      "context_length": 27428
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase._fit__GMMBase._fit.6.1",
      "distance": 1.1928383111953735,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 455,
      "end_line": 488,
      "tokens": 281,
      "context_length": 27709
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_VBGMM._fit_VBGMM._fit.3.1",
      "distance": 1.1928906440734863,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 752,
      "end_line": 774,
      "tokens": 278,
      "context_length": 27987
    },
    {
      "position": 79,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._check_precision_parameters_BayesianGaussianMixture._check_precision_parameters.3.3.1",
      "distance": 1.1935431957244873,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 395,
      "end_line": 411,
      "tokens": 169,
      "context_length": 28156
    },
    {
      "position": 80,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/mean_shift_.py_1_delayed",
      "distance": 1.1962405443191528,
      "file_path": "sklearn/cluster/mean_shift_.py",
      "start_line": 1,
      "end_line": 28,
      "tokens": 180,
      "context_length": 28336
    },
    {
      "position": 81,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_spherical_BayesianGaussianMixture._estimate_wishart_spherical.10",
      "distance": 1.1963214874267578,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 620,
      "end_line": 647,
      "tokens": 260,
      "context_length": 28596
    },
    {
      "position": 82,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._check_initial_parameters_BaseMixture._check_initial_parameters.8",
      "distance": 1.1965638399124146,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 88,
      "end_line": 122,
      "tokens": 289,
      "context_length": 28885,
      "file_pos": 17
    },
    {
      "position": 83,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__mini_batch_step.4__mini_batch_step.12.1",
      "distance": 1.199488639831543,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1165,
      "end_line": 1234,
      "tokens": 759,
      "context_length": 29644
    },
    {
      "position": 84,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm.py_plot_results_plot_results.7",
      "distance": 1.2004882097244263,
      "file_path": "examples/mixture/plot_gmm.py",
      "start_line": 39,
      "end_line": 65,
      "tokens": 309,
      "context_length": 29953
    },
    {
      "position": 85,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._checkcovariance_prior_parameter_BayesianGaussianMixture._checkcovariance_prior_parameter.3.6.1",
      "distance": 1.2014144659042358,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 413,
      "end_line": 452,
      "tokens": 419,
      "context_length": 30372
    },
    {
      "position": 86,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__bound_state_log_lik__bound_state_log_lik.7.1",
      "distance": 1.2018629312515259,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 109,
      "end_line": 125,
      "tokens": 208,
      "context_length": 30580
    },
    {
      "position": 87,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__log_multivariate_normal_density_spherical__log_multivariate_normal_density_tied.3.1",
      "distance": 1.2022130489349365,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 704,
      "end_line": 717,
      "tokens": 159,
      "context_length": 30739
    },
    {
      "position": 88,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_concentration_prior.py_12_",
      "distance": 1.2028695344924927,
      "file_path": "examples/mixture/plot_concentration_prior.py",
      "start_line": 87,
      "end_line": 137,
      "tokens": 571,
      "context_length": 31310
    },
    {
      "position": 89,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/_feature_agglomeration.py_1_AgglomerationTransform.transform.7.1",
      "distance": 1.2041542530059814,
      "file_path": "sklearn/cluster/_feature_agglomeration.py",
      "start_line": 1,
      "end_line": 59,
      "tokens": 390,
      "context_length": 31700
    },
    {
      "position": 90,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture.fit_BaseMixture.fit.15.1",
      "distance": 1.2088971138000488,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 172,
      "end_line": 243,
      "tokens": 575,
      "context_length": 32275,
      "file_pos": 19
    },
    {
      "position": 91,
      "id": "/tmp/repos/scikit-learn/sklearn/base.py_BiclusterMixin_BiclusterMixin.get_indices.4.1",
      "distance": 1.2089574337005615,
      "file_path": "sklearn/base.py",
      "start_line": 403,
      "end_line": 434,
      "tokens": 222,
      "context_length": 32497
    },
    {
      "position": 92,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_assumptions.py_1_",
      "distance": 1.2107899188995361,
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 511,
      "context_length": 33008
    },
    {
      "position": 93,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/bicluster.py_SpectralBiclustering._check_parameters_SpectralBiclustering._check_parameters.7.1",
      "distance": 1.2112514972686768,
      "file_path": "sklearn/cluster/bicluster.py",
      "start_line": 416,
      "end_line": 443,
      "tokens": 279,
      "context_length": 33287
    },
    {
      "position": 94,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_MiniBatchKMeans.fit.24_MiniBatchKMeans.fit.32.1",
      "distance": 1.2121257781982422,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1498,
      "end_line": 1575,
      "tokens": 730,
      "context_length": 34017
    },
    {
      "position": 95,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._compute_lower_bound_BayesianGaussianMixture._compute_lower_bound.10.1",
      "distance": 1.2140178680419922,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 702,
      "end_line": 749,
      "tokens": 470,
      "context_length": 34487
    },
    {
      "position": 96,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_precisions_BayesianGaussianMixture._estimate_precisions.self.precisions_cholesky_.1",
      "distance": 1.2154203653335571,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 502,
      "end_line": 525,
      "tokens": 239,
      "context_length": 34726
    },
    {
      "position": 97,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__yield_clustering_checks__yield_outliers_checks.2",
      "distance": 1.215824842453003,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 215,
      "end_line": 238,
      "tokens": 203,
      "context_length": 34929
    },
    {
      "position": 98,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_tied_BayesianGaussianMixture._estimate_wishart_tied.10",
      "distance": 1.2184863090515137,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 561,
      "end_line": 589,
      "tokens": 282,
      "context_length": 35211
    },
    {
      "position": 99,
      "id": "/tmp/repos/scikit-learn/sklearn/datasets/samples_generator.py_make_classification.generator_make_classification.30",
      "distance": 1.2189149856567383,
      "file_path": "sklearn/datasets/samples_generator.py",
      "start_line": 156,
      "end_line": 222,
      "tokens": 778,
      "context_length": 35989
    },
    {
      "position": 100,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/bicluster.py_2___all__.1",
      "distance": 1.2195923328399658,
      "file_path": "sklearn/cluster/bicluster.py",
      "start_line": 7,
      "end_line": 27,
      "tokens": 132,
      "context_length": 36121
    },
    {
      "position": 101,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._bound_concentration__DPGMMBase._bound_means.5.1",
      "distance": 1.2217750549316406,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 413,
      "end_line": 435,
      "tokens": 314,
      "context_length": 36435
    },
    {
      "position": 102,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_VBGMM._monitor_",
      "distance": 1.222129225730896,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 844,
      "end_line": 860,
      "tokens": 233,
      "context_length": 36668
    },
    {
      "position": 103,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/bicluster.py_SpectralBiclustering_SpectralBiclustering.__init__.self.n_best.1",
      "distance": 1.2222728729248047,
      "file_path": "sklearn/cluster/bicluster.py",
      "start_line": 300,
      "end_line": 414,
      "tokens": 147,
      "context_length": 36815
    },
    {
      "position": 104,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_2_xrange",
      "distance": 1.2244900465011597,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 10,
      "end_line": 27,
      "tokens": 126,
      "context_length": 36941
    },
    {
      "position": 105,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_adjusted_for_chance_measures.py_score_funcs_",
      "distance": 1.2251873016357422,
      "file_path": "examples/cluster/plot_adjusted_for_chance_measures.py",
      "start_line": 58,
      "end_line": 123,
      "tokens": 542,
      "context_length": 37483
    },
    {
      "position": 106,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_adjusted_mutual_info_score.classes_adjusted_mutual_info_score.18.1",
      "distance": 1.225225567817688,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 687,
      "end_line": 704,
      "tokens": 232,
      "context_length": 37715
    },
    {
      "position": 107,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_mutual_info_score_mutual_info_score.13.1",
      "distance": 1.2255795001983643,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 530,
      "end_line": 608,
      "tokens": 800,
      "context_length": 38515
    },
    {
      "position": 108,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_mini_batch_kmeans.py_50_",
      "distance": 1.2292956113815308,
      "file_path": "examples/cluster/plot_mini_batch_kmeans.py",
      "start_line": 86,
      "end_line": 116,
      "tokens": 312,
      "context_length": 38827
    },
    {
      "position": 109,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_KMeans.__init___KMeans._check_test_data.5.1",
      "distance": 1.2299001216888428,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 904,
      "end_line": 930,
      "tokens": 258,
      "context_length": 39085
    },
    {
      "position": 110,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/bicluster.py_SpectralCoclustering.__init___SpectralCoclustering._fit.self.columns_.1",
      "distance": 1.230180263519287,
      "file_path": "sklearn/cluster/bicluster.py",
      "start_line": 269,
      "end_line": 297,
      "tokens": 286,
      "context_length": 39371
    },
    {
      "position": 111,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__covar_mstep_tied_",
      "distance": 1.2312488555908203,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 837,
      "end_line": 854,
      "tokens": 189,
      "context_length": 39560
    },
    {
      "position": 112,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._bound_proportions__DPGMMBase._bound_proportions.11.1",
      "distance": 1.233757734298706,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 460,
      "end_line": 471,
      "tokens": 176,
      "context_length": 39736
    },
    {
      "position": 113,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__check_means__check_means.4.1",
      "distance": 1.2370350360870361,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 54,
      "end_line": 74,
      "tokens": 133,
      "context_length": 39869
    },
    {
      "position": 114,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__GMMBase.fit__GMMBase.fit.3.1",
      "distance": 1.2372021675109863,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 583,
      "end_line": 603,
      "tokens": 159,
      "context_length": 40028
    },
    {
      "position": 115,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/__init__.py_1_",
      "distance": 1.2389106750488281,
      "file_path": "sklearn/metrics/cluster/__init__.py",
      "start_line": 1,
      "end_line": 33,
      "tokens": 347,
      "context_length": 40375
    },
    {
      "position": 116,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._do_mstep__DPGMMBase._initialize_gamma.self.gamma_.1",
      "distance": 1.2392644882202148,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 395,
      "end_line": 411,
      "tokens": 172,
      "context_length": 40547
    },
    {
      "position": 117,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__covar_mstep_full__covar_mstep_full.7.1",
      "distance": 1.2398573160171509,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 819,
      "end_line": 834,
      "tokens": 189,
      "context_length": 40736
    },
    {
      "position": 118,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_1_comb2.3.1",
      "distance": 1.2403178215026855,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 1,
      "end_line": 31,
      "tokens": 130,
      "context_length": 40866
    },
    {
      "position": 119,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_SpectralClustering.__init___SpectralClustering.__init__.self.n_jobs.1",
      "distance": 1.2406270503997803,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 409,
      "end_line": 425,
      "tokens": 187,
      "context_length": 41053
    },
    {
      "position": 120,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py_26__log_multivariate_normal_density_diag.4.1",
      "distance": 1.2419260740280151,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 689,
      "end_line": 701,
      "tokens": 138,
      "context_length": 41191
    },
    {
      "position": 121,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_KMeans_KMeans.1",
      "distance": 1.2421083450317383,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 771,
      "end_line": 902,
      "tokens": 1177,
      "context_length": 42368
    },
    {
      "position": 122,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__covar_mstep_diag__covar_mstep_spherical.3.1",
      "distance": 1.2431410551071167,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 804,
      "end_line": 816,
      "tokens": 163,
      "context_length": 42531
    },
    {
      "position": 123,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_AgglomerativeClustering.__init___AgglomerativeClustering.fit.23.1",
      "distance": 1.2433274984359741,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 738,
      "end_line": 826,
      "tokens": 759,
      "context_length": 43290
    },
    {
      "position": 124,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._estimate_weighted_log_prob_BaseMixture._estimate_log_prob.2",
      "distance": 1.2477432489395142,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 412,
      "end_line": 449,
      "tokens": 251,
      "context_length": 43541,
      "file_pos": 28
    },
    {
      "position": 125,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch._check_fit_Birch._check_fit.6.1",
      "distance": 1.249099612236023,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 540,
      "end_line": 553,
      "tokens": 140,
      "context_length": 43681
    },
    {
      "position": 126,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/bicluster.py_SpectralBiclustering._fit_SpectralBiclustering._fit.self.columns_.1",
      "distance": 1.2495371103286743,
      "file_path": "sklearn/cluster/bicluster.py",
      "start_line": 445,
      "end_line": 482,
      "tokens": 336,
      "context_length": 44017
    },
    {
      "position": 127,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_normalized_mutual_info_score_normalized_mutual_info_score.16.1",
      "distance": 1.2496371269226074,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 707,
      "end_line": 784,
      "tokens": 735,
      "context_length": 44752
    },
    {
      "position": 128,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_MultinomialNB_MultinomialNB.__init__.self.class_prior.1",
      "distance": 1.2499151229858398,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 630,
      "end_line": 709,
      "tokens": 730,
      "context_length": 45482
    },
    {
      "position": 129,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_28__compute_log_det_cholesky.3.1",
      "distance": 1.2499933242797852,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 339,
      "end_line": 378,
      "tokens": 320,
      "context_length": 45802
    },
    {
      "position": 130,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_clusterer_compute_labels_predict_check_clusterer_compute_labels_predict.4.2.5",
      "distance": 1.2511907815933228,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1244,
      "end_line": 1258,
      "tokens": 146,
      "context_length": 45948
    },
    {
      "position": 131,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_sin.py_plot_samples_plot_samples.7",
      "distance": 1.2521905899047852,
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "start_line": 86,
      "end_line": 100,
      "tokens": 152,
      "context_length": 46100
    },
    {
      "position": 132,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_full_BayesianGaussianMixture._estimate_wishart_full.10",
      "distance": 1.2522287368774414,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 527,
      "end_line": 559,
      "tokens": 316,
      "context_length": 46416
    },
    {
      "position": 133,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_33_AgglomerativeClustering.1",
      "distance": 1.2523099184036255,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 654,
      "end_line": 736,
      "tokens": 726,
      "context_length": 47142
    },
    {
      "position": 134,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_FeatureAgglomeration.__init___",
      "distance": 1.2531750202178955,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 907,
      "end_line": 938,
      "tokens": 239,
      "context_length": 47381
    },
    {
      "position": 135,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_sin.py_plot_results_plot_results.7",
      "distance": 1.254293441772461,
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "start_line": 57,
      "end_line": 83,
      "tokens": 314,
      "context_length": 47695
    },
    {
      "position": 136,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_BernoulliNB_BernoulliNB.1",
      "distance": 1.255392074584961,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 839,
      "end_line": 908,
      "tokens": 705,
      "context_length": 48400
    },
    {
      "position": 137,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture.score_samples_BaseMixture.score_samples.4.1",
      "distance": 1.2561910152435303,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 290,
      "end_line": 307,
      "tokens": 152,
      "context_length": 48552,
      "file_pos": 30
    },
    {
      "position": 138,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_FeatureAgglomeration_FeatureAgglomeration.1",
      "distance": 1.2568665742874146,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 829,
      "end_line": 905,
      "tokens": 744,
      "context_length": 49296
    },
    {
      "position": 139,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch_Birch.1",
      "distance": 1.2577773332595825,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 324,
      "end_line": 426,
      "tokens": 990,
      "context_length": 50286
    },
    {
      "position": 140,
      "id": "/tmp/repos/scikit-learn/sklearn/base.py_DensityMixin_OutlierMixin.fit_predict.3.1",
      "distance": 1.2582776546478271,
      "file_path": "sklearn/base.py",
      "start_line": 512,
      "end_line": 550,
      "tokens": 230,
      "context_length": 50516
    },
    {
      "position": 141,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__kmeans_single_lloyd.12__kmeans_single_lloyd.14.1",
      "distance": 1.2587671279907227,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 540,
      "end_line": 580,
      "tokens": 407,
      "context_length": 50923
    },
    {
      "position": 142,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_linkage_comparison.py_1_datasets.1",
      "distance": 1.259114384651184,
      "file_path": "examples/cluster/plot_linkage_comparison.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 576,
      "context_length": 51499
    },
    {
      "position": 143,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__k_init.14__k_init.15.1",
      "distance": 1.2604119777679443,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 107,
      "end_line": 142,
      "tokens": 330,
      "context_length": 51829
    },
    {
      "position": 144,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch._fit_Birch._fit.17.1",
      "distance": 1.2604960203170776,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 451,
      "end_line": 500,
      "tokens": 447,
      "context_length": 52276
    },
    {
      "position": 145,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/base.py_47_LinearClassifierMixin.decision_function.7.1",
      "distance": 1.2641830444335938,
      "file_path": "sklearn/linear_model/base.py",
      "start_line": 270,
      "end_line": 309,
      "tokens": 339,
      "context_length": 52615
    },
    {
      "position": 146,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py__DPGMMBase._monitor__DPGMMBase._monitor.2.2.2",
      "distance": 1.2648577690124512,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 382,
      "end_line": 393,
      "tokens": 130,
      "context_length": 52745
    },
    {
      "position": 147,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_MiniBatchKMeans.__init___MiniBatchKMeans.__init__.self.reassignment_ratio.1",
      "distance": 1.2653098106384277,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1412,
      "end_line": 1425,
      "tokens": 176,
      "context_length": 52921
    },
    {
      "position": 148,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_stability_low_dim_dense.py_25_",
      "distance": 1.2662084102630615,
      "file_path": "examples/cluster/plot_kmeans_stability_low_dim_dense.py",
      "start_line": 70,
      "end_line": 120,
      "tokens": 506,
      "context_length": 53427
    },
    {
      "position": 149,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/bayesian_mixture.py_BayesianGaussianMixture._estimate_wishart_diag_BayesianGaussianMixture._estimate_wishart_diag.10",
      "distance": 1.266890287399292,
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "start_line": 591,
      "end_line": 618,
      "tokens": 270,
      "context_length": 53697
    },
    {
      "position": 150,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_fowlkes_mallows_score_fowlkes_mallows_score.8.1",
      "distance": 1.2670090198516846,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 787,
      "end_line": 860,
      "tokens": 762,
      "context_length": 54459
    },
    {
      "position": 151,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_adjusted_mutual_info_score_adjusted_mutual_info_score.n_samples.1",
      "distance": 1.2678358554840088,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 611,
      "end_line": 686,
      "tokens": 751,
      "context_length": 55210
    },
    {
      "position": 152,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture.sample_BaseMixture.sample.9.1",
      "distance": 1.2718043327331543,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 363,
      "end_line": 410,
      "tokens": 389,
      "context_length": 55599,
      "file_pos": 33
    },
    {
      "position": 153,
      "id": "/tmp/repos/scikit-learn/sklearn/base.py_30_",
      "distance": 1.271912693977356,
      "file_path": "sklearn/base.py",
      "start_line": 553,
      "end_line": 607,
      "tokens": 281,
      "context_length": 55880
    },
    {
      "position": 154,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gmm.py__validate_covars__validate_covars.3.5.1",
      "distance": 1.2732340097427368,
      "file_path": "sklearn/mixture/gmm.py",
      "start_line": 746,
      "end_line": 781,
      "tokens": 433,
      "context_length": 56313
    },
    {
      "position": 155,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture._print_verbose_msg_iter_end_",
      "distance": 1.2734906673431396,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 486,
      "end_line": 504,
      "tokens": 235,
      "context_length": 56548,
      "file_pos": 33
    },
    {
      "position": 156,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/bicluster.py_BaseSpectral_BaseSpectral.fit.5.1",
      "distance": 1.2739927768707275,
      "file_path": "sklearn/cluster/bicluster.py",
      "start_line": 89,
      "end_line": 126,
      "tokens": 313,
      "context_length": 56861
    },
    {
      "position": 157,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_1___all__.1",
      "distance": 1.2750887870788574,
      "file_path": "sklearn/multiclass.py",
      "start_line": 1,
      "end_line": 63,
      "tokens": 489,
      "context_length": 57350
    },
    {
      "position": 158,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_k_means.26_k_means.30.2.1.1",
      "distance": 1.2758300304412842,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 371,
      "end_line": 422,
      "tokens": 571,
      "context_length": 57921
    },
    {
      "position": 159,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_agglomerative_clustering_metrics.py_29_",
      "distance": 1.2763750553131104,
      "file_path": "examples/cluster/plot_agglomerative_clustering_metrics.py",
      "start_line": 92,
      "end_line": 130,
      "tokens": 363,
      "context_length": 58284
    },
    {
      "position": 160,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/mean_shift_.py_MeanShift.__init___",
      "distance": 1.276677131652832,
      "file_path": "sklearn/cluster/mean_shift_.py",
      "start_line": 379,
      "end_line": 423,
      "tokens": 310,
      "context_length": 58594
    },
    {
      "position": 161,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_cluster_comparison.py_37_",
      "distance": 1.2776100635528564,
      "file_path": "examples/cluster/plot_cluster_comparison.py",
      "start_line": 88,
      "end_line": 186,
      "tokens": 856,
      "context_length": 59450
    },
    {
      "position": 162,
      "id": "/tmp/repos/scikit-learn/sklearn/manifold/mds.py_MDS.__init___MDS._pairwise.1.1",
      "distance": 1.2776153087615967,
      "file_path": "sklearn/manifold/mds.py",
      "start_line": 355,
      "end_line": 370,
      "tokens": 150,
      "context_length": 59600
    },
    {
      "position": 163,
      "id": "/tmp/repos/scikit-learn/examples/covariance/plot_outlier_detection.py_27_",
      "distance": 1.2804675102233887,
      "file_path": "examples/covariance/plot_outlier_detection.py",
      "start_line": 77,
      "end_line": 130,
      "tokens": 632,
      "context_length": 60232
    },
    {
      "position": 164,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_MiniBatchKMeans_MiniBatchKMeans.1",
      "distance": 1.2810983657836914,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1303,
      "end_line": 1410,
      "tokens": 866,
      "context_length": 61098
    },
    {
      "position": 165,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py__CFSubcluster.merge_subcluster__CFSubcluster.radius.3.1",
      "distance": 1.281240701675415,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 297,
      "end_line": 321,
      "tokens": 270,
      "context_length": 61368
    },
    {
      "position": 166,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/base.py_BaseMixture.score_BaseMixture.predict.4.1",
      "distance": 1.281529188156128,
      "file_path": "sklearn/mixture/base.py",
      "start_line": 309,
      "end_line": 341,
      "tokens": 244,
      "context_length": 61612,
      "file_pos": 37
    },
    {
      "position": 167,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py_Birch._global_clustering_",
      "distance": 1.2824804782867432,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 598,
      "end_line": 639,
      "tokens": 373,
      "context_length": 61985
    },
    {
      "position": 168,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OneVsRestClassifier.partial_fit_OneVsRestClassifier.partial_fit.8.1",
      "distance": 1.2833598852157593,
      "file_path": "sklearn/multiclass.py",
      "start_line": 219,
      "end_line": 273,
      "tokens": 509,
      "context_length": 62494
    },
    {
      "position": 169,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_15_AffinityPropagation.1",
      "distance": 1.285853624343872,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 234,
      "end_line": 317,
      "tokens": 680,
      "context_length": 63174
    },
    {
      "position": 170,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_1_k_means_elkan",
      "distance": 1.2882144451141357,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1,
      "end_line": 37,
      "tokens": 206,
      "context_length": 63380
    },
    {
      "position": 171,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_birch_vs_minibatchkmeans.py_1_t_mini_batch.1",
      "distance": 1.2907624244689941,
      "file_path": "examples/cluster/plot_birch_vs_minibatchkmeans.py",
      "start_line": 1,
      "end_line": 87,
      "tokens": 769,
      "context_length": 64149
    },
    {
      "position": 172,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/dpgmm.py_log_normalize_log_normalize.9.1",
      "distance": 1.2911794185638428,
      "file_path": "sklearn/mixture/dpgmm.py",
      "start_line": 47,
      "end_line": 58,
      "tokens": 125,
      "context_length": 64274
    },
    {
      "position": 173,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OneVsOneClassifier.partial_fit_OneVsOneClassifier.partial_fit.9.1",
      "distance": 1.291874647140503,
      "file_path": "sklearn/multiclass.py",
      "start_line": 515,
      "end_line": 565,
      "tokens": 425,
      "context_length": 64699
    },
    {
      "position": 174,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_SpectralClustering.fit_",
      "distance": 1.2926790714263916,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 427,
      "end_line": 480,
      "tokens": 462,
      "context_length": 65161
    },
    {
      "position": 175,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_spectral_clustering.2_spectral_clustering.10.1",
      "distance": 1.2949612140655518,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 250,
      "end_line": 272,
      "tokens": 248,
      "context_length": 65409
    },
    {
      "position": 176,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_KMeans.transform_KMeans._transform.2.1",
      "distance": 1.2969120740890503,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1013,
      "end_line": 1037,
      "tokens": 189,
      "context_length": 65598
    },
    {
      "position": 177,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_adjusted_for_chance_measures.py_1_8",
      "distance": 1.2969337701797485,
      "file_path": "examples/cluster/plot_adjusted_for_chance_measures.py",
      "start_line": 1,
      "end_line": 31,
      "tokens": 193,
      "context_length": 65791
    },
    {
      "position": 178,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_1_ALLOW_NAN.1",
      "distance": 1.2998707294464111,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 686,
      "context_length": 66477
    },
    {
      "position": 179,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_SpectralClustering_SpectralClustering.1",
      "distance": 1.300062894821167,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 275,
      "end_line": 407,
      "tokens": 1221,
      "context_length": 67698
    },
    {
      "position": 180,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_MiniBatchKMeans._labels_inertia_minibatch_MiniBatchKMeans._labels_inertia_minibatch.8.1",
      "distance": 1.3012245893478394,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1577,
      "end_line": 1607,
      "tokens": 246,
      "context_length": 67944
    },
    {
      "position": 181,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__mini_batch_convergence__mini_batch_convergence.28.1",
      "distance": 1.3021979331970215,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 1237,
      "end_line": 1300,
      "tokens": 659,
      "context_length": 68603
    },
    {
      "position": 182,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_mini_batch_kmeans.py_1_ax_49.1",
      "distance": 1.3027712106704712,
      "file_path": "examples/cluster/plot_mini_batch_kmeans.py",
      "start_line": 1,
      "end_line": 85,
      "tokens": 736,
      "context_length": 69339
    },
    {
      "position": 183,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__estimate_log_gaussian_prob__estimate_log_gaussian_prob.7.1",
      "distance": 1.3035712242126465,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 381,
      "end_line": 432,
      "tokens": 553,
      "context_length": 69892
    },
    {
      "position": 184,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py_20__estimate_gaussian_covariances_full.5.1",
      "distance": 1.3038389682769775,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 140,
      "end_line": 169,
      "tokens": 236,
      "context_length": 70128
    },
    {
      "position": 185,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__compute_precision_cholesky__compute_precision_cholesky.4.1",
      "distance": 1.3043562173843384,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 289,
      "end_line": 336,
      "tokens": 443,
      "context_length": 70571
    },
    {
      "position": 186,
      "id": "/tmp/repos/scikit-learn/sklearn/manifold/mds.py_smacof.dissimilarities_smacof.7.2.1.1",
      "distance": 1.3067601919174194,
      "file_path": "sklearn/manifold/mds.py",
      "start_line": 234,
      "end_line": 276,
      "tokens": 433,
      "context_length": 71004
    },
    {
      "position": 187,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/base.py_SupervisedIntegerMixin_",
      "distance": 1.3074641227722168,
      "file_path": "sklearn/neighbors/base.py",
      "start_line": 833,
      "end_line": 887,
      "tokens": 457,
      "context_length": 71461
    },
    {
      "position": 188,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_37__validate_center_shape.3.1",
      "distance": 1.307978630065918,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 145,
      "end_line": 158,
      "tokens": 143,
      "context_length": 71604
    },
    {
      "position": 189,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_GaussianNB._joint_log_likelihood__ALPHA_MIN.1",
      "distance": 1.3081363439559937,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 429,
      "end_line": 444,
      "tokens": 169,
      "context_length": 71773
    },
    {
      "position": 190,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/setup.py_os_",
      "distance": 1.309929609298706,
      "file_path": "sklearn/metrics/cluster/setup.py",
      "start_line": 1,
      "end_line": 24,
      "tokens": 127,
      "context_length": 71900
    },
    {
      "position": 191,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_KMeans.fit_transform_KMeans.fit_transform.6.1",
      "distance": 1.3099679946899414,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 986,
      "end_line": 1011,
      "tokens": 224,
      "context_length": 72124
    },
    {
      "position": 192,
      "id": "/tmp/repos/scikit-learn/sklearn/mixture/gaussian_mixture.py__check_precisions__check_precisions.7.1",
      "distance": 1.3110284805297852,
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "start_line": 98,
      "end_line": 137,
      "tokens": 318,
      "context_length": 72442
    },
    {
      "position": 193,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py__CFNode.append_subcluster__CFNode.append_subcluster.self.squared_norm_.1",
      "distance": 1.3117281198501587,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 152,
      "end_line": 162,
      "tokens": 137,
      "context_length": 72579
    },
    {
      "position": 194,
      "id": "/tmp/repos/scikit-learn/examples/mixture/plot_gmm_covariances.py_make_ellipses_make_ellipses.1.11",
      "distance": 1.3117659091949463,
      "file_path": "examples/mixture/plot_gmm_covariances.py",
      "start_line": 47,
      "end_line": 66,
      "tokens": 290,
      "context_length": 72869
    },
    {
      "position": 195,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_agglomerative_clustering_metrics.py_1_28",
      "distance": 1.3126758337020874,
      "file_path": "examples/cluster/plot_agglomerative_clustering_metrics.py",
      "start_line": 1,
      "end_line": 91,
      "tokens": 733,
      "context_length": 73602
    },
    {
      "position": 196,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py_34__k_init.13",
      "distance": 1.3149914741516113,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 40,
      "end_line": 106,
      "tokens": 586,
      "context_length": 74188
    },
    {
      "position": 197,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/k_means_.py__kmeans_single_elkan__kmeans_single_elkan.11.1",
      "distance": 1.3156565427780151,
      "file_path": "sklearn/cluster/k_means_.py",
      "start_line": 425,
      "end_line": 451,
      "tokens": 304,
      "context_length": 74492
    },
    {
      "position": 198,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/kernels.py_StationaryKernelMixin_CompoundKernel.get_params.2.1",
      "distance": 1.3162137269973755,
      "file_path": "sklearn/gaussian_process/kernels.py",
      "start_line": 383,
      "end_line": 417,
      "tokens": 189,
      "context_length": 74681
    },
    {
      "position": 199,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_25__TREE_BUILDERS.1",
      "distance": 1.3188393115997314,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 581,
      "end_line": 601,
      "tokens": 134,
      "context_length": 74815
    },
    {
      "position": 200,
      "id": "/tmp/repos/scikit-learn/examples/multioutput/plot_classifier_chain_yeast.py_1_33",
      "distance": 1.3189587593078613,
      "file_path": "examples/multioutput/plot_classifier_chain_yeast.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 760,
      "context_length": 75575
    },
    {
      "position": 201,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/online_lda.py_LatentDirichletAllocation_LatentDirichletAllocation.1",
      "distance": 1.3194481134414673,
      "file_path": "sklearn/decomposition/online_lda.py",
      "start_line": 137,
      "end_line": 262,
      "tokens": 1213,
      "context_length": 76788
    },
    {
      "position": 202,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OneVsRestClassifier.multilabel__OneVsRestClassifier._first_estimator.1.1",
      "distance": 1.3196451663970947,
      "file_path": "sklearn/multiclass.py",
      "start_line": 375,
      "end_line": 410,
      "tokens": 300,
      "context_length": 77088
    },
    {
      "position": 203,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_homogeneity_completeness_v_measure_homogeneity_completeness_v_measure.11.1",
      "distance": 1.3197574615478516,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 217,
      "end_line": 288,
      "tokens": 565,
      "context_length": 77653
    },
    {
      "position": 204,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_1__equal_similarities_and_preferences",
      "distance": 1.3198819160461426,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 1,
      "end_line": 30,
      "tokens": 171,
      "context_length": 77824
    },
    {
      "position": 205,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_MICEImputer_MICEImputer.1",
      "distance": 1.3212742805480957,
      "file_path": "sklearn/impute.py",
      "start_line": 338,
      "end_line": 444,
      "tokens": 1012,
      "context_length": 78836
    }
  ],
  "files": [
    {
      "file_path": "sklearn/mixture/gaussian_mixture.py",
      "position": 1,
      "tokens": 6261,
      "context_length": 6261
    },
    {
      "file_path": "sklearn/mixture/gmm.py",
      "position": 2,
      "tokens": 7564,
      "context_length": 13825
    },
    {
      "file_path": "sklearn/mixture/bayesian_mixture.py",
      "position": 3,
      "tokens": 7272,
      "context_length": 21097
    },
    {
      "file_path": "sklearn/mixture/base.py",
      "position": 4,
      "tokens": 3571,
      "context_length": 24668
    },
    {
      "file_path": "sklearn/mixture/__init__.py",
      "position": 5,
      "tokens": 167,
      "context_length": 24835
    },
    {
      "file_path": "sklearn/mixture/dpgmm.py",
      "position": 6,
      "tokens": 8500,
      "context_length": 33335
    },
    {
      "file_path": "examples/mixture/plot_gmm_selection.py",
      "position": 7,
      "tokens": 891,
      "context_length": 34226
    },
    {
      "file_path": "examples/mixture/plot_gmm.py",
      "position": 8,
      "tokens": 833,
      "context_length": 35059
    },
    {
      "file_path": "examples/mixture/plot_gmm_sin.py",
      "position": 9,
      "tokens": 1574,
      "context_length": 36633
    },
    {
      "file_path": "examples/mixture/plot_gmm_covariances.py",
      "position": 10,
      "tokens": 1217,
      "context_length": 37850
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 11,
      "tokens": 19637,
      "context_length": 57487
    },
    {
      "file_path": "examples/mixture/plot_gmm_pdf.py",
      "position": 12,
      "tokens": 398,
      "context_length": 57885
    },
    {
      "file_path": "sklearn/base.py",
      "position": 13,
      "tokens": 4293,
      "context_length": 62178
    },
    {
      "file_path": "examples/mixture/plot_concentration_prior.py",
      "position": 14,
      "tokens": 1462,
      "context_length": 63640
    },
    {
      "file_path": "examples/cluster/plot_cluster_comparison.py",
      "position": 15,
      "tokens": 1554,
      "context_length": 65194
    },
    {
      "file_path": "sklearn/cluster/__init__.py",
      "position": 16,
      "tokens": 284,
      "context_length": 65478
    },
    {
      "file_path": "sklearn/cluster/mean_shift_.py",
      "position": 17,
      "tokens": 3570,
      "context_length": 69048
    },
    {
      "file_path": "sklearn/cluster/k_means_.py",
      "position": 18,
      "tokens": 14585,
      "context_length": 83633
    },
    {
      "file_path": "sklearn/cluster/_feature_agglomeration.py",
      "position": 19,
      "tokens": 571,
      "context_length": 84204
    },
    {
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "position": 20,
      "tokens": 533,
      "context_length": 84737
    },
    {
      "file_path": "sklearn/cluster/bicluster.py",
      "position": 21,
      "tokens": 4561,
      "context_length": 89298
    },
    {
      "file_path": "sklearn/datasets/samples_generator.py",
      "position": 22,
      "tokens": 14012,
      "context_length": 103310
    },
    {
      "file_path": "sklearn/cluster/hierarchical.py",
      "position": 23,
      "tokens": 8090,
      "context_length": 111400
    },
    {
      "file_path": "examples/cluster/plot_adjusted_for_chance_measures.py",
      "position": 24,
      "tokens": 993,
      "context_length": 112393
    },
    {
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "position": 25,
      "tokens": 7923,
      "context_length": 120316
    },
    {
      "file_path": "examples/cluster/plot_mini_batch_kmeans.py",
      "position": 26,
      "tokens": 1048,
      "context_length": 121364
    },
    {
      "file_path": "sklearn/metrics/cluster/__init__.py",
      "position": 27,
      "tokens": 347,
      "context_length": 121711
    },
    {
      "file_path": "sklearn/cluster/spectral.py",
      "position": 28,
      "tokens": 4267,
      "context_length": 125978
    },
    {
      "file_path": "sklearn/cluster/birch.py",
      "position": 29,
      "tokens": 5291,
      "context_length": 131269
    },
    {
      "file_path": "sklearn/naive_bayes.py",
      "position": 30,
      "tokens": 8409,
      "context_length": 139678
    },
    {
      "file_path": "examples/cluster/plot_linkage_comparison.py",
      "position": 31,
      "tokens": 1135,
      "context_length": 140813
    },
    {
      "file_path": "sklearn/linear_model/base.py",
      "position": 32,
      "tokens": 4968,
      "context_length": 145781
    },
    {
      "file_path": "examples/cluster/plot_kmeans_stability_low_dim_dense.py",
      "position": 33,
      "tokens": 1059,
      "context_length": 146840
    },
    {
      "file_path": "sklearn/multiclass.py",
      "position": 34,
      "tokens": 6487,
      "context_length": 153327
    },
    {
      "file_path": "examples/cluster/plot_agglomerative_clustering_metrics.py",
      "position": 35,
      "tokens": 1118,
      "context_length": 154445
    },
    {
      "file_path": "sklearn/manifold/mds.py",
      "position": 36,
      "tokens": 3827,
      "context_length": 158272
    },
    {
      "file_path": "examples/covariance/plot_outlier_detection.py",
      "position": 37,
      "tokens": 1219,
      "context_length": 159491
    },
    {
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "position": 38,
      "tokens": 3183,
      "context_length": 162674
    },
    {
      "file_path": "examples/cluster/plot_birch_vs_minibatchkmeans.py",
      "position": 39,
      "tokens": 997,
      "context_length": 163671
    },
    {
      "file_path": "sklearn/neighbors/base.py",
      "position": 40,
      "tokens": 7280,
      "context_length": 170951
    },
    {
      "file_path": "sklearn/metrics/cluster/setup.py",
      "position": 41,
      "tokens": 127,
      "context_length": 171078
    },
    {
      "file_path": "sklearn/gaussian_process/kernels.py",
      "position": 42,
      "tokens": 15250,
      "context_length": 186328
    },
    {
      "file_path": "examples/multioutput/plot_classifier_chain_yeast.py",
      "position": 43,
      "tokens": 1023,
      "context_length": 187351
    },
    {
      "file_path": "sklearn/decomposition/online_lda.py",
      "position": 44,
      "tokens": 6658,
      "context_length": 194009
    },
    {
      "file_path": "sklearn/impute.py",
      "position": 45,
      "tokens": 7159,
      "context_length": 201168
    }
  ]
}