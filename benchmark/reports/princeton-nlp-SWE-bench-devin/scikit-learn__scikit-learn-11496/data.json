{
  "instance_id": "scikit-learn__scikit-learn-11496",
  "model_patch": "diff --git a/sklearn/impute.py b/sklearn/impute.py\nindex 8acec9d01..6d86c7e6a 100644\n--- a/sklearn/impute.py\n+++ b/sklearn/impute.py\n@@ -243,7 +243,10 @@ class SimpleImputer(BaseEstimator, TransformerMixin):\n         \"\"\"Fit the transformer on sparse data.\"\"\"\n         # Count the zeros\n         if missing_values == 0:\n-            n_zeros_axis = np.zeros(X.shape[1], dtype=int)\n+            # This will create a boolean mask of the elements that are not zero\n+            # (both explicit and implicit), then subtract from the total number of elements\n+            # to get the count of explicit zeros.\n+            n_zeros_axis = X.shape[0] - np.diff(X.indptr) - np.count_nonzero(X.data)\n         else:\n             n_zeros_axis = X.shape[0] - np.diff(X.indptr)\n \n@@ -273,7 +276,8 @@ class SimpleImputer(BaseEstimator, TransformerMixin):\n \n             else:\n                 sums = X.sum(axis=0)\n-                n_non_missing = np.diff(X.indptr)\n+                # Here we need to include the explicit zeros in the count of non-missing values\n+                n_non_missing = np.diff(X.indptr) + np.count_nonzero(X.data)\n \n             # Ignore the error, columns with a np.nan statistics_\n             # are not an error at this point. These columns will\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/impute.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "cb0140017740d985960911c4f34820beea915846",
  "patch": "diff --git a/sklearn/impute.py b/sklearn/impute.py\n--- a/sklearn/impute.py\n+++ b/sklearn/impute.py\n@@ -133,7 +133,6 @@ class SimpleImputer(BaseEstimator, TransformerMixin):\n         a new copy will always be made, even if `copy=False`:\n \n         - If X is not an array of floating values;\n-        - If X is sparse and `missing_values=0`;\n         - If X is encoded as a CSR matrix.\n \n     Attributes\n@@ -227,10 +226,17 @@ def fit(self, X, y=None):\n                              \"data\".format(fill_value))\n \n         if sparse.issparse(X):\n-            self.statistics_ = self._sparse_fit(X,\n-                                                self.strategy,\n-                                                self.missing_values,\n-                                                fill_value)\n+            # missing_values = 0 not allowed with sparse data as it would\n+            # force densification\n+            if self.missing_values == 0:\n+                raise ValueError(\"Imputation not possible when missing_values \"\n+                                 \"== 0 and input is sparse. Provide a dense \"\n+                                 \"array instead.\")\n+            else:\n+                self.statistics_ = self._sparse_fit(X,\n+                                                    self.strategy,\n+                                                    self.missing_values,\n+                                                    fill_value)\n         else:\n             self.statistics_ = self._dense_fit(X,\n                                                self.strategy,\n@@ -241,80 +247,41 @@ def fit(self, X, y=None):\n \n     def _sparse_fit(self, X, strategy, missing_values, fill_value):\n         \"\"\"Fit the transformer on sparse data.\"\"\"\n-        # Count the zeros\n-        if missing_values == 0:\n-            n_zeros_axis = np.zeros(X.shape[1], dtype=int)\n-        else:\n-            n_zeros_axis = X.shape[0] - np.diff(X.indptr)\n-\n-        # Mean\n-        if strategy == \"mean\":\n-            if missing_values != 0:\n-                n_non_missing = n_zeros_axis\n-\n-                # Mask the missing elements\n-                mask_missing_values = _get_mask(X.data, missing_values)\n-                mask_valids = np.logical_not(mask_missing_values)\n-\n-                # Sum only the valid elements\n-                new_data = X.data.copy()\n-                new_data[mask_missing_values] = 0\n-                X = sparse.csc_matrix((new_data, X.indices, X.indptr),\n-                                      copy=False)\n-                sums = X.sum(axis=0)\n-\n-                # Count the elements != 0\n-                mask_non_zeros = sparse.csc_matrix(\n-                    (mask_valids.astype(np.float64),\n-                     X.indices,\n-                     X.indptr), copy=False)\n-                s = mask_non_zeros.sum(axis=0)\n-                n_non_missing = np.add(n_non_missing, s)\n+        mask_data = _get_mask(X.data, missing_values)\n+        n_implicit_zeros = X.shape[0] - np.diff(X.indptr)\n \n-            else:\n-                sums = X.sum(axis=0)\n-                n_non_missing = np.diff(X.indptr)\n+        statistics = np.empty(X.shape[1])\n \n-            # Ignore the error, columns with a np.nan statistics_\n-            # are not an error at this point. These columns will\n-            # be removed in transform\n-            with np.errstate(all=\"ignore\"):\n-                return np.ravel(sums) / np.ravel(n_non_missing)\n+        if strategy == \"constant\":\n+            # for constant strategy, self.statistcs_ is used to store\n+            # fill_value in each column\n+            statistics.fill(fill_value)\n \n-        # Median + Most frequent + Constant\n         else:\n-            # Remove the missing values, for each column\n-            columns_all = np.hsplit(X.data, X.indptr[1:-1])\n-            mask_missing_values = _get_mask(X.data, missing_values)\n-            mask_valids = np.hsplit(np.logical_not(mask_missing_values),\n-                                    X.indptr[1:-1])\n-\n-            # astype necessary for bug in numpy.hsplit before v1.9\n-            columns = [col[mask.astype(bool, copy=False)]\n-                       for col, mask in zip(columns_all, mask_valids)]\n-\n-            # Median\n-            if strategy == \"median\":\n-                median = np.empty(len(columns))\n-                for i, column in enumerate(columns):\n-                    median[i] = _get_median(column, n_zeros_axis[i])\n-\n-                return median\n-\n-            # Most frequent\n-            elif strategy == \"most_frequent\":\n-                most_frequent = np.empty(len(columns))\n-\n-                for i, column in enumerate(columns):\n-                    most_frequent[i] = _most_frequent(column,\n-                                                      0,\n-                                                      n_zeros_axis[i])\n-\n-                return most_frequent\n-\n-            # Constant\n-            elif strategy == \"constant\":\n-                return np.full(X.shape[1], fill_value)\n+            for i in range(X.shape[1]):\n+                column = X.data[X.indptr[i]:X.indptr[i+1]]\n+                mask_column = mask_data[X.indptr[i]:X.indptr[i+1]]\n+                column = column[~mask_column]\n+\n+                # combine explicit and implicit zeros\n+                mask_zeros = _get_mask(column, 0)\n+                column = column[~mask_zeros]\n+                n_explicit_zeros = mask_zeros.sum()\n+                n_zeros = n_implicit_zeros[i] + n_explicit_zeros\n+\n+                if strategy == \"mean\":\n+                    s = column.size + n_zeros\n+                    statistics[i] = np.nan if s == 0 else column.sum() / s\n+\n+                elif strategy == \"median\":\n+                    statistics[i] = _get_median(column,\n+                                                n_zeros)\n+\n+                elif strategy == \"most_frequent\":\n+                    statistics[i] = _most_frequent(column,\n+                                                   0,\n+                                                   n_zeros)\n+        return statistics\n \n     def _dense_fit(self, X, strategy, missing_values, fill_value):\n         \"\"\"Fit the transformer on dense data.\"\"\"\n@@ -364,6 +331,8 @@ def _dense_fit(self, X, strategy, missing_values, fill_value):\n \n         # Constant\n         elif strategy == \"constant\":\n+            # for constant strategy, self.statistcs_ is used to store\n+            # fill_value in each column\n             return np.full(X.shape[1], fill_value, dtype=X.dtype)\n \n     def transform(self, X):\n@@ -402,17 +371,19 @@ def transform(self, X):\n                 X = X[:, valid_statistics_indexes]\n \n         # Do actual imputation\n-        if sparse.issparse(X) and self.missing_values != 0:\n-            mask = _get_mask(X.data, self.missing_values)\n-            indexes = np.repeat(np.arange(len(X.indptr) - 1, dtype=np.int),\n-                                np.diff(X.indptr))[mask]\n+        if sparse.issparse(X):\n+            if self.missing_values == 0:\n+                raise ValueError(\"Imputation not possible when missing_values \"\n+                                 \"== 0 and input is sparse. Provide a dense \"\n+                                 \"array instead.\")\n+            else:\n+                mask = _get_mask(X.data, self.missing_values)\n+                indexes = np.repeat(np.arange(len(X.indptr) - 1, dtype=np.int),\n+                                    np.diff(X.indptr))[mask]\n \n-            X.data[mask] = valid_statistics[indexes].astype(X.dtype,\n-                                                            copy=False)\n+                X.data[mask] = valid_statistics[indexes].astype(X.dtype,\n+                                                                copy=False)\n         else:\n-            if sparse.issparse(X):\n-                X = X.toarray()\n-\n             mask = _get_mask(X, self.missing_values)\n             n_missing = np.sum(mask, axis=0)\n             values = np.repeat(valid_statistics, n_missing)\n",
  "test_patch": "diff --git a/sklearn/tests/test_impute.py b/sklearn/tests/test_impute.py\n--- a/sklearn/tests/test_impute.py\n+++ b/sklearn/tests/test_impute.py\n@@ -97,6 +97,23 @@ def test_imputation_deletion_warning(strategy):\n         imputer.fit_transform(X)\n \n \n+@pytest.mark.parametrize(\"strategy\", [\"mean\", \"median\",\n+                                      \"most_frequent\", \"constant\"])\n+def test_imputation_error_sparse_0(strategy):\n+    # check that error are raised when missing_values = 0 and input is sparse\n+    X = np.ones((3, 5))\n+    X[0] = 0\n+    X = sparse.csc_matrix(X)\n+\n+    imputer = SimpleImputer(strategy=strategy, missing_values=0)\n+    with pytest.raises(ValueError, match=\"Provide a dense array\"):\n+        imputer.fit(X)\n+\n+    imputer.fit(X.toarray())\n+    with pytest.raises(ValueError, match=\"Provide a dense array\"):\n+        imputer.transform(X)\n+\n+\n def safe_median(arr, *args, **kwargs):\n     # np.median([]) raises a TypeError for numpy >= 1.10.1\n     length = arr.size if hasattr(arr, 'size') else len(arr)\n@@ -123,10 +140,8 @@ def test_imputation_mean_median():\n     values[4::2] = - values[4::2]\n \n     tests = [(\"mean\", np.nan, lambda z, v, p: safe_mean(np.hstack((z, v)))),\n-             (\"mean\", 0, lambda z, v, p: np.mean(v)),\n              (\"median\", np.nan,\n-              lambda z, v, p: safe_median(np.hstack((z, v)))),\n-             (\"median\", 0, lambda z, v, p: np.median(v))]\n+              lambda z, v, p: safe_median(np.hstack((z, v))))]\n \n     for strategy, test_missing_values, true_value_fun in tests:\n         X = np.empty(shape)\n@@ -427,14 +442,18 @@ def test_imputation_constant_pandas(dtype):\n \n def test_imputation_pipeline_grid_search():\n     # Test imputation within a pipeline + gridsearch.\n-    pipeline = Pipeline([('imputer', SimpleImputer(missing_values=0)),\n-                         ('tree', tree.DecisionTreeRegressor(random_state=0))])\n+    X = sparse_random_matrix(100, 100, density=0.10)\n+    missing_values = X.data[0]\n+\n+    pipeline = Pipeline([('imputer',\n+                          SimpleImputer(missing_values=missing_values)),\n+                         ('tree',\n+                          tree.DecisionTreeRegressor(random_state=0))])\n \n     parameters = {\n         'imputer__strategy': [\"mean\", \"median\", \"most_frequent\"]\n     }\n \n-    X = sparse_random_matrix(100, 100, density=0.10)\n     Y = sparse_random_matrix(100, 1, density=0.10).toarray()\n     gs = GridSearchCV(pipeline, parameters)\n     gs.fit(X, Y)\n",
  "problem_statement": "BUG: SimpleImputer gives wrong result on sparse matrix with explicit zeros\nThe current implementation of the `SimpleImputer` can't deal with zeros stored explicitly in sparse matrix.\r\nEven when stored explicitly, we'd expect that all zeros are treating equally, right ?\r\nSee for example the code below:\r\n```python\r\nimport numpy as np\r\nfrom scipy import sparse\r\nfrom sklearn.impute import SimpleImputer\r\n\r\nX = np.array([[0,0,0],[0,0,0],[1,1,1]])\r\nX = sparse.csc_matrix(X)\r\nX[0] = 0    # explicit zeros in first row\r\n\r\nimp = SimpleImputer(missing_values=0, strategy='mean')\r\nimp.fit_transform(X)\r\n\r\n>>> array([[0.5, 0.5, 0.5],\r\n           [0.5, 0.5, 0.5],\r\n           [1. , 1. , 1. ]])\r\n```\r\nWhereas the expected result would be\r\n```python\r\n>>> array([[1. , 1. , 1. ],\r\n           [1. , 1. , 1. ],\r\n           [1. , 1. , 1. ]])\r\n```\n",
  "hints_text": "",
  "created_at": "2018-07-12T17:05:58Z",
  "version": "0.20",
  "FAIL_TO_PASS": "[\"sklearn/tests/test_impute.py::test_imputation_error_sparse_0[constant]\", \"sklearn/tests/test_impute.py::test_imputation_error_sparse_0[mean]\", \"sklearn/tests/test_impute.py::test_imputation_error_sparse_0[median]\", \"sklearn/tests/test_impute.py::test_imputation_error_sparse_0[most_frequent]\"]",
  "PASS_TO_PASS": "[\"sklearn/tests/test_impute.py::test_chained_imputer_additive_matrix\", \"sklearn/tests/test_impute.py::test_chained_imputer_clip\", \"sklearn/tests/test_impute.py::test_chained_imputer_imputation_order[arabic]\", \"sklearn/tests/test_impute.py::test_chained_imputer_imputation_order[ascending]\", \"sklearn/tests/test_impute.py::test_chained_imputer_imputation_order[descending]\", \"sklearn/tests/test_impute.py::test_chained_imputer_imputation_order[random]\", \"sklearn/tests/test_impute.py::test_chained_imputer_imputation_order[roman]\", \"sklearn/tests/test_impute.py::test_chained_imputer_missing_at_transform[mean]\", \"sklearn/tests/test_impute.py::test_chained_imputer_missing_at_transform[median]\", \"sklearn/tests/test_impute.py::test_chained_imputer_missing_at_transform[most_frequent]\", \"sklearn/tests/test_impute.py::test_chained_imputer_no_missing\", \"sklearn/tests/test_impute.py::test_chained_imputer_predictors[predictor0]\", \"sklearn/tests/test_impute.py::test_chained_imputer_predictors[predictor1]\", \"sklearn/tests/test_impute.py::test_chained_imputer_predictors[predictor2]\", \"sklearn/tests/test_impute.py::test_chained_imputer_rank_one\", \"sklearn/tests/test_impute.py::test_chained_imputer_transform_recovery[3]\", \"sklearn/tests/test_impute.py::test_chained_imputer_transform_recovery[5]\", \"sklearn/tests/test_impute.py::test_chained_imputer_transform_stochasticity\", \"sklearn/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype1-constant]\", \"sklearn/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype1-most_frequent]\", \"sklearn/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype2-constant]\", \"sklearn/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype2-most_frequent]\", \"sklearn/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[str-constant]\", \"sklearn/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[str-most_frequent]\", \"sklearn/tests/test_impute.py::test_imputation_constant_error_invalid_type[1-0]\", \"sklearn/tests/test_impute.py::test_imputation_constant_error_invalid_type[1.0-nan]\", \"sklearn/tests/test_impute.py::test_imputation_constant_float[asarray]\", \"sklearn/tests/test_impute.py::test_imputation_constant_float[csr_matrix]\", \"sklearn/tests/test_impute.py::test_imputation_constant_integer\", \"sklearn/tests/test_impute.py::test_imputation_constant_object[0]\", \"sklearn/tests/test_impute.py::test_imputation_constant_object[NAN]\", \"sklearn/tests/test_impute.py::test_imputation_constant_object[None]\", \"sklearn/tests/test_impute.py::test_imputation_constant_object[]\", \"sklearn/tests/test_impute.py::test_imputation_constant_object[nan]\", \"sklearn/tests/test_impute.py::test_imputation_constant_pandas[category]\", \"sklearn/tests/test_impute.py::test_imputation_constant_pandas[object]\", \"sklearn/tests/test_impute.py::test_imputation_copy\", \"sklearn/tests/test_impute.py::test_imputation_deletion_warning[mean]\", \"sklearn/tests/test_impute.py::test_imputation_deletion_warning[median]\", \"sklearn/tests/test_impute.py::test_imputation_deletion_warning[most_frequent]\", \"sklearn/tests/test_impute.py::test_imputation_error_invalid_strategy[101]\", \"sklearn/tests/test_impute.py::test_imputation_error_invalid_strategy[None]\", \"sklearn/tests/test_impute.py::test_imputation_error_invalid_strategy[const]\", \"sklearn/tests/test_impute.py::test_imputation_mean_median\", \"sklearn/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[None-mean]\", \"sklearn/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[None-median]\", \"sklearn/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[object-mean]\", \"sklearn/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[object-median]\", \"sklearn/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[str-mean]\", \"sklearn/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[str-median]\", \"sklearn/tests/test_impute.py::test_imputation_median_special_cases\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent_objects[0]\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent_objects[NAN]\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent_objects[None]\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent_objects[]\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent_objects[nan]\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent_pandas[category]\", \"sklearn/tests/test_impute.py::test_imputation_most_frequent_pandas[object]\", \"sklearn/tests/test_impute.py::test_imputation_pipeline_grid_search\", \"sklearn/tests/test_impute.py::test_imputation_shape\"]",
  "environment_setup_commit": "55bf5d93e5674f13a1134d93a11fd0cd11aabcd1",
  "patch_files": [
    "sklearn/impute.py"
  ],
  "test_patch_files": [
    "sklearn/tests/test_impute.py"
  ],
  "patch_diff_details": {
    "sklearn/impute.py": {
      "diffs": [
        {
          "start_line_old": 136,
          "end_line_old": 136,
          "file_pos": 1,
          "file_context_length": 7910,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer.transform_",
          "closest_snippet_line_distance": 755,
          "pos": 13,
          "context_length": 5975
        },
        {
          "start_line_old": 230,
          "end_line_old": 233,
          "file_pos": 1,
          "file_context_length": 7910,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer._sparse_fit_SimpleImputer._sparse_fit.5.7.columns_all.7.7.1.1",
          "closest_snippet_line_distance": 12,
          "pos": 5,
          "context_length": 2342
        },
        {
          "start_line_old": 244,
          "end_line_old": 317,
          "file_pos": 1,
          "file_context_length": 7910,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer.transform_SimpleImputer.transform.10.1",
          "closest_snippet_line_distance": 106,
          "pos": 4,
          "context_length": 2019
        },
        {
          "start_line_old": 367,
          "end_line_old": 367,
          "file_pos": 1,
          "file_context_length": 7910,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer.fit_SimpleImputer.fit.9.1",
          "closest_snippet_line_distance": 127,
          "pos": 7,
          "context_length": 3453
        },
        {
          "start_line_old": 405,
          "end_line_old": 415,
          "file_pos": 1,
          "file_context_length": 7910,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer._validate_input_SimpleImputer._validate_input.7.1",
          "closest_snippet_line_distance": 221,
          "pos": 2,
          "context_length": 765
        }
      ]
    }
  },
  "vectors": 2864,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer._validate_input_SimpleImputer._validate_input.7.1",
      "distance": 0.7732008695602417,
      "file_path": "sklearn/impute.py",
      "start_line": 158,
      "end_line": 194,
      "tokens": 331,
      "context_length": 331,
      "file_pos": 1
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer.transform_SimpleImputer.transform.10.1",
      "distance": 0.8186227083206177,
      "file_path": "sklearn/impute.py",
      "start_line": 369,
      "end_line": 423,
      "tokens": 434,
      "context_length": 765,
      "file_pos": 1
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/imputation.py_Imputer.transform_",
      "distance": 0.8607691526412964,
      "file_path": "sklearn/preprocessing/imputation.py",
      "start_line": 298,
      "end_line": 374,
      "tokens": 650,
      "context_length": 1415
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer._sparse_fit_SimpleImputer._sparse_fit.5.7.columns_all.7.7.1.1",
      "distance": 0.8687536716461182,
      "file_path": "sklearn/impute.py",
      "start_line": 242,
      "end_line": 317,
      "tokens": 604,
      "context_length": 2019,
      "file_pos": 2
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer.fit_SimpleImputer.fit.9.1",
      "distance": 0.8883600831031799,
      "file_path": "sklearn/impute.py",
      "start_line": 196,
      "end_line": 240,
      "tokens": 323,
      "context_length": 2342,
      "file_pos": 2
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/imputation.py_Imputer._sparse_fit_Imputer._sparse_fit.8.7.columns_all.7.5.3.1",
      "distance": 0.9110342860221863,
      "file_path": "sklearn/preprocessing/imputation.py",
      "start_line": 173,
      "end_line": 251,
      "tokens": 675,
      "context_length": 3017
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer._dense_fit_SimpleImputer._dense_fit.5.11.1.1",
      "distance": 0.9471006393432617,
      "file_path": "sklearn/impute.py",
      "start_line": 319,
      "end_line": 367,
      "tokens": 436,
      "context_length": 3453,
      "file_pos": 2
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/imputation.py_Imputer.fit_Imputer.fit.10.1",
      "distance": 0.9541462659835815,
      "file_path": "sklearn/preprocessing/imputation.py",
      "start_line": 129,
      "end_line": 171,
      "tokens": 382,
      "context_length": 3835
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/imputation.py_Imputer._dense_fit_Imputer._dense_fit.6.9.6.5.1",
      "distance": 0.9850466251373291,
      "file_path": "sklearn/preprocessing/imputation.py",
      "start_line": 253,
      "end_line": 296,
      "tokens": 438,
      "context_length": 4273
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer._initial_imputation_ChainedImputer._initial_imputation.9.1",
      "distance": 0.9914864897727966,
      "file_path": "sklearn/impute.py",
      "start_line": 762,
      "end_line": 806,
      "tokens": 386,
      "context_length": 4659,
      "file_pos": 2
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer.transform_",
      "distance": 0.9999423623085022,
      "file_path": "sklearn/impute.py",
      "start_line": 891,
      "end_line": 968,
      "tokens": 623,
      "context_length": 5282,
      "file_pos": 2
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/imputation.py_warnings__get_mask.2.2.1.1",
      "distance": 1.0024280548095703,
      "file_path": "sklearn/preprocessing/imputation.py",
      "start_line": 4,
      "end_line": 33,
      "tokens": 160,
      "context_length": 5442
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_SimpleImputer_SimpleImputer.__init__.self.copy.1",
      "distance": 1.0074540376663208,
      "file_path": "sklearn/impute.py",
      "start_line": 95,
      "end_line": 156,
      "tokens": 533,
      "context_length": 5975,
      "file_pos": 2
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py__get_mask__get_mask.2.2.3.1",
      "distance": 1.0152757167816162,
      "file_path": "sklearn/impute.py",
      "start_line": 43,
      "end_line": 58,
      "tokens": 142,
      "context_length": 6117,
      "file_pos": 2
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/imputation.py_Imputer_Imputer.__init__.self.copy.1",
      "distance": 1.0303494930267334,
      "file_path": "sklearn/preprocessing/imputation.py",
      "start_line": 64,
      "end_line": 127,
      "tokens": 564,
      "context_length": 6681
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer._impute_one_feature_ChainedImputer._impute_one_feature.20.1",
      "distance": 1.038598895072937,
      "file_path": "sklearn/impute.py",
      "start_line": 558,
      "end_line": 641,
      "tokens": 660,
      "context_length": 7341,
      "file_pos": 2
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer_ChainedImputer.1",
      "distance": 1.0481269359588623,
      "file_path": "sklearn/impute.py",
      "start_line": 426,
      "end_line": 531,
      "tokens": 1007,
      "context_length": 8348,
      "file_pos": 2
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_1___all__.1",
      "distance": 1.0507657527923584,
      "file_path": "sklearn/impute.py",
      "start_line": 1,
      "end_line": 40,
      "tokens": 206,
      "context_length": 8554,
      "file_pos": 2
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer.fit_transform_ChainedImputer.fit_transform.29.1",
      "distance": 1.0662634372711182,
      "file_path": "sklearn/impute.py",
      "start_line": 808,
      "end_line": 889,
      "tokens": 736,
      "context_length": 9290,
      "file_pos": 2
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/examples/plot_missing_values.py_results_diabetes_",
      "distance": 1.070667028427124,
      "file_path": "examples/plot_missing_values.py",
      "start_line": 84,
      "end_line": 129,
      "tokens": 391,
      "context_length": 9681
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/examples/plot_missing_values.py_1_rng.1",
      "distance": 1.072014331817627,
      "file_path": "examples/plot_missing_values.py",
      "start_line": 1,
      "end_line": 28,
      "tokens": 209,
      "context_length": 9890
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py__handle_zeros_in_scale__handle_zeros_in_scale.3.3.3.1",
      "distance": 1.0724987983703613,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 69,
      "end_line": 84,
      "tokens": 129,
      "context_length": 10019
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer._get_ordered_idx_ChainedImputer._get_ordered_idx.5.1",
      "distance": 1.089066743850708,
      "file_path": "sklearn/impute.py",
      "start_line": 683,
      "end_line": 725,
      "tokens": 428,
      "context_length": 10447,
      "file_pos": 4
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer._get_abs_corr_mat_ChainedImputer._get_abs_corr_mat.13.1",
      "distance": 1.0962567329406738,
      "file_path": "sklearn/impute.py",
      "start_line": 727,
      "end_line": 760,
      "tokens": 350,
      "context_length": 10797,
      "file_pos": 4
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py_sp__raise_error_wrong_axis.1.1",
      "distance": 1.0983192920684814,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 6,
      "end_line": 25,
      "tokens": 173,
      "context_length": 10970
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer.__init___ChainedImputer.__init__.self.random_state.1",
      "distance": 1.1026365756988525,
      "file_path": "sklearn/impute.py",
      "start_line": 533,
      "end_line": 556,
      "tokens": 183,
      "context_length": 11153,
      "file_pos": 5
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/birch.py__iterate_sparse_X__iterate_sparse_X.6.5",
      "distance": 1.1131892204284668,
      "file_path": "sklearn/cluster/birch.py",
      "start_line": 22,
      "end_line": 37,
      "tokens": 142,
      "context_length": 11295
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_nan_inf_check_estimators_nan_inf.rnd.13.2.10.1.4.1",
      "distance": 1.1134307384490967,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1083,
      "end_line": 1151,
      "tokens": 601,
      "context_length": 11896
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/examples/plot_missing_values.py_get_results_get_results.28.1",
      "distance": 1.1164696216583252,
      "file_path": "examples/plot_missing_values.py",
      "start_line": 31,
      "end_line": 81,
      "tokens": 527,
      "context_length": 12423
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py__most_frequent__most_frequent.5.4.2.2.1.1",
      "distance": 1.1210098266601562,
      "file_path": "sklearn/impute.py",
      "start_line": 61,
      "end_line": 92,
      "tokens": 296,
      "context_length": 12719,
      "file_pos": 7
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_scale.4_scale.5.1",
      "distance": 1.1300987005233765,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 145,
      "end_line": 198,
      "tokens": 596,
      "context_length": 13315
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimator_sparse_data_check_estimator_sparse_data.10.2.3.5.2",
      "distance": 1.1301862001419067,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 468,
      "end_line": 514,
      "tokens": 469,
      "context_length": 13784
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_26_parallel_helper.2.1",
      "distance": 1.1370986700057983,
      "file_path": "sklearn/utils/fixes.py",
      "start_line": 99,
      "end_line": 203,
      "tokens": 776,
      "context_length": 14560
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py_count_nonzero_count_nonzero.7.4.1",
      "distance": 1.1392700672149658,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 435,
      "end_line": 480,
      "tokens": 382,
      "context_length": 14942
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_assumptions.py_1_",
      "distance": 1.1425572633743286,
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 511,
      "context_length": 15453
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py__ensure_sparse_format__ensure_no_complex_data.1.1",
      "distance": 1.148681402206421,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 256,
      "end_line": 351,
      "tokens": 799,
      "context_length": 16252
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_QuantileTransformer._sparse_fit_QuantileTransformer._sparse_fit.self.quantiles__8.1",
      "distance": 1.1554722785949707,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 2017,
      "end_line": 2060,
      "tokens": 428,
      "context_length": 16680
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/base.py_SparseCoefMixin.sparsify_SparseCoefMixin.sparsify.5.1",
      "distance": 1.1560938358306885,
      "file_path": "sklearn/linear_model/base.py",
      "start_line": 301,
      "end_line": 328,
      "tokens": 257,
      "context_length": 16937
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_binarize_binarize.4.1",
      "distance": 1.1576714515686035,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1638,
      "end_line": 1679,
      "tokens": 386,
      "context_length": 17323
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_check_X_y.X_check_X_y.6.1",
      "distance": 1.1610691547393799,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 734,
      "end_line": 754,
      "tokens": 261,
      "context_length": 17584
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sparsify_coefficients_check_sparsify_coefficients.15",
      "distance": 1.167333722114563,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1945,
      "end_line": 1965,
      "tokens": 233,
      "context_length": 17817
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py__sparse_min_or_max__sparse_nan_min_max.1.1",
      "distance": 1.1693201065063477,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 371,
      "end_line": 397,
      "tokens": 238,
      "context_length": 18055
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/__init__.py_safe_sqr_safe_sqr.4.1",
      "distance": 1.1754271984100342,
      "file_path": "sklearn/utils/__init__.py",
      "start_line": 347,
      "end_line": 372,
      "tokens": 167,
      "context_length": 18222
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_StandardScaler.partial_fit.10_StandardScaler.partial_fit.16.1",
      "distance": 1.1763417720794678,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 654,
      "end_line": 718,
      "tokens": 568,
      "context_length": 18790
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__generate_sparse_matrix__generate_sparse_matrix.5.X_coo.5.4",
      "distance": 1.1784071922302246,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 434,
      "end_line": 465,
      "tokens": 302,
      "context_length": 19092
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/__init__.py_axis0_safe_slice_axis0_safe_slice.3.1",
      "distance": 1.1849234104156494,
      "file_path": "sklearn/utils/__init__.py",
      "start_line": 103,
      "end_line": 120,
      "tokens": 181,
      "context_length": 19273
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_lasso_dense_vs_sparse_data.py_1_",
      "distance": 1.1937682628631592,
      "file_path": "examples/linear_model/plot_lasso_dense_vs_sparse_data.py",
      "start_line": 1,
      "end_line": 67,
      "tokens": 511,
      "context_length": 19784
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/linear_assignment_.py__step5__step5.12.1",
      "distance": 1.1949565410614014,
      "file_path": "sklearn/utils/linear_assignment_.py",
      "start_line": 220,
      "end_line": 267,
      "tokens": 488,
      "context_length": 20272
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py__get_median__get_elem_at_rank.4.1",
      "distance": 1.1971256732940674,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 483,
      "end_line": 508,
      "tokens": 228,
      "context_length": 20500
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder._transform__BaseEncoder._transform.7.1",
      "distance": 1.1990199089050293,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 76,
      "end_line": 108,
      "tokens": 297,
      "context_length": 20797
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/dict_learning.py_sparse_encode.2_sparse_encode.14.1",
      "distance": 1.2023992538452148,
      "file_path": "sklearn/decomposition/dict_learning.py",
      "start_line": 275,
      "end_line": 331,
      "tokens": 493,
      "context_length": 21290
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py__min_or_max_axis__min_or_max_axis.13.1",
      "distance": 1.2029037475585938,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 348,
      "end_line": 368,
      "tokens": 228,
      "context_length": 21518
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sparsify.py_1_31",
      "distance": 1.2031497955322266,
      "file_path": "benchmarks/bench_sparsify.py",
      "start_line": 1,
      "end_line": 82,
      "tokens": 754,
      "context_length": 22272
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_Normalizer.transform_Normalizer.transform.5.1",
      "distance": 1.2049272060394287,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1614,
      "end_line": 1635,
      "tokens": 229,
      "context_length": 22501
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/imputation.py__most_frequent__most_frequent.5.4.2.2.1.1",
      "distance": 1.2063663005828857,
      "file_path": "sklearn/preprocessing/imputation.py",
      "start_line": 36,
      "end_line": 61,
      "tokens": 240,
      "context_length": 22741
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_ZeroEstimator_ZeroEstimator.predict.4.1",
      "distance": 1.2090418338775635,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 152,
      "end_line": 170,
      "tokens": 142,
      "context_length": 22883
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/manifold/isomap.py_Isomap._fit_transform_Isomap._fit_transform.self.embedding_.1",
      "distance": 1.2096290588378906,
      "file_path": "sklearn/manifold/isomap.py",
      "start_line": 102,
      "end_line": 124,
      "tokens": 215,
      "context_length": 23098
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_normalize.6_normalize.8.2.1.1",
      "distance": 1.212043046951294,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1520,
      "end_line": 1550,
      "tokens": 278,
      "context_length": 23376
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py__check_large_sparse__check_large_sparse.2.3.2.2",
      "distance": 1.2142722606658936,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 603,
      "end_line": 623,
      "tokens": 216,
      "context_length": 23592
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/linear_assignment_.py__step4__step4.8.2",
      "distance": 1.217131495475769,
      "file_path": "sklearn/utils/linear_assignment_.py",
      "start_line": 183,
      "end_line": 217,
      "tokens": 360,
      "context_length": 23952
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_dtype_object_check_complex_data.X.5",
      "distance": 1.218015193939209,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 557,
      "end_line": 592,
      "tokens": 328,
      "context_length": 24280
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py__assert_all_finite_assert_all_finite.2",
      "distance": 1.2182961702346802,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 40,
      "end_line": 68,
      "tokens": 267,
      "context_length": 24547
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_check_array.20_check_array.22.2.1",
      "distance": 1.2217304706573486,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 504,
      "end_line": 572,
      "tokens": 799,
      "context_length": 25346
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._legacy_transform_OneHotEncoder._legacy_transform.19.1",
      "distance": 1.222640037536621,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 485,
      "end_line": 523,
      "tokens": 410,
      "context_length": 25756
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_Binarizer_Binarizer.fit.3.1",
      "distance": 1.2231574058532715,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1682,
      "end_line": 1737,
      "tokens": 445,
      "context_length": 26201
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_Binarizer.transform_Binarizer.transform.4.1",
      "distance": 1.223426342010498,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1739,
      "end_line": 1760,
      "tokens": 210,
      "context_length": 26411
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/base.py__preprocess_data__preprocess_data.6.1",
      "distance": 1.224374532699585,
      "file_path": "sklearn/linear_model/base.py",
      "start_line": 70,
      "end_line": 136,
      "tokens": 629,
      "context_length": 27040
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sparsify.py_32_",
      "distance": 1.2256964445114136,
      "file_path": "benchmarks/bench_sparsify.py",
      "start_line": 83,
      "end_line": 106,
      "tokens": 153,
      "context_length": 27193
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.inverse_transform_OneHotEncoder.inverse_transform.21.1",
      "distance": 1.2277132272720337,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 575,
      "end_line": 640,
      "tokens": 515,
      "context_length": 27708
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/dict_learning.py__sparse_encode.7__sparse_encode.9.1",
      "distance": 1.227811574935913,
      "file_path": "sklearn/decomposition/dict_learning.py",
      "start_line": 113,
      "end_line": 181,
      "tokens": 692,
      "context_length": 28400
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_logistic_l1_l2_sparsity.py_1_",
      "distance": 1.2301263809204102,
      "file_path": "examples/linear_model/plot_logistic_l1_l2_sparsity.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 698,
      "context_length": 29098
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/sklearn/kernel_approximation.py_AdditiveChi2Sampler._transform_sparse_AdditiveChi2Sampler._transform_sparse.9.1",
      "distance": 1.2309744358062744,
      "file_path": "sklearn/kernel_approximation.py",
      "start_line": 338,
      "end_line": 364,
      "tokens": 269,
      "context_length": 29367
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_discretization.py_KBinsDiscretizer.transform_KBinsDiscretizer.transform.11.1",
      "distance": 1.2330374717712402,
      "file_path": "sklearn/preprocessing/_discretization.py",
      "start_line": 229,
      "end_line": 267,
      "tokens": 373,
      "context_length": 29740
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/dict_learning.py_SparseCodingMixin.transform_SparseCodingMixin.transform.6.1",
      "distance": 1.2330964803695679,
      "file_path": "sklearn/decomposition/dict_learning.py",
      "start_line": 866,
      "end_line": 902,
      "tokens": 267,
      "context_length": 30007
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_check_array.2_check_array.context.1",
      "distance": 1.2335541248321533,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 448,
      "end_line": 502,
      "tokens": 549,
      "context_length": 30556
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/dict_vectorizer.py_DictVectorizer._transform_DictVectorizer._transform.5",
      "distance": 1.2354432344436646,
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "start_line": 137,
      "end_line": 211,
      "tokens": 606,
      "context_length": 31162
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py_1__check_init.4.1",
      "distance": 1.2359392642974854,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 1,
      "end_line": 66,
      "tokens": 366,
      "context_length": 31528
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/sklearn/random_projection.py_sparse_random_matrix.5_sparse_random_matrix.5.3.indices.10.1",
      "distance": 1.2374444007873535,
      "file_path": "sklearn/random_projection.py",
      "start_line": 264,
      "end_line": 292,
      "tokens": 292,
      "context_length": 31820
    },
    {
      "position": 79,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py_assert_warns_div0_assert_warns_div0.2.2.1",
      "distance": 1.2376410961151123,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 232,
      "end_line": 246,
      "tokens": 131,
      "context_length": 31951
    },
    {
      "position": 80,
      "id": "/tmp/repos/scikit-learn/sklearn/externals/_pilutil.py_bytescale_bytescale.12.1",
      "distance": 1.2386515140533447,
      "file_path": "sklearn/externals/_pilutil.py",
      "start_line": 69,
      "end_line": 140,
      "tokens": 678,
      "context_length": 32629
    },
    {
      "position": 81,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_maxabs_scale_maxabs_scale.11.1",
      "distance": 1.2411689758300781,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 953,
      "end_line": 1009,
      "tokens": 463,
      "context_length": 33092
    },
    {
      "position": 82,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/iforest.py_IsolationForest.predict_IsolationForest.predict.6.1",
      "distance": 1.2414355278015137,
      "file_path": "sklearn/ensemble/iforest.py",
      "start_line": 238,
      "end_line": 258,
      "tokens": 203,
      "context_length": 33295
    },
    {
      "position": 83,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._legacy_fit_transform_OneHotEncoder._legacy_fit_transform.17.1",
      "distance": 1.2422080039978027,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 405,
      "end_line": 458,
      "tokens": 562,
      "context_length": 33857
    },
    {
      "position": 84,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_supervised_y_no_nan_check_supervised_y_no_nan.estimator.7.3.1",
      "distance": 1.2433381080627441,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 151,
      "end_line": 171,
      "tokens": 203,
      "context_length": 34060
    },
    {
      "position": 85,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py_incr_mean_variance_axis_incr_mean_variance_axis.3.3.1",
      "distance": 1.2434637546539307,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 101,
      "end_line": 161,
      "tokens": 469,
      "context_length": 34529
    },
    {
      "position": 86,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_MultinomialNB._count_MultinomialNB._joint_log_likelihood.4.1",
      "distance": 1.2438380718231201,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 711,
      "end_line": 732,
      "tokens": 227,
      "context_length": 34756
    },
    {
      "position": 87,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/__init__.py_safe_mask_safe_mask.5.1",
      "distance": 1.2439937591552734,
      "file_path": "sklearn/utils/__init__.py",
      "start_line": 78,
      "end_line": 100,
      "tokens": 120,
      "context_length": 34876
    },
    {
      "position": 88,
      "id": "/tmp/repos/scikit-learn/sklearn/random_projection.py_BaseRandomProjection.fit_BaseRandomProjection.fit.9.1",
      "distance": 1.2453129291534424,
      "file_path": "sklearn/random_projection.py",
      "start_line": 330,
      "end_line": 394,
      "tokens": 488,
      "context_length": 35364
    },
    {
      "position": 89,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_data_not_an_array_check_estimators_data_not_an_array.14",
      "distance": 1.2458113431930542,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1985,
      "end_line": 2005,
      "tokens": 200,
      "context_length": 35564
    },
    {
      "position": 90,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifier_data_not_an_array_check_regressor_data_not_an_array.4",
      "distance": 1.246337890625,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1968,
      "end_line": 1982,
      "tokens": 211,
      "context_length": 35775
    },
    {
      "position": 91,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_add_dummy_feature_add_dummy_feature.5.2.1.1",
      "distance": 1.247219204902649,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 1833,
      "end_line": 1889,
      "tokens": 546,
      "context_length": 36321
    },
    {
      "position": 92,
      "id": "/tmp/repos/scikit-learn/sklearn/impute.py_ChainedImputer._get_neighbor_feat_idx_ChainedImputer._get_neighbor_feat_idx.3.1",
      "distance": 1.2508094310760498,
      "file_path": "sklearn/impute.py",
      "start_line": 643,
      "end_line": 681,
      "tokens": 330,
      "context_length": 36651,
      "file_pos": 29
    },
    {
      "position": 93,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_CountVectorizer._count_vocab_CountVectorizer._count_vocab.16.1",
      "distance": 1.2528622150421143,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 848,
      "end_line": 908,
      "tokens": 467,
      "context_length": 37118
    },
    {
      "position": 94,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/extmath.py_safe_min_make_nonnegative.4.1",
      "distance": 1.2534773349761963,
      "file_path": "sklearn/utils/extmath.py",
      "start_line": 622,
      "end_line": 647,
      "tokens": 194,
      "context_length": 37312
    },
    {
      "position": 95,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py_csc_median_axis_0_",
      "distance": 1.2543442249298096,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 511,
      "end_line": 541,
      "tokens": 205,
      "context_length": 37517
    },
    {
      "position": 96,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/extmath.py_safe_sparse_dot_safe_sparse_dot.2.4.1.1",
      "distance": 1.25513756275177,
      "file_path": "sklearn/utils/extmath.py",
      "start_line": 114,
      "end_line": 139,
      "tokens": 197,
      "context_length": 37714
    },
    {
      "position": 97,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/hashing.py_FeatureHasher.transform_",
      "distance": 1.25588059425354,
      "file_path": "sklearn/feature_extraction/hashing.py",
      "start_line": 134,
      "end_line": 172,
      "tokens": 347,
      "context_length": 38061
    },
    {
      "position": 98,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/online_lda.py_LatentDirichletAllocation._check_non_neg_array_LatentDirichletAllocation.partial_fit.11.1",
      "distance": 1.2558846473693848,
      "file_path": "sklearn/decomposition/online_lda.py",
      "start_line": 456,
      "end_line": 509,
      "tokens": 355,
      "context_length": 38416
    }
  ],
  "files": [
    {
      "file_path": "sklearn/impute.py",
      "position": 1,
      "tokens": 7910,
      "context_length": 7910
    },
    {
      "file_path": "sklearn/preprocessing/imputation.py",
      "position": 2,
      "tokens": 2942,
      "context_length": 10852
    },
    {
      "file_path": "examples/plot_missing_values.py",
      "position": 3,
      "tokens": 1128,
      "context_length": 11980
    },
    {
      "file_path": "sklearn/preprocessing/data.py",
      "position": 4,
      "tokens": 21857,
      "context_length": 33837
    },
    {
      "file_path": "sklearn/utils/sparsefuncs.py",
      "position": 5,
      "tokens": 3921,
      "context_length": 37758
    },
    {
      "file_path": "sklearn/cluster/birch.py",
      "position": 6,
      "tokens": 5291,
      "context_length": 43049
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 7,
      "tokens": 19985,
      "context_length": 63034
    },
    {
      "file_path": "sklearn/utils/fixes.py",
      "position": 8,
      "tokens": 2411,
      "context_length": 65445
    },
    {
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "position": 9,
      "tokens": 533,
      "context_length": 65978
    },
    {
      "file_path": "sklearn/utils/validation.py",
      "position": 10,
      "tokens": 8077,
      "context_length": 74055
    },
    {
      "file_path": "sklearn/linear_model/base.py",
      "position": 11,
      "tokens": 4224,
      "context_length": 78279
    },
    {
      "file_path": "sklearn/utils/__init__.py",
      "position": 12,
      "tokens": 4391,
      "context_length": 82670
    },
    {
      "file_path": "examples/linear_model/plot_lasso_dense_vs_sparse_data.py",
      "position": 13,
      "tokens": 511,
      "context_length": 83181
    },
    {
      "file_path": "sklearn/utils/linear_assignment_.py",
      "position": 14,
      "tokens": 2429,
      "context_length": 85610
    },
    {
      "file_path": "sklearn/preprocessing/_encoders.py",
      "position": 15,
      "tokens": 6439,
      "context_length": 92049
    },
    {
      "file_path": "sklearn/decomposition/dict_learning.py",
      "position": 16,
      "tokens": 11298,
      "context_length": 103347
    },
    {
      "file_path": "benchmarks/bench_sparsify.py",
      "position": 17,
      "tokens": 907,
      "context_length": 104254
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 18,
      "tokens": 18278,
      "context_length": 122532
    },
    {
      "file_path": "sklearn/manifold/isomap.py",
      "position": 19,
      "tokens": 1689,
      "context_length": 124221
    },
    {
      "file_path": "examples/linear_model/plot_logistic_l1_l2_sparsity.py",
      "position": 20,
      "tokens": 752,
      "context_length": 124973
    },
    {
      "file_path": "sklearn/kernel_approximation.py",
      "position": 21,
      "tokens": 4124,
      "context_length": 129097
    },
    {
      "file_path": "sklearn/preprocessing/_discretization.py",
      "position": 22,
      "tokens": 2654,
      "context_length": 131751
    },
    {
      "file_path": "sklearn/feature_extraction/dict_vectorizer.py",
      "position": 23,
      "tokens": 2718,
      "context_length": 134469
    },
    {
      "file_path": "sklearn/decomposition/nmf.py",
      "position": 24,
      "tokens": 11740,
      "context_length": 146209
    },
    {
      "file_path": "sklearn/random_projection.py",
      "position": 25,
      "tokens": 4973,
      "context_length": 151182
    },
    {
      "file_path": "sklearn/utils/testing.py",
      "position": 26,
      "tokens": 6881,
      "context_length": 158063
    },
    {
      "file_path": "sklearn/externals/_pilutil.py",
      "position": 27,
      "tokens": 4605,
      "context_length": 162668
    },
    {
      "file_path": "sklearn/ensemble/iforest.py",
      "position": 28,
      "tokens": 3364,
      "context_length": 166032
    },
    {
      "file_path": "sklearn/naive_bayes.py",
      "position": 29,
      "tokens": 8409,
      "context_length": 174441
    },
    {
      "file_path": "sklearn/feature_extraction/text.py",
      "position": 30,
      "tokens": 12248,
      "context_length": 186689
    },
    {
      "file_path": "sklearn/utils/extmath.py",
      "position": 31,
      "tokens": 6330,
      "context_length": 193019
    },
    {
      "file_path": "sklearn/feature_extraction/hashing.py",
      "position": 32,
      "tokens": 1530,
      "context_length": 194549
    },
    {
      "file_path": "sklearn/decomposition/online_lda.py",
      "position": 33,
      "tokens": 6590,
      "context_length": 201139
    }
  ]
}