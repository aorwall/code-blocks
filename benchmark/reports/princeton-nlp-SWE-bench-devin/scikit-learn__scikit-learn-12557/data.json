{
  "instance_id": "scikit-learn__scikit-learn-12557",
  "model_patch": "",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "4de404d46d24805ff48ad255ec3169a5155986f0",
  "patch": "diff --git a/examples/svm/plot_svm_tie_breaking.py b/examples/svm/plot_svm_tie_breaking.py\nnew file mode 100644\n--- /dev/null\n+++ b/examples/svm/plot_svm_tie_breaking.py\n@@ -0,0 +1,64 @@\n+\"\"\"\n+=========================================================\n+SVM Tie Breaking Example\n+=========================================================\n+Tie breaking is costly if ``decision_function_shape='ovr'``, and therefore it\n+is not enabled by default. This example illustrates the effect of the\n+``break_ties`` parameter for a multiclass classification problem and\n+``decision_function_shape='ovr'``.\n+\n+The two plots differ only in the area in the middle where the classes are\n+tied. If ``break_ties=False``, all input in that area would be classified as\n+one class, whereas if ``break_ties=True``, the tie-breaking mechanism will\n+create a non-convex decision boundary in that area.\n+\"\"\"\n+print(__doc__)\n+\n+\n+# Code source: Andreas Mueller, Adrin Jalali\n+# License: BSD 3 clause\n+\n+\n+import numpy as np\n+import matplotlib.pyplot as plt\n+from sklearn.svm import SVC\n+from sklearn.datasets import make_blobs\n+\n+X, y = make_blobs(random_state=27)\n+\n+fig, sub = plt.subplots(2, 1, figsize=(5, 8))\n+titles = (\"break_ties = False\",\n+          \"break_ties = True\")\n+\n+for break_ties, title, ax in zip((False, True), titles, sub.flatten()):\n+\n+    svm = SVC(kernel=\"linear\", C=1, break_ties=break_ties,\n+              decision_function_shape='ovr').fit(X, y)\n+\n+    xlim = [X[:, 0].min(), X[:, 0].max()]\n+    ylim = [X[:, 1].min(), X[:, 1].max()]\n+\n+    xs = np.linspace(xlim[0], xlim[1], 1000)\n+    ys = np.linspace(ylim[0], ylim[1], 1000)\n+    xx, yy = np.meshgrid(xs, ys)\n+\n+    pred = svm.predict(np.c_[xx.ravel(), yy.ravel()])\n+\n+    colors = [plt.cm.Accent(i) for i in [0, 4, 7]]\n+\n+    points = ax.scatter(X[:, 0], X[:, 1], c=y, cmap=\"Accent\")\n+    classes = [(0, 1), (0, 2), (1, 2)]\n+    line = np.linspace(X[:, 1].min() - 5, X[:, 1].max() + 5)\n+    ax.imshow(-pred.reshape(xx.shape), cmap=\"Accent\", alpha=.2,\n+              extent=(xlim[0], xlim[1], ylim[1], ylim[0]))\n+\n+    for coef, intercept, col in zip(svm.coef_, svm.intercept_, classes):\n+        line2 = -(line * coef[1] + intercept) / coef[0]\n+        ax.plot(line2, line, \"-\", c=colors[col[0]])\n+        ax.plot(line2, line, \"--\", c=colors[col[1]])\n+    ax.set_xlim(xlim)\n+    ax.set_ylim(ylim)\n+    ax.set_title(title)\n+    ax.set_aspect(\"equal\")\n+\n+plt.show()\ndiff --git a/sklearn/model_selection/_search.py b/sklearn/model_selection/_search.py\n--- a/sklearn/model_selection/_search.py\n+++ b/sklearn/model_selection/_search.py\n@@ -983,11 +983,13 @@ class GridSearchCV(BaseSearchCV):\n     >>> clf.fit(iris.data, iris.target)\n     ...                             # doctest: +NORMALIZE_WHITESPACE +ELLIPSIS\n     GridSearchCV(cv=5, error_score=...,\n-           estimator=SVC(C=1.0, cache_size=..., class_weight=..., coef0=...,\n+           estimator=SVC(C=1.0, break_ties=False, cache_size=...,\n+                         class_weight=..., coef0=...,\n                          decision_function_shape='ovr', degree=..., gamma=...,\n-                         kernel='rbf', max_iter=-1, probability=False,\n-                         random_state=None, shrinking=True, tol=...,\n-                         verbose=False),\n+                         kernel='rbf', max_iter=-1,\n+                         probability=False,\n+                         random_state=None, shrinking=True,\n+                         tol=..., verbose=False),\n            iid=..., n_jobs=None,\n            param_grid=..., pre_dispatch=..., refit=..., return_train_score=...,\n            scoring=..., verbose=...)\ndiff --git a/sklearn/svm/base.py b/sklearn/svm/base.py\n--- a/sklearn/svm/base.py\n+++ b/sklearn/svm/base.py\n@@ -501,8 +501,10 @@ class BaseSVC(BaseLibSVM, ClassifierMixin, metaclass=ABCMeta):\n     @abstractmethod\n     def __init__(self, kernel, degree, gamma, coef0, tol, C, nu,\n                  shrinking, probability, cache_size, class_weight, verbose,\n-                 max_iter, decision_function_shape, random_state):\n+                 max_iter, decision_function_shape, random_state,\n+                 break_ties):\n         self.decision_function_shape = decision_function_shape\n+        self.break_ties = break_ties\n         super().__init__(\n             kernel=kernel, degree=degree, gamma=gamma,\n             coef0=coef0, tol=tol, C=C, nu=nu, epsilon=0., shrinking=shrinking,\n@@ -571,7 +573,17 @@ def predict(self, X):\n         y_pred : array, shape (n_samples,)\n             Class labels for samples in X.\n         \"\"\"\n-        y = super().predict(X)\n+        check_is_fitted(self, \"classes_\")\n+        if self.break_ties and self.decision_function_shape == 'ovo':\n+            raise ValueError(\"break_ties must be False when \"\n+                             \"decision_function_shape is 'ovo'\")\n+\n+        if (self.break_ties\n+                and self.decision_function_shape == 'ovr'\n+                and len(self.classes_) > 2):\n+            y = np.argmax(self.decision_function(X), axis=1)\n+        else:\n+            y = super().predict(X)\n         return self.classes_.take(np.asarray(y, dtype=np.intp))\n \n     # Hacky way of getting predict_proba to raise an AttributeError when\ndiff --git a/sklearn/svm/classes.py b/sklearn/svm/classes.py\n--- a/sklearn/svm/classes.py\n+++ b/sklearn/svm/classes.py\n@@ -521,6 +521,15 @@ class SVC(BaseSVC):\n         .. versionchanged:: 0.17\n            Deprecated *decision_function_shape='ovo' and None*.\n \n+    break_ties : bool, optional (default=False)\n+        If true, ``decision_function_shape='ovr'``, and number of classes > 2,\n+        :term:`predict` will break ties according to the confidence values of\n+        :term:`decision_function`; otherwise the first class among the tied\n+        classes is returned. Please note that breaking ties comes at a\n+        relatively high computational cost compared to a simple predict.\n+\n+        .. versionadded:: 0.22\n+\n     random_state : int, RandomState instance or None, optional (default=None)\n         The seed of the pseudo random number generator used when shuffling\n         the data for probability estimates. If int, random_state is the\n@@ -578,10 +587,10 @@ class SVC(BaseSVC):\n     >>> from sklearn.svm import SVC\n     >>> clf = SVC(gamma='auto')\n     >>> clf.fit(X, y) #doctest: +NORMALIZE_WHITESPACE\n-    SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n+    SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,\n         decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',\n-        max_iter=-1, probability=False, random_state=None, shrinking=True,\n-        tol=0.001, verbose=False)\n+        max_iter=-1, probability=False,\n+        random_state=None, shrinking=True, tol=0.001, verbose=False)\n     >>> print(clf.predict([[-0.8, -1]]))\n     [1]\n \n@@ -611,6 +620,7 @@ def __init__(self, C=1.0, kernel='rbf', degree=3, gamma='auto_deprecated',\n                  coef0=0.0, shrinking=True, probability=False,\n                  tol=1e-3, cache_size=200, class_weight=None,\n                  verbose=False, max_iter=-1, decision_function_shape='ovr',\n+                 break_ties=False,\n                  random_state=None):\n \n         super().__init__(\n@@ -619,6 +629,7 @@ def __init__(self, C=1.0, kernel='rbf', degree=3, gamma='auto_deprecated',\n             probability=probability, cache_size=cache_size,\n             class_weight=class_weight, verbose=verbose, max_iter=max_iter,\n             decision_function_shape=decision_function_shape,\n+            break_ties=break_ties,\n             random_state=random_state)\n \n \n@@ -707,6 +718,15 @@ class NuSVC(BaseSVC):\n         .. versionchanged:: 0.17\n            Deprecated *decision_function_shape='ovo' and None*.\n \n+    break_ties : bool, optional (default=False)\n+        If true, ``decision_function_shape='ovr'``, and number of classes > 2,\n+        :term:`predict` will break ties according to the confidence values of\n+        :term:`decision_function`; otherwise the first class among the tied\n+        classes is returned. Please note that breaking ties comes at a\n+        relatively high computational cost compared to a simple predict.\n+\n+        .. versionadded:: 0.22\n+\n     random_state : int, RandomState instance or None, optional (default=None)\n         The seed of the pseudo random number generator used when shuffling\n         the data for probability estimates. If int, random_state is the seed\n@@ -750,10 +770,10 @@ class NuSVC(BaseSVC):\n     >>> from sklearn.svm import NuSVC\n     >>> clf = NuSVC(gamma='scale')\n     >>> clf.fit(X, y) #doctest: +NORMALIZE_WHITESPACE\n-    NuSVC(cache_size=200, class_weight=None, coef0=0.0,\n+    NuSVC(break_ties=False, cache_size=200, class_weight=None, coef0=0.0,\n           decision_function_shape='ovr', degree=3, gamma='scale', kernel='rbf',\n-          max_iter=-1, nu=0.5, probability=False, random_state=None,\n-          shrinking=True, tol=0.001, verbose=False)\n+          max_iter=-1, nu=0.5, probability=False,\n+          random_state=None, shrinking=True, tol=0.001, verbose=False)\n     >>> print(clf.predict([[-0.8, -1]]))\n     [1]\n \n@@ -778,7 +798,8 @@ class NuSVC(BaseSVC):\n     def __init__(self, nu=0.5, kernel='rbf', degree=3, gamma='auto_deprecated',\n                  coef0=0.0, shrinking=True, probability=False, tol=1e-3,\n                  cache_size=200, class_weight=None, verbose=False, max_iter=-1,\n-                 decision_function_shape='ovr', random_state=None):\n+                 decision_function_shape='ovr', break_ties=False,\n+                 random_state=None):\n \n         super().__init__(\n             kernel=kernel, degree=degree, gamma=gamma,\n@@ -786,6 +807,7 @@ def __init__(self, nu=0.5, kernel='rbf', degree=3, gamma='auto_deprecated',\n             probability=probability, cache_size=cache_size,\n             class_weight=class_weight, verbose=verbose, max_iter=max_iter,\n             decision_function_shape=decision_function_shape,\n+            break_ties=break_ties,\n             random_state=random_state)\n \n \n",
  "test_patch": "diff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -985,6 +985,41 @@ def test_ovr_decision_function():\n     assert np.all(pred_class_deci_val[:, 0] < pred_class_deci_val[:, 1])\n \n \n+@pytest.mark.parametrize(\"SVCClass\", [svm.SVC, svm.NuSVC])\n+def test_svc_invalid_break_ties_param(SVCClass):\n+    X, y = make_blobs(random_state=42)\n+\n+    svm = SVCClass(kernel=\"linear\", decision_function_shape='ovo',\n+                   break_ties=True, random_state=42).fit(X, y)\n+\n+    with pytest.raises(ValueError, match=\"break_ties must be False\"):\n+        svm.predict(y)\n+\n+\n+@pytest.mark.parametrize(\"SVCClass\", [svm.SVC, svm.NuSVC])\n+def test_svc_ovr_tie_breaking(SVCClass):\n+    \"\"\"Test if predict breaks ties in OVR mode.\n+    Related issue: https://github.com/scikit-learn/scikit-learn/issues/8277\n+    \"\"\"\n+    X, y = make_blobs(random_state=27)\n+\n+    xs = np.linspace(X[:, 0].min(), X[:, 0].max(), 1000)\n+    ys = np.linspace(X[:, 1].min(), X[:, 1].max(), 1000)\n+    xx, yy = np.meshgrid(xs, ys)\n+\n+    svm = SVCClass(kernel=\"linear\", decision_function_shape='ovr',\n+                   break_ties=False, random_state=42).fit(X, y)\n+    pred = svm.predict(np.c_[xx.ravel(), yy.ravel()])\n+    dv = svm.decision_function(np.c_[xx.ravel(), yy.ravel()])\n+    assert not np.all(pred == np.argmax(dv, axis=1))\n+\n+    svm = SVCClass(kernel=\"linear\", decision_function_shape='ovr',\n+                   break_ties=True, random_state=42).fit(X, y)\n+    pred = svm.predict(np.c_[xx.ravel(), yy.ravel()])\n+    dv = svm.decision_function(np.c_[xx.ravel(), yy.ravel()])\n+    assert np.all(pred == np.argmax(dv, axis=1))\n+\n+\n def test_gamma_auto():\n     X, y = [[0.0, 1.2], [1.0, 1.3]], [0, 1]\n \n",
  "problem_statement": "SVC.decision_function disagrees with predict\nIn ``SVC`` with ``decision_function_shape=\"ovr\"`` argmax of the decision function is not the same as ``predict``. This is related to the tie-breaking mentioned in #8276.\r\n\r\nThe ``decision_function`` now includes tie-breaking, which the ``predict`` doesn't.\r\nI'm not sure the tie-breaking is good, but we should be consistent either way.\n",
  "hints_text": "The relevant issue on `libsvm` (i.e. issue https://github.com/cjlin1/libsvm/issues/85) seems to be stalled and I'm not sure if it's had a conclusion. At least on the `libsvm` side it seems they prefer not to include the confidences for computational cost of it.\r\n\r\nNow the question is, do we want to change the `svm.cpp` to fix the issue and take the confidences into account? Or do we want the `SVC.predict` to use `SVC.decision_function` instead of calling `libsvm`'s `predict`? Or to fix the documentation and make it clear that `decision_function` and `predict` may not agree in case of a tie?\nDoes this related to #9174 also? Does #10440 happen to fix it??\u200b\n\n@jnothman not really, that's exactly the issue actually. the `predict` function which calls the `libsvm`'s `predict` function, does not use confidences to break the ties, but the `decision_function` does (as a result of the issue and the PR you mentioned).\nAh, I see.\u200b Hmm...\n\nAnother alternative is to have a `break_ties_in_predict` (or a much better parameter name that you can think of), have the default `False`, and if `True`, return the argmax of the decision_function. It would be very little code and backward compatible.\n@adrinjalali and then change the default value? Or keep it inconsistent by default? (neither of these seems like great options to me ;)\n@amueller I know it's not ideal, but my intuition says:\r\n\r\n1- argmax of decision function is much slower than predict, which is why I'd see why in most usercases people would prefer to just ignore the tie breaking issue.\r\n2- in practice, ties happen very rarely, therefore the inconsistency is actually not that big of an issue (we'd be seeing more reported issues if that was happening more often and people were noticing, I guess).\r\n\r\nTherefore, I'd say the default value `False` is not an unreasonable case at all. On top of that, we'd document this properly both in the docstring and in the user manuals. And if the user really would like them to be consistent, they can make it so.\r\n\r\nOne could make the same argument and say the change is not necessary at all then. In response to which, I'd say the change is trivial and not much code at all, and easy to maintain, therefore there's not much damage the change would do. I kinda see this proposal as a compromise between the two cases of leaving it as is, and fixing it for everybody and breaking backward compatibility.\r\n\r\nAlso, independent of this change, if after the introduction of the change,we see some demand for the default to be `True` (which I'd doubt), we can do it in a rather long deprecation cycle to give people enough time to change/fix their code.\r\n\r\n(I'm just explaining my proposed solution, absolutely no attachments to the proposal :P )\nAdding a parameter would certainly make more users aware of this issue, and\nit is somewhat like other parameters giving efficiency tradeoffs.\n\n>\n",
  "created_at": "2018-11-10T15:45:52Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/svm/tests/test_svm.py::test_svc_invalid_break_ties_param[NuSVC]\", \"sklearn/svm/tests/test_svm.py::test_svc_invalid_break_ties_param[SVC]\", \"sklearn/svm/tests/test_svm.py::test_svc_ovr_tie_breaking[NuSVC]\", \"sklearn/svm/tests/test_svm.py::test_svc_ovr_tie_breaking[SVC]\"]",
  "PASS_TO_PASS": "[\"sklearn/svm/tests/test_svm.py::test_auto_weight\", \"sklearn/svm/tests/test_svm.py::test_bad_input\", \"sklearn/svm/tests/test_svm.py::test_consistent_proba\", \"sklearn/svm/tests/test_svm.py::test_crammer_singer_binary\", \"sklearn/svm/tests/test_svm.py::test_decision_function\", \"sklearn/svm/tests/test_svm.py::test_decision_function_shape\", \"sklearn/svm/tests/test_svm.py::test_decision_function_shape_two_class\", \"sklearn/svm/tests/test_svm.py::test_dense_liblinear_intercept_handling\", \"sklearn/svm/tests/test_svm.py::test_gamma_auto\", \"sklearn/svm/tests/test_svm.py::test_gamma_scale\", \"sklearn/svm/tests/test_svm.py::test_hasattr_predict_proba\", \"sklearn/svm/tests/test_svm.py::test_immutable_coef_property\", \"sklearn/svm/tests/test_svm.py::test_liblinear_set_coef\", \"sklearn/svm/tests/test_svm.py::test_libsvm_iris\", \"sklearn/svm/tests/test_svm.py::test_libsvm_parameters\", \"sklearn/svm/tests/test_svm.py::test_linear_svc_intercept_scaling\", \"sklearn/svm/tests/test_svm.py::test_linear_svm_convergence_warnings\", \"sklearn/svm/tests/test_svm.py::test_linear_svx_uppercase_loss_penality_raises_error\", \"sklearn/svm/tests/test_svm.py::test_linearsvc\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_crammer_singer\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_fit_sampleweight\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_iris\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_parameters\", \"sklearn/svm/tests/test_svm.py::test_linearsvc_verbose\", \"sklearn/svm/tests/test_svm.py::test_linearsvr\", \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\", \"sklearn/svm/tests/test_svm.py::test_linearsvx_loss_penalty_deprecations\", \"sklearn/svm/tests/test_svm.py::test_lsvc_intercept_scaling_zero\", \"sklearn/svm/tests/test_svm.py::test_oneclass\", \"sklearn/svm/tests/test_svm.py::test_oneclass_decision_function\", \"sklearn/svm/tests/test_svm.py::test_oneclass_score_samples\", \"sklearn/svm/tests/test_svm.py::test_ovr_decision_function\", \"sklearn/svm/tests/test_svm.py::test_precomputed\", \"sklearn/svm/tests/test_svm.py::test_probability\", \"sklearn/svm/tests/test_svm.py::test_sample_weights\", \"sklearn/svm/tests/test_svm.py::test_sparse_precomputed\", \"sklearn/svm/tests/test_svm.py::test_svc_bad_kernel\", \"sklearn/svm/tests/test_svm.py::test_svc_clone_with_callable_kernel\", \"sklearn/svm/tests/test_svm.py::test_svr\", \"sklearn/svm/tests/test_svm.py::test_svr_coef_sign\", \"sklearn/svm/tests/test_svm.py::test_svr_errors\", \"sklearn/svm/tests/test_svm.py::test_svr_predict\", \"sklearn/svm/tests/test_svm.py::test_timeout\", \"sklearn/svm/tests/test_svm.py::test_tweak_params\", \"sklearn/svm/tests/test_svm.py::test_unfitted\", \"sklearn/svm/tests/test_svm.py::test_unicode_kernel\", \"sklearn/svm/tests/test_svm.py::test_weight\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "patch_files": [
    "examples/svm/plot_svm_tie_breaking.py",
    "sklearn/model_selection/_search.py",
    "sklearn/svm/base.py",
    "sklearn/svm/classes.py"
  ],
  "test_patch_files": [
    "sklearn/svm/tests/test_svm.py"
  ],
  "patch_diff_details": {
    "examples/svm/plot_svm_tie_breaking.py": {
      "diffs": [
        {
          "start_line_old": 0,
          "end_line_old": 0
        }
      ]
    },
    "sklearn/model_selection/_search.py": {
      "diffs": [
        {
          "start_line_old": 986,
          "end_line_old": 990,
          "file_pos": 23,
          "file_context_length": 125954,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_BaseSearchCV.decision_function_BaseSearchCV.decision_function.3.1",
          "closest_snippet_line_distance": 482
        }
      ]
    },
    "sklearn/svm/base.py": {
      "diffs": [
        {
          "start_line_old": 504,
          "end_line_old": 504,
          "file_pos": 3,
          "file_context_length": 12870,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM._sparse_decision_function_BaseLibSVM._sparse_decision_function.5.1",
          "closest_snippet_line_distance": 56,
          "pos": 65,
          "context_length": 31280
        },
        {
          "start_line_old": 574,
          "end_line_old": 574,
          "file_pos": 3,
          "file_context_length": 12870,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC._sparse_predict_proba_BaseSVC._get_coef.2.1",
          "closest_snippet_line_distance": 104,
          "pos": 18,
          "context_length": 8890
        }
      ]
    },
    "sklearn/svm/classes.py": {
      "diffs": [
        {
          "start_line_old": 524,
          "end_line_old": 524,
          "file_pos": 5,
          "file_context_length": 30888,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_NuSVC._impl_NuSVC.__init__.1",
          "closest_snippet_line_distance": 252,
          "pos": 59,
          "context_length": 28417
        },
        {
          "start_line_old": 581,
          "end_line_old": 584,
          "file_pos": 5,
          "file_context_length": 30888,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_NuSVC._impl_NuSVC.__init__.1",
          "closest_snippet_line_distance": 195,
          "pos": 59,
          "context_length": 28417
        },
        {
          "start_line_old": 614,
          "end_line_old": 614,
          "file_pos": 5,
          "file_context_length": 30888,
          "pos": 59,
          "context_length": 28417
        },
        {
          "start_line_old": 622,
          "end_line_old": 622,
          "file_pos": 5,
          "file_context_length": 30888,
          "pos": 59,
          "context_length": 28417
        },
        {
          "start_line_old": 710,
          "end_line_old": 710,
          "file_pos": 5,
          "file_context_length": 30888,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_SVC.1_SVC.1",
          "closest_snippet_line_distance": 104,
          "pos": 17,
          "context_length": 8744
        },
        {
          "start_line_old": 753,
          "end_line_old": 756,
          "file_pos": 5,
          "file_context_length": 30888,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_SVC.1_SVC.1",
          "closest_snippet_line_distance": 150,
          "pos": 17,
          "context_length": 8744
        },
        {
          "start_line_old": 781,
          "end_line_old": 781,
          "file_pos": 5,
          "file_context_length": 30888,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_SVC._impl_SVC.__init__.1",
          "closest_snippet_line_distance": 159,
          "pos": 7,
          "context_length": 2867
        },
        {
          "start_line_old": 789,
          "end_line_old": 789,
          "file_pos": 5,
          "file_context_length": 30888,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_SVC._impl_SVC.__init__.1",
          "closest_snippet_line_distance": 167,
          "pos": 7,
          "context_length": 2867
        }
      ]
    }
  },
  "vectors": 2995,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_20newsgroups.py_1_",
      "distance": 0.8087595105171204,
      "file_path": "benchmarks/bench_20newsgroups.py",
      "start_line": 1,
      "end_line": 97,
      "tokens": 778,
      "context_length": 778
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/multiclass.py__ovr_decision_function_",
      "distance": 0.8099151849746704,
      "file_path": "sklearn/utils/multiclass.py",
      "start_line": 402,
      "end_line": 444,
      "tokens": 442,
      "context_length": 1220
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC.decision_function_BaseSVC.decision_function.4.1",
      "distance": 0.9967402219772339,
      "file_path": "sklearn/svm/base.py",
      "start_line": 527,
      "end_line": 556,
      "tokens": 303,
      "context_length": 1523,
      "file_pos": 3
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OneVsOneClassifier.decision_function_OneVsOneClassifier._pairwise.2.1",
      "distance": 1.0378705263137817,
      "file_path": "sklearn/multiclass.py",
      "start_line": 591,
      "end_line": 632,
      "tokens": 344,
      "context_length": 1867
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_SVC._impl_SVC.__init__.1",
      "distance": 1.0484168529510498,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 608,
      "end_line": 622,
      "tokens": 177,
      "context_length": 2044,
      "file_pos": 5
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_voting_decision_regions.py_1_",
      "distance": 1.049633264541626,
      "file_path": "examples/ensemble/plot_voting_decision_regions.py",
      "start_line": 1,
      "end_line": 74,
      "tokens": 644,
      "context_length": 2688
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_NuSVC._impl_NuSVC.__init__.1",
      "distance": 1.0511481761932373,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 776,
      "end_line": 789,
      "tokens": 179,
      "context_length": 2867,
      "file_pos": 6
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC.6_BaseSVC._check_proba.2.1",
      "distance": 1.0638028383255005,
      "file_path": "sklearn/svm/base.py",
      "start_line": 577,
      "end_line": 587,
      "tokens": 133,
      "context_length": 3000,
      "file_pos": 6
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM._decision_function_BaseLibSVM._decision_function.10.1",
      "distance": 1.111142635345459,
      "file_path": "sklearn/svm/base.py",
      "start_line": 382,
      "end_line": 410,
      "tokens": 241,
      "context_length": 3241,
      "file_pos": 6
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_ClassifierChain.decision_function_ClassifierChain._more_tags.1.1",
      "distance": 1.1215999126434326,
      "file_path": "sklearn/multioutput.py",
      "start_line": 619,
      "end_line": 652,
      "tokens": 296,
      "context_length": 3537
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC._predict_log_proba_BaseSVC._dense_predict_proba.6.1",
      "distance": 1.1235655546188354,
      "file_path": "sklearn/svm/base.py",
      "start_line": 658,
      "end_line": 676,
      "tokens": 170,
      "context_length": 3707,
      "file_pos": 7
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_saga.py__predict_proba_exp.9.1",
      "distance": 1.1240142583847046,
      "file_path": "benchmarks/bench_saga.py",
      "start_line": 107,
      "end_line": 189,
      "tokens": 637,
      "context_length": 4344
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC._sparse_predict_proba_BaseSVC._get_coef.2.1",
      "distance": 1.1346793174743652,
      "file_path": "sklearn/svm/base.py",
      "start_line": 678,
      "end_line": 713,
      "tokens": 317,
      "context_length": 4661,
      "file_pos": 8
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_SVC.1_SVC.1",
      "distance": 1.140696406364441,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 430,
      "end_line": 606,
      "tokens": 1839,
      "context_length": 6500,
      "file_pos": 8
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/tree/tree.py_BaseDecisionTree._validate_X_predict_BaseDecisionTree._validate_X_predict.5.1",
      "distance": 1.1581617593765259,
      "file_path": "sklearn/tree/tree.py",
      "start_line": 388,
      "end_line": 404,
      "tokens": 180,
      "context_length": 6680
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/examples/classification/plot_classifier_comparison.py_1_35",
      "distance": 1.1738642454147339,
      "file_path": "examples/classification/plot_classifier_comparison.py",
      "start_line": 1,
      "end_line": 78,
      "tokens": 633,
      "context_length": 7313
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_NuSVC_NuSVC.1",
      "distance": 1.1754896640777588,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 625,
      "end_line": 774,
      "tokens": 1431,
      "context_length": 8744,
      "file_pos": 10
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC.predict_BaseSVC.predict.3.1",
      "distance": 1.176928997039795,
      "file_path": "sklearn/svm/base.py",
      "start_line": 558,
      "end_line": 575,
      "tokens": 146,
      "context_length": 8890,
      "file_pos": 10
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_svm_nonlinear.py_1_",
      "distance": 1.178396224975586,
      "file_path": "examples/svm/plot_svm_nonlinear.py",
      "start_line": 1,
      "end_line": 43,
      "tokens": 318,
      "context_length": 9208
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/examples/semi_supervised/plot_label_propagation_versus_svm_iris.py_1_",
      "distance": 1.179656744003296,
      "file_path": "examples/semi_supervised/plot_label_propagation_versus_svm_iris.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 697,
      "context_length": 9905
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train.10_check_classifiers_train.10.24.y_prob.7.y_log_prob.3",
      "distance": 1.1807501316070557,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1433,
      "end_line": 1532,
      "tokens": 940,
      "context_length": 10845
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py_29_SCORERS.1",
      "distance": 1.1831390857696533,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 466,
      "end_line": 530,
      "tokens": 702,
      "context_length": 11547
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_predictions_check_classifiers_predictions.10",
      "distance": 1.1854296922683716,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1728,
      "end_line": 1769,
      "tokens": 417,
      "context_length": 11964
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_OneClassSVM.decision_function_OneClassSVM.score_samples.2.1",
      "distance": 1.1903102397918701,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 1192,
      "end_line": 1221,
      "tokens": 190,
      "context_length": 12154,
      "file_pos": 14
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_no_decision_function_check_regressors_no_decision_function.rng.8.5",
      "distance": 1.1912795305252075,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1883,
      "end_line": 1904,
      "tokens": 214,
      "context_length": 12368
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM._dense_decision_function_BaseLibSVM._dense_decision_function.4.1",
      "distance": 1.1924735307693481,
      "file_path": "sklearn/svm/base.py",
      "start_line": 412,
      "end_line": 426,
      "tokens": 150,
      "context_length": 12518,
      "file_pos": 14
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py__ThresholdScorer__ThresholdScorer._factory_args.1.1",
      "distance": 1.1950663328170776,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 146,
      "end_line": 210,
      "tokens": 478,
      "context_length": 12996
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_separating_hyperplane_unbalanced.py_1_",
      "distance": 1.1957454681396484,
      "file_path": "examples/svm/plot_separating_hyperplane_unbalanced.py",
      "start_line": 1,
      "end_line": 81,
      "tokens": 648,
      "context_length": 13644
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OneVsOneClassifier.predict_OneVsOneClassifier.predict.4.1",
      "distance": 1.2034554481506348,
      "file_path": "sklearn/multiclass.py",
      "start_line": 569,
      "end_line": 589,
      "tokens": 182,
      "context_length": 13826
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/examples/plot_kernel_ridge_regression.py_1_kr_fit.1",
      "distance": 1.2054200172424316,
      "file_path": "examples/plot_kernel_ridge_regression.py",
      "start_line": 1,
      "end_line": 79,
      "tokens": 759,
      "context_length": 14585
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_SGDClassifier._predict_proba_SGDClassifier._predict_proba.2.3.1",
      "distance": 1.206489086151123,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 997,
      "end_line": 1038,
      "tokens": 307,
      "context_length": 14892
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_outliers_train_check_outliers_train.33.expected_outliers.14.2",
      "distance": 1.2066872119903564,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1555,
      "end_line": 1627,
      "tokens": 655,
      "context_length": 15547
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_iris_svc.py_1_5",
      "distance": 1.208899974822998,
      "file_path": "examples/svm/plot_iris_svc.py",
      "start_line": 1,
      "end_line": 40,
      "tokens": 300,
      "context_length": 15847
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_regression_target_check_decision_proba_consistency.centers.5.4",
      "distance": 1.2094933986663818,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2358,
      "end_line": 2387,
      "tokens": 294,
      "context_length": 16141
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_rbf_parameters.py_np_59",
      "distance": 1.2099905014038086,
      "file_path": "examples/svm/plot_rbf_parameters.py",
      "start_line": 74,
      "end_line": 160,
      "tokens": 732,
      "context_length": 16873
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC._validate_targets_BaseSVC._validate_targets.7.1",
      "distance": 1.2124934196472168,
      "file_path": "sklearn/svm/base.py",
      "start_line": 513,
      "end_line": 525,
      "tokens": 138,
      "context_length": 17011,
      "file_pos": 19
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/weight_boosting.py_AdaBoostClassifier.staged_decision_function_AdaBoostClassifier.staged_decision_function.8.4.4.1",
      "distance": 1.217012643814087,
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "start_line": 699,
      "end_line": 750,
      "tokens": 441,
      "context_length": 17452
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_bias_variance.py_1_2",
      "distance": 1.2171036005020142,
      "file_path": "examples/ensemble/plot_bias_variance.py",
      "start_line": 1,
      "end_line": 64,
      "tokens": 761,
      "context_length": 18213
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/tree/tree.py_BaseDecisionTree.fit.28_BaseDecisionTree.fit.55",
      "distance": 1.2172813415527344,
      "file_path": "sklearn/tree/tree.py",
      "start_line": 278,
      "end_line": 363,
      "tokens": 800,
      "context_length": 19013
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/weight_boosting.py_AdaBoostClassifier.decision_function_AdaBoostClassifier.decision_function.9.1",
      "distance": 1.2204395532608032,
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "start_line": 659,
      "end_line": 697,
      "tokens": 370,
      "context_length": 19383
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_LinearSVC.1_LinearSVC.1",
      "distance": 1.2209594249725342,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 15,
      "end_line": 171,
      "tokens": 1643,
      "context_length": 21026,
      "file_pos": 21
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.3.2",
      "distance": 1.2213318347930908,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1907,
      "end_line": 1951,
      "tokens": 472,
      "context_length": 21498
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_svm_anova.py_1_",
      "distance": 1.2215150594711304,
      "file_path": "examples/svm/plot_svm_anova.py",
      "start_line": 1,
      "end_line": 57,
      "tokens": 458,
      "context_length": 21956
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_rbf_parameters.py_60_",
      "distance": 1.2221925258636475,
      "file_path": "examples/svm/plot_rbf_parameters.py",
      "start_line": 161,
      "end_line": 202,
      "tokens": 453,
      "context_length": 22409
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM._validate_for_predict_BaseLibSVM._validate_for_predict.8.1",
      "distance": 1.2225664854049683,
      "file_path": "sklearn/svm/base.py",
      "start_line": 450,
      "end_line": 475,
      "tokens": 275,
      "context_length": 22684,
      "file_pos": 22
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/examples/plot_kernel_ridge_regression.py_31_kr_70.1",
      "distance": 1.2252334356307983,
      "file_path": "examples/plot_kernel_ridge_regression.py",
      "start_line": 80,
      "end_line": 153,
      "tokens": 738,
      "context_length": 23422
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_BaseSearchCV.decision_function_BaseSearchCV.decision_function.3.1",
      "distance": 1.2255096435546875,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 493,
      "end_line": 508,
      "tokens": 130,
      "context_length": 23552,
      "file_pos": 23
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_SVR._impl_SVR.__init__.1",
      "distance": 1.2255586385726929,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 910,
      "end_line": 920,
      "tokens": 161,
      "context_length": 23713,
      "file_pos": 23
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/classification.py_hinge_loss.2_hinge_loss.10.1",
      "distance": 1.225874662399292,
      "file_path": "sklearn/metrics/classification.py",
      "start_line": 2263,
      "end_line": 2301,
      "tokens": 383,
      "context_length": 24096
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_discretization_classification.py_1_classifiers.1",
      "distance": 1.227218747138977,
      "file_path": "examples/preprocessing/plot_discretization_classification.py",
      "start_line": 1,
      "end_line": 89,
      "tokens": 793,
      "context_length": 24889
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/examples/decomposition/plot_pca_vs_fa_model_selection.py_32_",
      "distance": 1.2273133993148804,
      "file_path": "examples/decomposition/plot_pca_vs_fa_model_selection.py",
      "start_line": 88,
      "end_line": 126,
      "tokens": 437,
      "context_length": 25326
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py__ConstantPredictor__ConstantPredictor.predict_proba.2.1",
      "distance": 1.2276861667633057,
      "file_path": "sklearn/multiclass.py",
      "start_line": 110,
      "end_line": 130,
      "tokens": 137,
      "context_length": 25463
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/tree/tree.py_BaseDecisionTree.fit.17_BaseDecisionTree.fit.27.3.1",
      "distance": 1.2343884706497192,
      "file_path": "sklearn/tree/tree.py",
      "start_line": 203,
      "end_line": 276,
      "tokens": 816,
      "context_length": 26279
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_OneClassSVM.predict_",
      "distance": 1.2351762056350708,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 1223,
      "end_line": 1242,
      "tokens": 138,
      "context_length": 26417,
      "file_pos": 26
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_svm_scale_c.py_1_17",
      "distance": 1.2366739511489868,
      "file_path": "examples/svm/plot_svm_scale_c.py",
      "start_line": 1,
      "end_line": 102,
      "tokens": 763,
      "context_length": 27180
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py__enforce_prediction_order__enforce_prediction_order.3.1",
      "distance": 1.236850619316101,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 884,
      "end_line": 938,
      "tokens": 538,
      "context_length": 27718
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/bagging.py__parallel_decision_function__parallel_predict_regression.2.1",
      "distance": 1.2374391555786133,
      "file_path": "sklearn/ensemble/bagging.py",
      "start_line": 170,
      "end_line": 181,
      "tokens": 104,
      "context_length": 27822
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_iris_svc.py_plot_contours_plot_contours.5.1",
      "distance": 1.2381072044372559,
      "file_path": "examples/svm/plot_iris_svc.py",
      "start_line": 63,
      "end_line": 77,
      "tokens": 114,
      "context_length": 27936
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_LinearSVR.fit_SVC",
      "distance": 1.2384400367736816,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 376,
      "end_line": 622,
      "tokens": 481,
      "context_length": 28417,
      "file_pos": 29
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_outliers_fit_predict_check_outliers_fit_predict.n_samples.15.expected_outliers.12.2",
      "distance": 1.2387924194335938,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2390,
      "end_line": 2434,
      "tokens": 427,
      "context_length": 28844
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_isolation_forest.py_19_",
      "distance": 1.240096092224121,
      "file_path": "benchmarks/bench_isolation_forest.py",
      "start_line": 54,
      "end_line": 161,
      "tokens": 1032,
      "context_length": 29876
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM._sparse_decision_function_BaseLibSVM._sparse_decision_function.5.1",
      "distance": 1.2405309677124023,
      "file_path": "sklearn/svm/base.py",
      "start_line": 428,
      "end_line": 448,
      "tokens": 205,
      "context_length": 30081,
      "file_pos": 30
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py__fit_and_predict__fit_and_predict.11.1",
      "distance": 1.241792917251587,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 815,
      "end_line": 881,
      "tokens": 518,
      "context_length": 30599
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_lasso_model_selection.py_31_",
      "distance": 1.243241310119629,
      "file_path": "examples/linear_model/plot_lasso_model_selection.py",
      "start_line": 95,
      "end_line": 159,
      "tokens": 513,
      "context_length": 31112
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC_BaseSVC.__init__.2",
      "distance": 1.2446224689483643,
      "file_path": "sklearn/svm/base.py",
      "start_line": 499,
      "end_line": 511,
      "tokens": 168,
      "context_length": 31280,
      "file_pos": 31
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_np_LIBSVM_IMPL.1",
      "distance": 1.2450330257415771,
      "file_path": "sklearn/svm/base.py",
      "start_line": 1,
      "end_line": 21,
      "tokens": 187,
      "context_length": 31467,
      "file_pos": 31
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py_HistGradientBoostingClassifier.decision_function_HistGradientBoostingClassifier.decision_function.4.1",
      "distance": 1.2453064918518066,
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "start_line": 820,
      "end_line": 839,
      "tokens": 156,
      "context_length": 31623
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_voting_regressor.py_1_",
      "distance": 1.2474586963653564,
      "file_path": "examples/ensemble/plot_voting_regressor.py",
      "start_line": 1,
      "end_line": 54,
      "tokens": 363,
      "context_length": 31986
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM.predict_BaseLibSVM.predict.4.1",
      "distance": 1.248105764389038,
      "file_path": "sklearn/svm/base.py",
      "start_line": 307,
      "end_line": 324,
      "tokens": 152,
      "context_length": 32138,
      "file_pos": 33
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_cv_indices.py_41_",
      "distance": 1.2490177154541016,
      "file_path": "examples/model_selection/plot_cv_indices.py",
      "start_line": 105,
      "end_line": 150,
      "tokens": 381,
      "context_length": 32519
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_GradientBoostingClassifier.decision_function_GradientBoostingClassifier.decision_function.5.1",
      "distance": 1.2492599487304688,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 2069,
      "end_line": 2092,
      "tokens": 229,
      "context_length": 32748
    }
  ],
  "files": [
    {
      "file_path": "benchmarks/bench_20newsgroups.py",
      "position": 1,
      "tokens": 778,
      "context_length": 778
    },
    {
      "file_path": "sklearn/utils/multiclass.py",
      "position": 2,
      "tokens": 3876,
      "context_length": 4654
    },
    {
      "file_path": "sklearn/svm/base.py",
      "position": 3,
      "tokens": 8216,
      "context_length": 12870
    },
    {
      "file_path": "sklearn/multiclass.py",
      "position": 4,
      "tokens": 6442,
      "context_length": 19312
    },
    {
      "file_path": "sklearn/svm/classes.py",
      "position": 5,
      "tokens": 11576,
      "context_length": 30888
    },
    {
      "file_path": "examples/ensemble/plot_voting_decision_regions.py",
      "position": 6,
      "tokens": 644,
      "context_length": 31532
    },
    {
      "file_path": "sklearn/multioutput.py",
      "position": 7,
      "tokens": 5601,
      "context_length": 37133
    },
    {
      "file_path": "benchmarks/bench_saga.py",
      "position": 8,
      "tokens": 2466,
      "context_length": 39599
    },
    {
      "file_path": "sklearn/tree/tree.py",
      "position": 9,
      "tokens": 13539,
      "context_length": 53138
    },
    {
      "file_path": "examples/classification/plot_classifier_comparison.py",
      "position": 10,
      "tokens": 1352,
      "context_length": 54490
    },
    {
      "file_path": "examples/svm/plot_svm_nonlinear.py",
      "position": 11,
      "tokens": 318,
      "context_length": 54808
    },
    {
      "file_path": "examples/semi_supervised/plot_label_propagation_versus_svm_iris.py",
      "position": 12,
      "tokens": 717,
      "context_length": 55525
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 13,
      "tokens": 21976,
      "context_length": 77501
    },
    {
      "file_path": "sklearn/metrics/scorer.py",
      "position": 14,
      "tokens": 4441,
      "context_length": 81942
    },
    {
      "file_path": "examples/svm/plot_separating_hyperplane_unbalanced.py",
      "position": 15,
      "tokens": 648,
      "context_length": 82590
    },
    {
      "file_path": "examples/plot_kernel_ridge_regression.py",
      "position": 16,
      "tokens": 1720,
      "context_length": 84310
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 17,
      "tokens": 13928,
      "context_length": 98238
    },
    {
      "file_path": "examples/svm/plot_iris_svc.py",
      "position": 18,
      "tokens": 979,
      "context_length": 99217
    },
    {
      "file_path": "examples/svm/plot_rbf_parameters.py",
      "position": 19,
      "tokens": 1982,
      "context_length": 101199
    },
    {
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "position": 20,
      "tokens": 9116,
      "context_length": 110315
    },
    {
      "file_path": "examples/ensemble/plot_bias_variance.py",
      "position": 21,
      "tokens": 1814,
      "context_length": 112129
    },
    {
      "file_path": "examples/svm/plot_svm_anova.py",
      "position": 22,
      "tokens": 458,
      "context_length": 112587
    },
    {
      "file_path": "sklearn/model_selection/_search.py",
      "position": 23,
      "tokens": 13367,
      "context_length": 125954
    },
    {
      "file_path": "sklearn/metrics/classification.py",
      "position": 24,
      "tokens": 22362,
      "context_length": 148316
    },
    {
      "file_path": "examples/preprocessing/plot_discretization_classification.py",
      "position": 25,
      "tokens": 1846,
      "context_length": 150162
    },
    {
      "file_path": "examples/decomposition/plot_pca_vs_fa_model_selection.py",
      "position": 26,
      "tokens": 1121,
      "context_length": 151283
    },
    {
      "file_path": "examples/svm/plot_svm_scale_c.py",
      "position": 27,
      "tokens": 1346,
      "context_length": 152629
    },
    {
      "file_path": "sklearn/model_selection/_validation.py",
      "position": 28,
      "tokens": 13553,
      "context_length": 166182
    },
    {
      "file_path": "sklearn/ensemble/bagging.py",
      "position": 29,
      "tokens": 7984,
      "context_length": 174166
    },
    {
      "file_path": "benchmarks/bench_isolation_forest.py",
      "position": 30,
      "tokens": 1468,
      "context_length": 175634
    },
    {
      "file_path": "examples/linear_model/plot_lasso_model_selection.py",
      "position": 31,
      "tokens": 1370,
      "context_length": 177004
    },
    {
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "position": 32,
      "tokens": 8098,
      "context_length": 185102
    },
    {
      "file_path": "examples/ensemble/plot_voting_regressor.py",
      "position": 33,
      "tokens": 363,
      "context_length": 185465
    },
    {
      "file_path": "examples/model_selection/plot_cv_indices.py",
      "position": 34,
      "tokens": 1315,
      "context_length": 186780
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 35,
      "tokens": 21490,
      "context_length": 208270
    }
  ]
}