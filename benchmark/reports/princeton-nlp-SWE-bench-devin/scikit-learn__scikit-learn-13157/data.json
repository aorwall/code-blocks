{
  "instance_id": "scikit-learn__scikit-learn-13157",
  "model_patch": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex 71e12985d..29c1e8161 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -363,7 +363,7 @@ class RegressorMixin:\n \n         from .metrics import r2_score\n         return r2_score(y, self.predict(X), sample_weight=sample_weight,\n-                        multioutput='variance_weighted')\n+                        multioutput='uniform_average')\n \n \n class ClusterMixin:\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/base.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "85440978f517118e78dc15f84e397d50d14c8097",
  "patch": "diff --git a/sklearn/base.py b/sklearn/base.py\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -359,10 +359,32 @@ def score(self, X, y, sample_weight=None):\n         -------\n         score : float\n             R^2 of self.predict(X) wrt. y.\n+\n+        Notes\n+        -----\n+        The R2 score used when calling ``score`` on a regressor will use\n+        ``multioutput='uniform_average'`` from version 0.23 to keep consistent\n+        with `metrics.r2_score`. This will influence the ``score`` method of\n+        all the multioutput regressors (except for\n+        `multioutput.MultiOutputRegressor`). To use the new default, please\n+        either call `metrics.r2_score` directly or make a custom scorer with\n+        `metric.make_scorer`.\n         \"\"\"\n \n         from .metrics import r2_score\n-        return r2_score(y, self.predict(X), sample_weight=sample_weight,\n+        from .metrics.regression import _check_reg_targets\n+        y_pred = self.predict(X)\n+        # XXX: Remove the check in 0.23\n+        y_type, _, _, _ = _check_reg_targets(y, y_pred, None)\n+        if y_type == 'continuous-multioutput':\n+            warnings.warn(\"The default value of multioutput (not exposed in \"\n+                          \"score method) will change from 'variance_weighted' \"\n+                          \"to 'uniform_average' in 0.23 to keep consistent \"\n+                          \"with 'metrics.r2_score'. To use the new default, \"\n+                          \"please either call 'metrics.r2_score' directly or \"\n+                          \"make a custom scorer with 'metric.make_scorer'.\",\n+                          FutureWarning)\n+        return r2_score(y, y_pred, sample_weight=sample_weight,\n                         multioutput='variance_weighted')\n \n \ndiff --git a/sklearn/linear_model/coordinate_descent.py b/sklearn/linear_model/coordinate_descent.py\n--- a/sklearn/linear_model/coordinate_descent.py\n+++ b/sklearn/linear_model/coordinate_descent.py\n@@ -2247,9 +2247,10 @@ class MultiTaskLassoCV(LinearModelCV, RegressorMixin):\n     --------\n     >>> from sklearn.linear_model import MultiTaskLassoCV\n     >>> from sklearn.datasets import make_regression\n+    >>> from sklearn.metrics import r2_score\n     >>> X, y = make_regression(n_targets=2, noise=4, random_state=0)\n     >>> reg = MultiTaskLassoCV(cv=5, random_state=0).fit(X, y)\n-    >>> reg.score(X, y) # doctest: +ELLIPSIS\n+    >>> r2_score(y, reg.predict(X)) # doctest: +ELLIPSIS\n     0.9994...\n     >>> reg.alpha_\n     0.5713...\ndiff --git a/sklearn/multioutput.py b/sklearn/multioutput.py\n--- a/sklearn/multioutput.py\n+++ b/sklearn/multioutput.py\n@@ -256,6 +256,7 @@ def partial_fit(self, X, y, sample_weight=None):\n         super().partial_fit(\n             X, y, sample_weight=sample_weight)\n \n+    # XXX Remove this method in 0.23\n     def score(self, X, y, sample_weight=None):\n         \"\"\"Returns the coefficient of determination R^2 of the prediction.\n \n",
  "test_patch": "diff --git a/sklearn/cross_decomposition/tests/test_pls.py b/sklearn/cross_decomposition/tests/test_pls.py\n--- a/sklearn/cross_decomposition/tests/test_pls.py\n+++ b/sklearn/cross_decomposition/tests/test_pls.py\n@@ -1,3 +1,4 @@\n+import pytest\n import numpy as np\n from numpy.testing import assert_approx_equal\n \n@@ -377,6 +378,7 @@ def test_pls_errors():\n                              clf.fit, X, Y)\n \n \n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n def test_pls_scaling():\n     # sanity check for scale=True\n     n_samples = 1000\ndiff --git a/sklearn/linear_model/tests/test_coordinate_descent.py b/sklearn/linear_model/tests/test_coordinate_descent.py\n--- a/sklearn/linear_model/tests/test_coordinate_descent.py\n+++ b/sklearn/linear_model/tests/test_coordinate_descent.py\n@@ -232,6 +232,7 @@ def test_lasso_path_return_models_vs_new_return_gives_same_coefficients():\n \n \n @pytest.mark.filterwarnings('ignore: The default value of cv')  # 0.22\n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n def test_enet_path():\n     # We use a large number of samples and of informative features so that\n     # the l1_ratio selected is more toward ridge than lasso\ndiff --git a/sklearn/linear_model/tests/test_ransac.py b/sklearn/linear_model/tests/test_ransac.py\n--- a/sklearn/linear_model/tests/test_ransac.py\n+++ b/sklearn/linear_model/tests/test_ransac.py\n@@ -1,3 +1,4 @@\n+import pytest\n import numpy as np\n from scipy import sparse\n \n@@ -333,6 +334,7 @@ def test_ransac_min_n_samples():\n     assert_raises(ValueError, ransac_estimator7.fit, X, y)\n \n \n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n def test_ransac_multi_dimensional_targets():\n \n     base_estimator = LinearRegression()\n@@ -353,6 +355,7 @@ def test_ransac_multi_dimensional_targets():\n     assert_equal(ransac_estimator.inlier_mask_, ref_inlier_mask)\n \n \n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n def test_ransac_residual_loss():\n     loss_multi1 = lambda y_true, y_pred: np.sum(np.abs(y_true - y_pred), axis=1)\n     loss_multi2 = lambda y_true, y_pred: np.sum((y_true - y_pred) ** 2, axis=1)\ndiff --git a/sklearn/linear_model/tests/test_ridge.py b/sklearn/linear_model/tests/test_ridge.py\n--- a/sklearn/linear_model/tests/test_ridge.py\n+++ b/sklearn/linear_model/tests/test_ridge.py\n@@ -490,6 +490,7 @@ def check_dense_sparse(test_func):\n \n @pytest.mark.filterwarnings('ignore: The default of the `iid`')  # 0.22\n @pytest.mark.filterwarnings('ignore: The default value of cv')  # 0.22\n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n @pytest.mark.parametrize(\n         'test_func',\n         (_test_ridge_loo, _test_ridge_cv, _test_ridge_cv_normalize,\ndiff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py\n--- a/sklearn/model_selection/tests/test_search.py\n+++ b/sklearn/model_selection/tests/test_search.py\n@@ -1313,6 +1313,7 @@ def test_pickle():\n \n @pytest.mark.filterwarnings('ignore: The default of the `iid`')  # 0.22\n @pytest.mark.filterwarnings('ignore: The default value of n_split')  # 0.22\n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n def test_grid_search_with_multioutput_data():\n     # Test search with multi-output estimator\n \ndiff --git a/sklearn/neural_network/tests/test_mlp.py b/sklearn/neural_network/tests/test_mlp.py\n--- a/sklearn/neural_network/tests/test_mlp.py\n+++ b/sklearn/neural_network/tests/test_mlp.py\n@@ -5,6 +5,7 @@\n # Author: Issam H. Laradji\n # License: BSD 3 clause\n \n+import pytest\n import sys\n import warnings\n \n@@ -308,6 +309,7 @@ def test_multilabel_classification():\n     assert_greater(mlp.score(X, y), 0.9)\n \n \n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n def test_multioutput_regression():\n     # Test that multi-output regression works as expected\n     X, y = make_regression(n_samples=200, n_targets=5)\ndiff --git a/sklearn/tests/test_base.py b/sklearn/tests/test_base.py\n--- a/sklearn/tests/test_base.py\n+++ b/sklearn/tests/test_base.py\n@@ -486,3 +486,23 @@ def test_tag_inheritance():\n     diamond_tag_est = DiamondOverwriteTag()\n     with pytest.raises(TypeError, match=\"Inconsistent values for tag\"):\n         diamond_tag_est._get_tags()\n+\n+\n+# XXX: Remove in 0.23\n+def test_regressormixin_score_multioutput():\n+    from sklearn.linear_model import LinearRegression\n+    # no warnings when y_type is continuous\n+    X = [[1], [2], [3]]\n+    y = [1, 2, 3]\n+    reg = LinearRegression().fit(X, y)\n+    assert_no_warnings(reg.score, X, y)\n+    # warn when y_type is continuous-multioutput\n+    y = [[1, 2], [2, 3], [3, 4]]\n+    reg = LinearRegression().fit(X, y)\n+    msg = (\"The default value of multioutput (not exposed in \"\n+           \"score method) will change from 'variance_weighted' \"\n+           \"to 'uniform_average' in 0.23 to keep consistent \"\n+           \"with 'metrics.r2_score'. To use the new default, \"\n+           \"please either call 'metrics.r2_score' directly or \"\n+           \"make a custom scorer with 'metric.make_scorer'.\")\n+    assert_warns_message(FutureWarning, msg, reg.score, X, y)\ndiff --git a/sklearn/tests/test_dummy.py b/sklearn/tests/test_dummy.py\n--- a/sklearn/tests/test_dummy.py\n+++ b/sklearn/tests/test_dummy.py\n@@ -675,6 +675,7 @@ def test_dummy_regressor_return_std():\n     assert_array_equal(y_pred_list[1], y_std_expected)\n \n \n+@pytest.mark.filterwarnings('ignore: The default value of multioutput')  # 0.23\n @pytest.mark.parametrize(\"y,y_test\", [\n     ([1, 1, 1, 2], [1.25] * 4),\n     (np.array([[2, 2],\n",
  "problem_statement": "Different r2_score multioutput default in r2_score and base.RegressorMixin\nWe've changed multioutput default in r2_score to \"uniform_average\" in 0.19, but in base.RegressorMixin, we still use ``multioutput='variance_weighted'`` (#5143).\r\nAlso see the strange things below:\r\nhttps://github.com/scikit-learn/scikit-learn/blob/4603e481e9ac67eaf906ae5936263b675ba9bc9c/sklearn/multioutput.py#L283-L286\n",
  "hints_text": "Should we be deprecating and changing the `multioutput` used in RegressorMixin? How do we allow the user to select the new approach in a deprecation period?\n@agramfort @ogrisel can you explain the rational behind this?\r\nIt looks to me like the behavior before the PR was exactly what we wanted an the PR broke the deprecation which requires us to do another deprecation cycle?\nI vote +1 to deprecat and change the multioutput used in RegressorMixin. It seems misleading that r2_score and RegressorMixin have different defaults.\r\nBut yes, the deprecation is not easy. Maybe we can just warn and change the behavior after 2 versions.\nAnd can someone tell me the difference between these two multioutput choices (e..g, why do you prefer uniform_average)? Seems that the deprecation is introduced in https://github.com/scikit-learn/scikit-learn/commit/1b1e10c3251bda9240f115123f6c17c8fde50e35 and I can't find relevant discussions.",
  "created_at": "2019-02-13T12:55:30Z",
  "version": "0.21",
  "FAIL_TO_PASS": "[\"sklearn/tests/test_base.py::test_regressormixin_score_multioutput\"]",
  "PASS_TO_PASS": "[\"sklearn/cross_decomposition/tests/test_pls.py::test_PLSSVD\", \"sklearn/cross_decomposition/tests/test_pls.py::test_convergence_fail\", \"sklearn/cross_decomposition/tests/test_pls.py::test_pls\", \"sklearn/cross_decomposition/tests/test_pls.py::test_pls_errors\", \"sklearn/cross_decomposition/tests/test_pls.py::test_pls_scaling\", \"sklearn/cross_decomposition/tests/test_pls.py::test_predict_transform_copy\", \"sklearn/cross_decomposition/tests/test_pls.py::test_univariate_pls_regression\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_1d_multioutput_enet_and_multitask_enet_cv\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_1d_multioutput_lasso_and_multitask_lasso_cv\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_check_input_false\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_coef_shape_not_zero\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_convergence_warnings\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_coordinate_descent[Lasso-1-kwargs0]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_coordinate_descent[Lasso-1-kwargs1]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_coordinate_descent[MultiTaskLasso-2-kwargs2]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_coordinate_descent[MultiTaskLasso-2-kwargs3]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_copy_X_False_check_input_False\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_copy_X_True[False]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_copy_X_True[True]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_cv_positive_constraint\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_float_precision\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_l1_ratio\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_multitarget\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_positive_constraint\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_alpha_warning\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_cv\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_cv_positive_constraint\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_cv_with_some_model_selection\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_non_float_y[ElasticNet]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_non_float_y[Lasso]\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_path_return_models_vs_new_return_gives_same_coefficients\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_positive_constraint\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_readonly_data\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_toy\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_lasso_zero\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_readonly_data\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multioutput_enetcv_error\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multitask_enet_and_lasso_cv\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_overrided_gram_matrix\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_path_parameters\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_precompute_invalid_argument\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_random_descent\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_sparse_dense_descent_paths\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_sparse_input_convergence_warning\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_sparse_input_dtype_enet_and_lassocv\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_uniform_targets\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_warm_start\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_warm_start_convergence\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_warm_start_convergence_with_regularizer_decrement\", \"sklearn/linear_model/tests/test_coordinate_descent.py::test_warm_start_multitask_lasso\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_default_residual_threshold\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_dynamic_max_trials\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_exceed_max_skips\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_fit_sample_weight\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_inliers_outliers\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_is_data_valid\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_is_model_valid\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_max_trials\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_min_n_samples\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_multi_dimensional_targets\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_no_valid_data\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_no_valid_model\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_none_estimator\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_predict\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_resid_thresh_no_inliers\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_residual_loss\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_score\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_sparse_coo\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_sparse_csc\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_sparse_csr\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_stop_n_inliers\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_stop_score\", \"sklearn/linear_model/tests/test_ransac.py::test_ransac_warn_exceed_max_skips\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight[RidgeClassifierCV]\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight[RidgeClassifier]\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights_cv\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_multi_ridge_diabetes]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_classifiers]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_cv]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_cv_normalize]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_diabetes]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_loo]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_tolerance]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match_cholesky\", \"sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_helper\", \"sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_svd_helper\", \"sklearn/linear_model/tests/test_ridge.py::test_n_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_primal_dual_relationship\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_sample_weights_greater_than_1d\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_solver_not_supported\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[sag]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_cv_store_cv_values\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_no_support_multilabel\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_cv_sparse_svd\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_individual_penalties\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_intercept\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_convergence_fail\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_shapes\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_singular\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sparse_svd\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_vs_lstsq\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_int_alphas\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_negative_alphas\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_sample_weight\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_store_cv_values\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_cg_max_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_design_with_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_toy_ridge_object\", \"sklearn/model_selection/tests/test_search.py::test_X_as_list\", \"sklearn/model_selection/tests/test_search.py::test__custom_fit_no_run_search\", \"sklearn/model_selection/tests/test_search.py::test_classes__property\", \"sklearn/model_selection/tests/test_search.py::test_custom_run_search\", \"sklearn/model_selection/tests/test_search.py::test_deprecated_grid_search_iid\", \"sklearn/model_selection/tests/test_search.py::test_empty_cv_iterator_error\", \"sklearn/model_selection/tests/test_search.py::test_fit_grid_point\", \"sklearn/model_selection/tests/test_search.py::test_grid_search\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_allows_nans\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_bad_param_grid\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_correct_score_results\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_results\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_results_multimetric\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_splits_consistency\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_error\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_failing_classifier\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_failing_classifier_raise\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_groups\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_no_score\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_one_grid_point\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_precomputed_kernel\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_precomputed_kernel_error_nonsquare\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_score_method\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_sparse\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_sparse_scoring\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_when_param_grid_includes_range\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_with_fit_params\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_with_multioutput_data\", \"sklearn/model_selection/tests/test_search.py::test_gridsearch_nd\", \"sklearn/model_selection/tests/test_search.py::test_gridsearch_no_predict\", \"sklearn/model_selection/tests/test_search.py::test_no_refit\", \"sklearn/model_selection/tests/test_search.py::test_pandas_input\", \"sklearn/model_selection/tests/test_search.py::test_param_sampler\", \"sklearn/model_selection/tests/test_search.py::test_parameter_grid\", \"sklearn/model_selection/tests/test_search.py::test_parameters_sampler_replacement\", \"sklearn/model_selection/tests/test_search.py::test_pickle\", \"sklearn/model_selection/tests/test_search.py::test_predict_proba_disabled\", \"sklearn/model_selection/tests/test_search.py::test_random_search_bad_cv\", \"sklearn/model_selection/tests/test_search.py::test_random_search_cv_results\", \"sklearn/model_selection/tests/test_search.py::test_random_search_cv_results_multimetric\", \"sklearn/model_selection/tests/test_search.py::test_random_search_with_fit_params\", \"sklearn/model_selection/tests/test_search.py::test_refit\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_invalid_type\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_multi_metric\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[GridSearchCV--1]\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[GridSearchCV-2]\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[RandomizedSearchCV--1]\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[RandomizedSearchCV-2]\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_results_none_param\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_results_rank_tie_breaking\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_timing\", \"sklearn/model_selection/tests/test_search.py::test_search_iid_param\", \"sklearn/model_selection/tests/test_search.py::test_search_train_scores_set_to_false\", \"sklearn/model_selection/tests/test_search.py::test_stochastic_gradient_loss_param\", \"sklearn/model_selection/tests/test_search.py::test_transform_inverse_transform_round_trip\", \"sklearn/model_selection/tests/test_search.py::test_trivial_cv_results_attr\", \"sklearn/model_selection/tests/test_search.py::test_unsupervised_grid_search\", \"sklearn/model_selection/tests/test_search.py::test_validate_parameter_grid_input[0-TypeError-Parameter\", \"sklearn/model_selection/tests/test_search.py::test_validate_parameter_grid_input[input1-TypeError-Parameter\", \"sklearn/model_selection/tests/test_search.py::test_validate_parameter_grid_input[input2-TypeError-Parameter\", \"sklearn/model_selection/tests/test_search.py::test_y_as_list\", \"sklearn/neural_network/tests/test_mlp.py::test_adaptive_learning_rate\", \"sklearn/neural_network/tests/test_mlp.py::test_alpha\", \"sklearn/neural_network/tests/test_mlp.py::test_early_stopping\", \"sklearn/neural_network/tests/test_mlp.py::test_fit\", \"sklearn/neural_network/tests/test_mlp.py::test_gradient\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_classification\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_regression\", \"sklearn/neural_network/tests/test_mlp.py::test_learning_rate_warmstart\", \"sklearn/neural_network/tests/test_mlp.py::test_multilabel_classification\", \"sklearn/neural_network/tests/test_mlp.py::test_multioutput_regression\", \"sklearn/neural_network/tests/test_mlp.py::test_n_iter_no_change\", \"sklearn/neural_network/tests/test_mlp.py::test_n_iter_no_change_inf\", \"sklearn/neural_network/tests/test_mlp.py::test_params_errors\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_classes_error\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_classification\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_errors\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_regression\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_unseen_classes\", \"sklearn/neural_network/tests/test_mlp.py::test_predict_proba_binary\", \"sklearn/neural_network/tests/test_mlp.py::test_predict_proba_multiclass\", \"sklearn/neural_network/tests/test_mlp.py::test_predict_proba_multilabel\", \"sklearn/neural_network/tests/test_mlp.py::test_shuffle\", \"sklearn/neural_network/tests/test_mlp.py::test_sparse_matrices\", \"sklearn/neural_network/tests/test_mlp.py::test_tolerance\", \"sklearn/neural_network/tests/test_mlp.py::test_verbose_sgd\", \"sklearn/neural_network/tests/test_mlp.py::test_warm_start\", \"sklearn/tests/test_base.py::test_clone\", \"sklearn/tests/test_base.py::test_clone_2\", \"sklearn/tests/test_base.py::test_clone_buggy\", \"sklearn/tests/test_base.py::test_clone_empty_array\", \"sklearn/tests/test_base.py::test_clone_estimator_types\", \"sklearn/tests/test_base.py::test_clone_nan\", \"sklearn/tests/test_base.py::test_clone_pandas_dataframe\", \"sklearn/tests/test_base.py::test_clone_sparse_matrices\", \"sklearn/tests/test_base.py::test_get_params\", \"sklearn/tests/test_base.py::test_is_classifier\", \"sklearn/tests/test_base.py::test_pickle_version_no_warning_is_issued_with_non_sklearn_estimator\", \"sklearn/tests/test_base.py::test_pickle_version_warning_is_issued_upon_different_version\", \"sklearn/tests/test_base.py::test_pickle_version_warning_is_issued_when_no_version_info_in_pickle\", \"sklearn/tests/test_base.py::test_pickle_version_warning_is_not_raised_with_matching_version\", \"sklearn/tests/test_base.py::test_pickling_when_getstate_is_overwritten_by_mixin\", \"sklearn/tests/test_base.py::test_pickling_when_getstate_is_overwritten_by_mixin_outside_of_sklearn\", \"sklearn/tests/test_base.py::test_pickling_works_when_getstate_is_overwritten_in_the_child_class\", \"sklearn/tests/test_base.py::test_repr\", \"sklearn/tests/test_base.py::test_score_sample_weight\", \"sklearn/tests/test_base.py::test_set_params\", \"sklearn/tests/test_base.py::test_set_params_passes_all_parameters\", \"sklearn/tests/test_base.py::test_set_params_updates_valid_params\", \"sklearn/tests/test_base.py::test_str\", \"sklearn/tests/test_base.py::test_tag_inheritance\", \"sklearn/tests/test_dummy.py::test_classification_sample_weight\", \"sklearn/tests/test_dummy.py::test_classifier_exceptions\", \"sklearn/tests/test_dummy.py::test_classifier_prediction_independent_of_X[constant]\", \"sklearn/tests/test_dummy.py::test_classifier_prediction_independent_of_X[most_frequent]\", \"sklearn/tests/test_dummy.py::test_classifier_prediction_independent_of_X[prior]\", \"sklearn/tests/test_dummy.py::test_classifier_prediction_independent_of_X[stratified]\", \"sklearn/tests/test_dummy.py::test_classifier_prediction_independent_of_X[uniform]\", \"sklearn/tests/test_dummy.py::test_classifier_score_with_None[y0-y_test0]\", \"sklearn/tests/test_dummy.py::test_classifier_score_with_None[y1-y_test1]\", \"sklearn/tests/test_dummy.py::test_constant_size_multioutput_regressor\", \"sklearn/tests/test_dummy.py::test_constant_strategy\", \"sklearn/tests/test_dummy.py::test_constant_strategy_exceptions\", \"sklearn/tests/test_dummy.py::test_constant_strategy_multioutput\", \"sklearn/tests/test_dummy.py::test_constant_strategy_multioutput_regressor\", \"sklearn/tests/test_dummy.py::test_constant_strategy_regressor\", \"sklearn/tests/test_dummy.py::test_constant_strategy_sparse_target\", \"sklearn/tests/test_dummy.py::test_constants_not_specified_regressor\", \"sklearn/tests/test_dummy.py::test_dtype_of_classifier_probas[constant]\", \"sklearn/tests/test_dummy.py::test_dtype_of_classifier_probas[most_frequent]\", \"sklearn/tests/test_dummy.py::test_dtype_of_classifier_probas[prior]\", \"sklearn/tests/test_dummy.py::test_dtype_of_classifier_probas[stratified]\", \"sklearn/tests/test_dummy.py::test_dtype_of_classifier_probas[uniform]\", \"sklearn/tests/test_dummy.py::test_dummy_classifier_on_3D_array\", \"sklearn/tests/test_dummy.py::test_dummy_regressor_on_3D_array\", \"sklearn/tests/test_dummy.py::test_dummy_regressor_return_std\", \"sklearn/tests/test_dummy.py::test_dummy_regressor_sample_weight\", \"sklearn/tests/test_dummy.py::test_mean_strategy_multioutput_regressor\", \"sklearn/tests/test_dummy.py::test_mean_strategy_regressor\", \"sklearn/tests/test_dummy.py::test_median_strategy_multioutput_regressor\", \"sklearn/tests/test_dummy.py::test_median_strategy_regressor\", \"sklearn/tests/test_dummy.py::test_most_frequent_and_prior_strategy\", \"sklearn/tests/test_dummy.py::test_most_frequent_and_prior_strategy_multioutput\", \"sklearn/tests/test_dummy.py::test_most_frequent_and_prior_strategy_sparse_target\", \"sklearn/tests/test_dummy.py::test_quantile_invalid\", \"sklearn/tests/test_dummy.py::test_quantile_strategy_empty_train\", \"sklearn/tests/test_dummy.py::test_quantile_strategy_multioutput_regressor\", \"sklearn/tests/test_dummy.py::test_quantile_strategy_regressor\", \"sklearn/tests/test_dummy.py::test_regressor_exceptions\", \"sklearn/tests/test_dummy.py::test_regressor_prediction_independent_of_X[constant]\", \"sklearn/tests/test_dummy.py::test_regressor_prediction_independent_of_X[mean]\", \"sklearn/tests/test_dummy.py::test_regressor_prediction_independent_of_X[median]\", \"sklearn/tests/test_dummy.py::test_regressor_prediction_independent_of_X[quantile]\", \"sklearn/tests/test_dummy.py::test_regressor_score_with_None[y0-y_test0]\", \"sklearn/tests/test_dummy.py::test_regressor_score_with_None[y1-y_test1]\", \"sklearn/tests/test_dummy.py::test_stratified_strategy\", \"sklearn/tests/test_dummy.py::test_stratified_strategy_multioutput\", \"sklearn/tests/test_dummy.py::test_stratified_strategy_sparse_target\", \"sklearn/tests/test_dummy.py::test_string_labels\", \"sklearn/tests/test_dummy.py::test_uniform_strategy\", \"sklearn/tests/test_dummy.py::test_uniform_strategy_multioutput\", \"sklearn/tests/test_dummy.py::test_uniform_strategy_sparse_target_warning\", \"sklearn/tests/test_dummy.py::test_unknown_strategey_regressor\", \"sklearn/tests/test_dummy.py::test_y_mean_attribute_regressor\"]",
  "environment_setup_commit": "7813f7efb5b2012412888b69e73d76f2df2b50b6",
  "patch_files": [
    "sklearn/base.py",
    "sklearn/linear_model/coordinate_descent.py",
    "sklearn/multioutput.py"
  ],
  "test_patch_files": [
    "sklearn/cross_decomposition/tests/test_pls.py",
    "sklearn/linear_model/tests/test_coordinate_descent.py",
    "sklearn/linear_model/tests/test_ransac.py",
    "sklearn/linear_model/tests/test_ridge.py",
    "sklearn/model_selection/tests/test_search.py",
    "sklearn/neural_network/tests/test_mlp.py",
    "sklearn/tests/test_base.py",
    "sklearn/tests/test_dummy.py"
  ],
  "patch_diff_details": {
    "sklearn/base.py": {
      "diffs": [
        {
          "start_line_old": 362,
          "end_line_old": 362,
          "file_pos": 4,
          "file_context_length": 15831,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/base.py_MetaEstimatorMixin_",
          "closest_snippet_line_distance": 185,
          "pos": 12,
          "context_length": 5141
        }
      ]
    },
    "sklearn/linear_model/coordinate_descent.py": {
      "diffs": [
        {
          "start_line_old": 2250,
          "end_line_old": 2250
        }
      ]
    },
    "sklearn/multioutput.py": {
      "diffs": [
        {
          "start_line_old": 259,
          "end_line_old": 259,
          "file_pos": 2,
          "file_context_length": 10845,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputClassifier.score_MultiOutputClassifier._more_tags.2.1",
          "closest_snippet_line_distance": 91,
          "pos": 5,
          "context_length": 1973
        }
      ]
    }
  },
  "vectors": 3229,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/regression.py_r2_score.2_r2_score.17.1",
      "distance": 0.8133002519607544,
      "file_path": "sklearn/metrics/regression.py",
      "start_line": 537,
      "end_line": 584,
      "tokens": 476,
      "context_length": 476
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_1__fit_estimator.3.1",
      "distance": 0.8543586730957031,
      "file_path": "sklearn/multioutput.py",
      "start_line": 1,
      "end_line": 40,
      "tokens": 264,
      "context_length": 740,
      "file_pos": 2
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputClassifier.score_MultiOutputClassifier._more_tags.2.1",
      "distance": 0.862643837928772,
      "file_path": "sklearn/multioutput.py",
      "start_line": 350,
      "end_line": 380,
      "tokens": 248,
      "context_length": 988,
      "file_pos": 2
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_random_forest_regression_multioutput.py_1_",
      "distance": 0.8881227970123291,
      "file_path": "examples/ensemble/plot_random_forest_regression_multioutput.py",
      "start_line": 1,
      "end_line": 78,
      "tokens": 650,
      "context_length": 1638
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputRegressor.score_MultiOutputRegressor.score.4.1",
      "distance": 0.8896276354789734,
      "file_path": "sklearn/multioutput.py",
      "start_line": 259,
      "end_line": 294,
      "tokens": 335,
      "context_length": 1973,
      "file_pos": 3
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/regression.py_r2_score_r2_score.1",
      "distance": 0.9590620994567871,
      "file_path": "sklearn/metrics/regression.py",
      "start_line": 449,
      "end_line": 536,
      "tokens": 785,
      "context_length": 2758
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputRegressor_MultiOutputRegressor.__init__.1",
      "distance": 0.9746821522712708,
      "file_path": "sklearn/multioutput.py",
      "start_line": 203,
      "end_line": 232,
      "tokens": 238,
      "context_length": 2996,
      "file_pos": 3
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputEstimator.predict_MultiOutputEstimator._more_tags.1.1",
      "distance": 0.9765005111694336,
      "file_path": "sklearn/multioutput.py",
      "start_line": 172,
      "end_line": 200,
      "tokens": 218,
      "context_length": 3214,
      "file_pos": 3
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/base.py_MetaEstimatorMixin_",
      "distance": 0.9889743328094482,
      "file_path": "sklearn/base.py",
      "start_line": 547,
      "end_line": 611,
      "tokens": 373,
      "context_length": 3587,
      "file_pos": 4
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py_29_",
      "distance": 1.0107557773590088,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 466,
      "end_line": 540,
      "tokens": 796,
      "context_length": 4383
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_multioutput_estimator_convert_y_2d_check_non_transformer_estimators_n_iter.not_run_check_n_iter.7.6",
      "distance": 1.012871503829956,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2215,
      "end_line": 2256,
      "tokens": 399,
      "context_length": 4782
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/base.py_RegressorMixin_RegressorMixin.score.3.1",
      "distance": 1.0143260955810547,
      "file_path": "sklearn/base.py",
      "start_line": 329,
      "end_line": 366,
      "tokens": 359,
      "context_length": 5141,
      "file_pos": 6
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ransac.py_RANSACRegressor.fit.16_RANSACRegressor.fit.32",
      "distance": 1.0198523998260498,
      "file_path": "sklearn/linear_model/ransac.py",
      "start_line": 327,
      "end_line": 424,
      "tokens": 809,
      "context_length": 5950
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputRegressor.partial_fit_MultiOutputRegressor.partial_fit.2",
      "distance": 1.0204105377197266,
      "file_path": "sklearn/multioutput.py",
      "start_line": 234,
      "end_line": 257,
      "tokens": 178,
      "context_length": 6128,
      "file_pos": 7
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputEstimator.fit_MultiOutputEstimator.fit.8.1",
      "distance": 1.030205488204956,
      "file_path": "sklearn/multioutput.py",
      "start_line": 123,
      "end_line": 170,
      "tokens": 345,
      "context_length": 6473,
      "file_pos": 7
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/regression.py__check_reg_targets__check_reg_targets.12.1",
      "distance": 1.034724473953247,
      "file_path": "sklearn/metrics/regression.py",
      "start_line": 45,
      "end_line": 111,
      "tokens": 590,
      "context_length": 7063
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ransac.py_RANSACRegressor.fit.33_RANSACRegressor.fit.38.1",
      "distance": 1.0370185375213623,
      "file_path": "sklearn/linear_model/ransac.py",
      "start_line": 425,
      "end_line": 454,
      "tokens": 346,
      "context_length": 7409
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/regression.py_explained_variance_score_explained_variance_score.15.1",
      "distance": 1.040654182434082,
      "file_path": "sklearn/metrics/regression.py",
      "start_line": 356,
      "end_line": 446,
      "tokens": 793,
      "context_length": 8202
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputClassifier_MultiOutputClassifier.__init__.1",
      "distance": 1.0414174795150757,
      "file_path": "sklearn/multioutput.py",
      "start_line": 297,
      "end_line": 323,
      "tokens": 212,
      "context_length": 8414,
      "file_pos": 7
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ransac.py_RANSACRegressor.__init___RANSACRegressor.__init__.self.loss.1",
      "distance": 1.050863265991211,
      "file_path": "sklearn/linear_model/ransac.py",
      "start_line": 210,
      "end_line": 228,
      "tokens": 201,
      "context_length": 8615
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py__BaseChain__BaseChain.fit.11.1",
      "distance": 1.0563430786132812,
      "file_path": "sklearn/multioutput.py",
      "start_line": 383,
      "end_line": 452,
      "tokens": 594,
      "context_length": 9209,
      "file_pos": 7
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OneVsRestClassifier.multilabel__OneVsRestClassifier._first_estimator.1.1",
      "distance": 1.0644936561584473,
      "file_path": "sklearn/multiclass.py",
      "start_line": 376,
      "end_line": 411,
      "tokens": 305,
      "context_length": 9514
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/forest.py_ForestRegressor._set_oob_score_RandomForestClassifier",
      "distance": 1.0699517726898193,
      "file_path": "sklearn/ensemble/forest.py",
      "start_line": 707,
      "end_line": 1035,
      "tokens": 350,
      "context_length": 9864
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/dummy.py_DummyRegressor.score_",
      "distance": 1.070375919342041,
      "file_path": "sklearn/dummy.py",
      "start_line": 515,
      "end_line": 552,
      "tokens": 376,
      "context_length": 10240
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/examples/multioutput/plot_classifier_chain_yeast.py_model_scores_",
      "distance": 1.070974588394165,
      "file_path": "examples/multioutput/plot_classifier_chain_yeast.py",
      "start_line": 79,
      "end_line": 112,
      "tokens": 274,
      "context_length": 10514
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_1___all__.1",
      "distance": 1.0722663402557373,
      "file_path": "sklearn/multiclass.py",
      "start_line": 1,
      "end_line": 63,
      "tokens": 484,
      "context_length": 10998
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/examples/tree/plot_tree_regression_multioutput.py_1_",
      "distance": 1.0792348384857178,
      "file_path": "examples/tree/plot_tree_regression_multioutput.py",
      "start_line": 1,
      "end_line": 61,
      "tokens": 567,
      "context_length": 11565
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_selection/rfe.py_RFE._fit_RFE._fit.5",
      "distance": 1.0819076299667358,
      "file_path": "sklearn/feature_selection/rfe.py",
      "start_line": 146,
      "end_line": 227,
      "tokens": 668,
      "context_length": 12233
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/forest.py_BaseForest._set_oob_score_BaseForest._validate_X_predict.3.1",
      "distance": 1.0850706100463867,
      "file_path": "sklearn/ensemble/forest.py",
      "start_line": 345,
      "end_line": 359,
      "tokens": 151,
      "context_length": 12384
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/examples/multioutput/plot_classifier_chain_yeast.py_1_ensemble_jaccard_score.1",
      "distance": 1.0856549739837646,
      "file_path": "examples/multioutput/plot_classifier_chain_yeast.py",
      "start_line": 1,
      "end_line": 77,
      "tokens": 753,
      "context_length": 13137
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_train_check_regressors_train.23.1",
      "distance": 1.1035704612731934,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1829,
      "end_line": 1871,
      "tokens": 469,
      "context_length": 13606
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/base.py_NeighborsBase._check_algorithm_metric_NeighborsBase._check_algorithm_metric.5.1",
      "distance": 1.1054497957229614,
      "file_path": "sklearn/neighbors/base.py",
      "start_line": 122,
      "end_line": 160,
      "tokens": 368,
      "context_length": 13974
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/bagging.py_BaggingRegressor._validate_estimator_",
      "distance": 1.1067720651626587,
      "file_path": "sklearn/ensemble/bagging.py",
      "start_line": 990,
      "end_line": 1020,
      "tokens": 248,
      "context_length": 14222
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ransac.py_1__EPSILON.1",
      "distance": 1.108854055404663,
      "file_path": "sklearn/linear_model/ransac.py",
      "start_line": 1,
      "end_line": 19,
      "tokens": 111,
      "context_length": 14333
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sample_weights_invariance_check_sample_weights_invariance.3.estimator1.10.1.4",
      "distance": 1.1096614599227905,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 587,
      "end_line": 622,
      "tokens": 472,
      "context_length": 14805
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_MultiOutputEstimator_MultiOutputEstimator.partial_fit.7.1",
      "distance": 1.1101739406585693,
      "file_path": "sklearn/multioutput.py",
      "start_line": 62,
      "end_line": 121,
      "tokens": 485,
      "context_length": 15290,
      "file_pos": 15
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_RegressorChain_",
      "distance": 1.1103177070617676,
      "file_path": "sklearn/multioutput.py",
      "start_line": 649,
      "end_line": 733,
      "tokens": 643,
      "context_length": 15933,
      "file_pos": 15
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py_ClassifierChain.decision_function_ClassifierChain._more_tags.1.1",
      "distance": 1.1110032796859741,
      "file_path": "sklearn/multioutput.py",
      "start_line": 613,
      "end_line": 646,
      "tokens": 296,
      "context_length": 16229,
      "file_pos": 15
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/kernel_ridge.py_KernelRidge.__init___KernelRidge._pairwise.1.1",
      "distance": 1.1160106658935547,
      "file_path": "sklearn/kernel_ridge.py",
      "start_line": 108,
      "end_line": 129,
      "tokens": 186,
      "context_length": 16415
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_bias_variance.py_1_2",
      "distance": 1.1186577081680298,
      "file_path": "examples/ensemble/plot_bias_variance.py",
      "start_line": 1,
      "end_line": 64,
      "tokens": 761,
      "context_length": 17176
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py_1_models.1",
      "distance": 1.1216388940811157,
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py",
      "start_line": 1,
      "end_line": 63,
      "tokens": 497,
      "context_length": 17673
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_saga.py__predict_proba_exp.9.1",
      "distance": 1.1223063468933105,
      "file_path": "benchmarks/bench_saga.py",
      "start_line": 107,
      "end_line": 189,
      "tokens": 637,
      "context_length": 18310
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_int_check_regressors_int.18",
      "distance": 1.1250381469726562,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1801,
      "end_line": 1826,
      "tokens": 277,
      "context_length": 18587
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py_1_is_regressor",
      "distance": 1.1265767812728882,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 1,
      "end_line": 43,
      "tokens": 316,
      "context_length": 18903
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/supervised.py_adjusted_mutual_info_score.2_adjusted_mutual_info_score.26.1",
      "distance": 1.1279807090759277,
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "start_line": 728,
      "end_line": 764,
      "tokens": 456,
      "context_length": 19359
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/multioutput.py__partial_fit_estimator__partial_fit_estimator.3.1",
      "distance": 1.1287016868591309,
      "file_path": "sklearn/multioutput.py",
      "start_line": 43,
      "end_line": 59,
      "tokens": 123,
      "context_length": 19482,
      "file_pos": 20
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/regression.py_mean_squared_error_mean_squared_error.6.1",
      "distance": 1.1291468143463135,
      "file_path": "sklearn/metrics/regression.py",
      "start_line": 186,
      "end_line": 252,
      "tokens": 613,
      "context_length": 20095
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py__check_multi_class__check_multi_class.5.1",
      "distance": 1.1293808221817017,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 463,
      "end_line": 483,
      "tokens": 217,
      "context_length": 20312
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_supervised_y_2d_check_supervised_y_2d.17",
      "distance": 1.1298303604125977,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1687,
      "end_line": 1716,
      "tokens": 334,
      "context_length": 20646
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/base.py_NeighborsBase._fit_NeighborsBase._fit.15.3.2.self._fit_method.1",
      "distance": 1.1306103467941284,
      "file_path": "sklearn/neighbors/base.py",
      "start_line": 162,
      "end_line": 247,
      "tokens": 761,
      "context_length": 21407
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OutputCodeClassifier_OutputCodeClassifier.__init__.self.n_jobs.1",
      "distance": 1.1315362453460693,
      "file_path": "sklearn/multiclass.py",
      "start_line": 638,
      "end_line": 711,
      "tokens": 690,
      "context_length": 22097
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py__check_multimetric_scoring.2__check_multimetric_scoring.2.3.3.1",
      "distance": 1.132751226425171,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 340,
      "end_line": 397,
      "tokens": 532,
      "context_length": 22629
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OutputCodeClassifier.predict_",
      "distance": 1.1332404613494873,
      "file_path": "sklearn/multiclass.py",
      "start_line": 762,
      "end_line": 780,
      "tokens": 153,
      "context_length": 22782
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/weight_boosting.py_BaseWeightBoosting._validate_data_BaseWeightBoosting._validate_data.accept_sparse.3.1",
      "distance": 1.1348516941070557,
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "start_line": 72,
      "end_line": 90,
      "tokens": 143,
      "context_length": 22925
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/ranking.py_roc_auc_score._binary_roc_auc_score_roc_auc_score.5.1",
      "distance": 1.1349129676818848,
      "file_path": "sklearn/metrics/ranking.py",
      "start_line": 321,
      "end_line": 355,
      "tokens": 437,
      "context_length": 23362
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_BaseGradientBoosting.fit.13_BaseGradientBoosting.fit.26.1",
      "distance": 1.135214924812317,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 1476,
      "end_line": 1549,
      "tokens": 672,
      "context_length": 24034
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py__ConstantPredictor__ConstantPredictor.predict_proba.2.1",
      "distance": 1.1352829933166504,
      "file_path": "sklearn/multiclass.py",
      "start_line": 110,
      "end_line": 130,
      "tokens": 137,
      "context_length": 24171
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/scorer.py__BaseScorer__BaseScorer._factory_args.2.1",
      "distance": 1.1375408172607422,
      "file_path": "sklearn/metrics/scorer.py",
      "start_line": 46,
      "end_line": 62,
      "tokens": 161,
      "context_length": 24332
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_GradientBoostingRegressor._SUPPORTED_LOSS_GradientBoostingRegressor.__init__.1",
      "distance": 1.138761043548584,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 2472,
      "end_line": 2495,
      "tokens": 322,
      "context_length": 24654
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_gb_losses.py_MultinomialDeviance._raw_prediction_to_proba_MultinomialDeviance.get_init_raw_predictions.5.1",
      "distance": 1.1393859386444092,
      "file_path": "sklearn/ensemble/_gb_losses.py",
      "start_line": 760,
      "end_line": 774,
      "tokens": 156,
      "context_length": 24810
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_mnist.py_ESTIMATORS_ESTIMATORS.1",
      "distance": 1.139800786972046,
      "file_path": "benchmarks/bench_mnist.py",
      "start_line": 84,
      "end_line": 105,
      "tokens": 314,
      "context_length": 25124
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py_OneVsRestClassifier.predict_OneVsRestClassifier.predict.5.6.6.1",
      "distance": 1.140286922454834,
      "file_path": "sklearn/multiclass.py",
      "start_line": 276,
      "end_line": 315,
      "tokens": 379,
      "context_length": 25503
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGDRegressor._fit_regressor_SGDRegressor",
      "distance": 1.1406115293502808,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 1295,
      "end_line": 1595,
      "tokens": 678,
      "context_length": 26181
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_transformed_target.py_64_121",
      "distance": 1.1408946514129639,
      "file_path": "examples/compose/plot_transformed_target.py",
      "start_line": 99,
      "end_line": 178,
      "tokens": 746,
      "context_length": 26927
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_np_DEFAULT_EPSILON.1",
      "distance": 1.1414533853530884,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 7,
      "end_line": 43,
      "tokens": 346,
      "context_length": 27273
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/weight_boosting.py_AdaBoostRegressor._boost_AdaBoostRegressor._boost.28.1",
      "distance": 1.1429953575134277,
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "start_line": 1003,
      "end_line": 1093,
      "tokens": 694,
      "context_length": 27967
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__BaseRidge__BaseRidge.fit.8.1",
      "distance": 1.1435883045196533,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 512,
      "end_line": 572,
      "tokens": 611,
      "context_length": 28578
    }
  ],
  "files": [
    {
      "file_path": "sklearn/metrics/regression.py",
      "position": 1,
      "tokens": 5294,
      "context_length": 5294
    },
    {
      "file_path": "sklearn/multioutput.py",
      "position": 2,
      "tokens": 5551,
      "context_length": 10845
    },
    {
      "file_path": "examples/ensemble/plot_random_forest_regression_multioutput.py",
      "position": 3,
      "tokens": 671,
      "context_length": 11516
    },
    {
      "file_path": "sklearn/base.py",
      "position": 4,
      "tokens": 4315,
      "context_length": 15831
    },
    {
      "file_path": "sklearn/metrics/scorer.py",
      "position": 5,
      "tokens": 4425,
      "context_length": 20256
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 6,
      "tokens": 21935,
      "context_length": 42191
    },
    {
      "file_path": "sklearn/linear_model/ransac.py",
      "position": 7,
      "tokens": 4065,
      "context_length": 46256
    },
    {
      "file_path": "sklearn/multiclass.py",
      "position": 8,
      "tokens": 6439,
      "context_length": 52695
    },
    {
      "file_path": "sklearn/ensemble/forest.py",
      "position": 9,
      "tokens": 18073,
      "context_length": 70768
    },
    {
      "file_path": "sklearn/dummy.py",
      "position": 10,
      "tokens": 4403,
      "context_length": 75171
    },
    {
      "file_path": "examples/multioutput/plot_classifier_chain_yeast.py",
      "position": 11,
      "tokens": 1044,
      "context_length": 76215
    },
    {
      "file_path": "examples/tree/plot_tree_regression_multioutput.py",
      "position": 12,
      "tokens": 567,
      "context_length": 76782
    },
    {
      "file_path": "sklearn/feature_selection/rfe.py",
      "position": 13,
      "tokens": 4622,
      "context_length": 81404
    },
    {
      "file_path": "sklearn/neighbors/base.py",
      "position": 14,
      "tokens": 7724,
      "context_length": 89128
    },
    {
      "file_path": "sklearn/ensemble/bagging.py",
      "position": 15,
      "tokens": 7984,
      "context_length": 97112
    },
    {
      "file_path": "sklearn/kernel_ridge.py",
      "position": 16,
      "tokens": 1682,
      "context_length": 98794
    },
    {
      "file_path": "examples/ensemble/plot_bias_variance.py",
      "position": 17,
      "tokens": 1814,
      "context_length": 100608
    },
    {
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py",
      "position": 18,
      "tokens": 1029,
      "context_length": 101637
    },
    {
      "file_path": "benchmarks/bench_saga.py",
      "position": 19,
      "tokens": 2466,
      "context_length": 104103
    },
    {
      "file_path": "sklearn/metrics/cluster/supervised.py",
      "position": 20,
      "tokens": 8770,
      "context_length": 112873
    },
    {
      "file_path": "sklearn/linear_model/logistic.py",
      "position": 21,
      "tokens": 22042,
      "context_length": 134915
    },
    {
      "file_path": "sklearn/ensemble/weight_boosting.py",
      "position": 22,
      "tokens": 9116,
      "context_length": 144031
    },
    {
      "file_path": "sklearn/metrics/ranking.py",
      "position": 23,
      "tokens": 8099,
      "context_length": 152130
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 24,
      "tokens": 21241,
      "context_length": 173371
    },
    {
      "file_path": "sklearn/ensemble/_gb_losses.py",
      "position": 25,
      "tokens": 6927,
      "context_length": 180298
    },
    {
      "file_path": "benchmarks/bench_mnist.py",
      "position": 26,
      "tokens": 1718,
      "context_length": 182016
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 27,
      "tokens": 14489,
      "context_length": 196505
    },
    {
      "file_path": "examples/compose/plot_transformed_target.py",
      "position": 28,
      "tokens": 1814,
      "context_length": 198319
    },
    {
      "file_path": "sklearn/linear_model/ridge.py",
      "position": 29,
      "tokens": 13385,
      "context_length": 211704
    }
  ]
}