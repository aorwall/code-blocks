{
  "instance_id": "scikit-learn__scikit-learn-13302",
  "model_patch": "",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "4de404d46d24805ff48ad255ec3169a5155986f0",
  "patch": "diff --git a/sklearn/linear_model/ridge.py b/sklearn/linear_model/ridge.py\n--- a/sklearn/linear_model/ridge.py\n+++ b/sklearn/linear_model/ridge.py\n@@ -226,9 +226,17 @@ def _solve_svd(X, y, alpha):\n     return np.dot(Vt.T, d_UT_y).T\n \n \n+def _get_valid_accept_sparse(is_X_sparse, solver):\n+    if is_X_sparse and solver in ['auto', 'sag', 'saga']:\n+        return 'csr'\n+    else:\n+        return ['csr', 'csc', 'coo']\n+\n+\n def ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n                      max_iter=None, tol=1e-3, verbose=0, random_state=None,\n-                     return_n_iter=False, return_intercept=False):\n+                     return_n_iter=False, return_intercept=False,\n+                     check_input=True):\n     \"\"\"Solve the ridge equation by the method of normal equations.\n \n     Read more in the :ref:`User Guide <ridge_regression>`.\n@@ -332,6 +340,11 @@ def ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n \n         .. versionadded:: 0.17\n \n+    check_input : boolean, default True\n+        If False, the input arrays X and y will not be checked.\n+\n+        .. versionadded:: 0.21\n+\n     Returns\n     -------\n     coef : array, shape = [n_features] or [n_targets, n_features]\n@@ -360,13 +373,14 @@ def ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n                              return_n_iter=return_n_iter,\n                              return_intercept=return_intercept,\n                              X_scale=None,\n-                             X_offset=None)\n+                             X_offset=None,\n+                             check_input=check_input)\n \n \n def _ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n                       max_iter=None, tol=1e-3, verbose=0, random_state=None,\n                       return_n_iter=False, return_intercept=False,\n-                      X_scale=None, X_offset=None):\n+                      X_scale=None, X_offset=None, check_input=True):\n \n     has_sw = sample_weight is not None\n \n@@ -388,17 +402,12 @@ def _ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n                          \"intercept. Please change solver to 'sag' or set \"\n                          \"return_intercept=False.\")\n \n-    _dtype = [np.float64, np.float32]\n-\n-    # SAG needs X and y columns to be C-contiguous and np.float64\n-    if solver in ['sag', 'saga']:\n-        X = check_array(X, accept_sparse=['csr'],\n-                        dtype=np.float64, order='C')\n-        y = check_array(y, dtype=np.float64, ensure_2d=False, order='F')\n-    else:\n-        X = check_array(X, accept_sparse=['csr', 'csc', 'coo'],\n-                        dtype=_dtype)\n-        y = check_array(y, dtype=X.dtype, ensure_2d=False)\n+    if check_input:\n+        _dtype = [np.float64, np.float32]\n+        _accept_sparse = _get_valid_accept_sparse(sparse.issparse(X), solver)\n+        X = check_array(X, accept_sparse=_accept_sparse, dtype=_dtype,\n+                        order=\"C\")\n+        y = check_array(y, dtype=X.dtype, ensure_2d=False, order=\"C\")\n     check_consistent_length(X, y)\n \n     n_samples, n_features = X.shape\n@@ -417,8 +426,6 @@ def _ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n         raise ValueError(\"Number of samples in X and y does not correspond:\"\n                          \" %d != %d\" % (n_samples, n_samples_))\n \n-\n-\n     if has_sw:\n         if np.atleast_1d(sample_weight).ndim > 1:\n             raise ValueError(\"Sample weights must be 1D array or scalar\")\n@@ -438,7 +445,6 @@ def _ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n     if alpha.size == 1 and n_targets > 1:\n         alpha = np.repeat(alpha, n_targets)\n \n-\n     n_iter = None\n     if solver == 'sparse_cg':\n         coef = _solve_sparse_cg(X, y, alpha,\n@@ -461,7 +467,6 @@ def _ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n             except linalg.LinAlgError:\n                 # use SVD solver if matrix is singular\n                 solver = 'svd'\n-\n         else:\n             try:\n                 coef = _solve_cholesky(X, y, alpha)\n@@ -473,11 +478,12 @@ def _ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n         # precompute max_squared_sum for all targets\n         max_squared_sum = row_norms(X, squared=True).max()\n \n-        coef = np.empty((y.shape[1], n_features))\n+        coef = np.empty((y.shape[1], n_features), dtype=X.dtype)\n         n_iter = np.empty(y.shape[1], dtype=np.int32)\n-        intercept = np.zeros((y.shape[1], ))\n+        intercept = np.zeros((y.shape[1], ), dtype=X.dtype)\n         for i, (alpha_i, target) in enumerate(zip(alpha, y.T)):\n-            init = {'coef': np.zeros((n_features + int(return_intercept), 1))}\n+            init = {'coef': np.zeros((n_features + int(return_intercept), 1),\n+                                     dtype=X.dtype)}\n             coef_, n_iter_, _ = sag_solver(\n                 X, target.ravel(), sample_weight, 'squared', alpha_i, 0,\n                 max_iter, tol, verbose, random_state, False, max_squared_sum,\n@@ -530,13 +536,13 @@ def __init__(self, alpha=1.0, fit_intercept=True, normalize=False,\n \n     def fit(self, X, y, sample_weight=None):\n \n-        if self.solver in ('sag', 'saga'):\n-            _dtype = np.float64\n-        else:\n-            # all other solvers work at both float precision levels\n-            _dtype = [np.float64, np.float32]\n-\n-        X, y = check_X_y(X, y, ['csr', 'csc', 'coo'], dtype=_dtype,\n+        # all other solvers work at both float precision levels\n+        _dtype = [np.float64, np.float32]\n+        _accept_sparse = _get_valid_accept_sparse(sparse.issparse(X),\n+                                                  self.solver)\n+        X, y = check_X_y(X, y,\n+                         accept_sparse=_accept_sparse,\n+                         dtype=_dtype,\n                          multi_output=True, y_numeric=True)\n \n         if ((sample_weight is not None) and\n@@ -555,7 +561,7 @@ def fit(self, X, y, sample_weight=None):\n                 X, y, alpha=self.alpha, sample_weight=sample_weight,\n                 max_iter=self.max_iter, tol=self.tol, solver=self.solver,\n                 random_state=self.random_state, return_n_iter=True,\n-                return_intercept=True)\n+                return_intercept=True, check_input=False)\n             # add the offset which was subtracted by _preprocess_data\n             self.intercept_ += y_offset\n         else:\n@@ -570,8 +576,7 @@ def fit(self, X, y, sample_weight=None):\n                 X, y, alpha=self.alpha, sample_weight=sample_weight,\n                 max_iter=self.max_iter, tol=self.tol, solver=self.solver,\n                 random_state=self.random_state, return_n_iter=True,\n-                return_intercept=False, **params)\n-\n+                return_intercept=False, check_input=False, **params)\n             self._set_intercept(X_offset, y_offset, X_scale)\n \n         return self\n@@ -893,8 +898,9 @@ def fit(self, X, y, sample_weight=None):\n         -------\n         self : returns an instance of self.\n         \"\"\"\n-        check_X_y(X, y, accept_sparse=['csr', 'csc', 'coo'],\n-                  multi_output=True)\n+        _accept_sparse = _get_valid_accept_sparse(sparse.issparse(X),\n+                                                  self.solver)\n+        check_X_y(X, y, accept_sparse=_accept_sparse, multi_output=True)\n \n         self._label_binarizer = LabelBinarizer(pos_label=1, neg_label=-1)\n         Y = self._label_binarizer.fit_transform(y)\n@@ -1077,10 +1083,13 @@ def fit(self, X, y, sample_weight=None):\n         -------\n         self : object\n         \"\"\"\n-        X, y = check_X_y(X, y, ['csr', 'csc', 'coo'], dtype=np.float64,\n+        X, y = check_X_y(X, y,\n+                         accept_sparse=['csr', 'csc', 'coo'],\n+                         dtype=[np.float64, np.float32],\n                          multi_output=True, y_numeric=True)\n         if sample_weight is not None and not isinstance(sample_weight, float):\n-            sample_weight = check_array(sample_weight, ensure_2d=False)\n+            sample_weight = check_array(sample_weight, ensure_2d=False,\n+                                        dtype=X.dtype)\n         n_samples, n_features = X.shape\n \n         X, y, X_offset, y_offset, X_scale = LinearModel._preprocess_data(\n",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_ridge.py b/sklearn/linear_model/tests/test_ridge.py\n--- a/sklearn/linear_model/tests/test_ridge.py\n+++ b/sklearn/linear_model/tests/test_ridge.py\n@@ -1,3 +1,4 @@\n+import os\n import numpy as np\n import scipy.sparse as sp\n from scipy import linalg\n@@ -6,6 +7,7 @@\n import pytest\n \n from sklearn.utils.testing import assert_almost_equal\n+from sklearn.utils.testing import assert_allclose\n from sklearn.utils.testing import assert_array_almost_equal\n from sklearn.utils.testing import assert_allclose\n from sklearn.utils.testing import assert_equal\n@@ -38,7 +40,7 @@\n from sklearn.model_selection import GridSearchCV\n from sklearn.model_selection import KFold\n \n-from sklearn.utils import check_random_state\n+from sklearn.utils import check_random_state, _IS_32BIT\n from sklearn.datasets import make_multilabel_classification\n \n diabetes = datasets.load_diabetes()\n@@ -934,7 +936,9 @@ def test_ridge_classifier_no_support_multilabel():\n     assert_raises(ValueError, RidgeClassifier().fit, X, y)\n \n \n-def test_dtype_match():\n+@pytest.mark.parametrize(\n+    \"solver\", [\"svd\", \"sparse_cg\", \"cholesky\", \"lsqr\", \"sag\", \"saga\"])\n+def test_dtype_match(solver):\n     rng = np.random.RandomState(0)\n     alpha = 1.0\n \n@@ -944,25 +948,22 @@ def test_dtype_match():\n     X_32 = X_64.astype(np.float32)\n     y_32 = y_64.astype(np.float32)\n \n-    solvers = [\"svd\", \"sparse_cg\", \"cholesky\", \"lsqr\"]\n-    for solver in solvers:\n-\n-        # Check type consistency 32bits\n-        ridge_32 = Ridge(alpha=alpha, solver=solver)\n-        ridge_32.fit(X_32, y_32)\n-        coef_32 = ridge_32.coef_\n+    # Check type consistency 32bits\n+    ridge_32 = Ridge(alpha=alpha, solver=solver, max_iter=500, tol=1e-10,)\n+    ridge_32.fit(X_32, y_32)\n+    coef_32 = ridge_32.coef_\n \n-        # Check type consistency 64 bits\n-        ridge_64 = Ridge(alpha=alpha, solver=solver)\n-        ridge_64.fit(X_64, y_64)\n-        coef_64 = ridge_64.coef_\n+    # Check type consistency 64 bits\n+    ridge_64 = Ridge(alpha=alpha, solver=solver, max_iter=500, tol=1e-10,)\n+    ridge_64.fit(X_64, y_64)\n+    coef_64 = ridge_64.coef_\n \n-        # Do the actual checks at once for easier debug\n-        assert coef_32.dtype == X_32.dtype\n-        assert coef_64.dtype == X_64.dtype\n-        assert ridge_32.predict(X_32).dtype == X_32.dtype\n-        assert ridge_64.predict(X_64).dtype == X_64.dtype\n-        assert_almost_equal(ridge_32.coef_, ridge_64.coef_, decimal=5)\n+    # Do the actual checks at once for easier debug\n+    assert coef_32.dtype == X_32.dtype\n+    assert coef_64.dtype == X_64.dtype\n+    assert ridge_32.predict(X_32).dtype == X_32.dtype\n+    assert ridge_64.predict(X_64).dtype == X_64.dtype\n+    assert_allclose(ridge_32.coef_, ridge_64.coef_, rtol=1e-4)\n \n \n def test_dtype_match_cholesky():\n@@ -993,3 +994,32 @@ def test_dtype_match_cholesky():\n     assert ridge_32.predict(X_32).dtype == X_32.dtype\n     assert ridge_64.predict(X_64).dtype == X_64.dtype\n     assert_almost_equal(ridge_32.coef_, ridge_64.coef_, decimal=5)\n+\n+\n+@pytest.mark.parametrize(\n+    'solver', ['svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag', 'saga'])\n+def test_ridge_regression_dtype_stability(solver):\n+    random_state = np.random.RandomState(0)\n+    n_samples, n_features = 6, 5\n+    X = random_state.randn(n_samples, n_features)\n+    coef = random_state.randn(n_features)\n+    y = np.dot(X, coef) + 0.01 * rng.randn(n_samples)\n+    alpha = 1.0\n+    rtol = 1e-2 if os.name == 'nt' and _IS_32BIT else 1e-5\n+\n+    results = dict()\n+    for current_dtype in (np.float32, np.float64):\n+        results[current_dtype] = ridge_regression(X.astype(current_dtype),\n+                                                  y.astype(current_dtype),\n+                                                  alpha=alpha,\n+                                                  solver=solver,\n+                                                  random_state=random_state,\n+                                                  sample_weight=None,\n+                                                  max_iter=500,\n+                                                  tol=1e-10,\n+                                                  return_n_iter=False,\n+                                                  return_intercept=False)\n+\n+    assert results[np.float32].dtype == np.float32\n+    assert results[np.float64].dtype == np.float64\n+    assert_allclose(results[np.float32], results[np.float64], rtol=rtol)\n",
  "problem_statement": "[WIP] EHN: Ridge with solver SAG/SAGA does not cast to float64\ncloses #11642 \r\n\r\nbuild upon #11155 \r\n\r\nTODO:\r\n\r\n- [ ] Merge #11155 to reduce the diff.\r\n- [ ] Ensure that the casting rule is clear between base classes, classes and functions. I suspect that we have some copy which are not useful.\r\n\n",
  "hints_text": "",
  "created_at": "2019-02-27T10:28:25Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[sag]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[saga]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[sag]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[saga]\"]",
  "PASS_TO_PASS": "[\"sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight[RidgeClassifierCV]\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight[RidgeClassifier]\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights_cv\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_multi_ridge_diabetes]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_classifiers]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_cv]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_cv_normalize]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_diabetes]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_loo]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_tolerance]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match_cholesky\", \"sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_helper\", \"sklearn/linear_model/tests/test_ridge.py::test_errors_and_values_svd_helper\", \"sklearn/linear_model/tests/test_ridge.py::test_n_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_primal_dual_relationship\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_sample_weights_greater_than_1d\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_solver_not_supported\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[sag]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_cv_store_cv_values\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_no_support_multilabel\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_cv_sparse_svd\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_individual_penalties\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_intercept\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_convergence_fail\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_shapes\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_singular\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sparse_svd\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_vs_lstsq\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_int_alphas\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_negative_alphas\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_sample_weight\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_store_cv_values\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_cg_max_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_design_with_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_toy_ridge_object\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "patch_files": [
    "sklearn/linear_model/ridge.py"
  ],
  "test_patch_files": [
    "sklearn/linear_model/tests/test_ridge.py"
  ],
  "patch_diff_details": {
    "sklearn/linear_model/ridge.py": {
      "diffs": [
        {
          "start_line_old": 229,
          "end_line_old": 229,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._errors_and_values_svd_helper__RidgeGCV._errors_and_values_svd_helper.10.1",
          "closest_snippet_line_distance": 809,
          "pos": 13,
          "context_length": 7902
        },
        {
          "start_line_old": 335,
          "end_line_old": 335,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._errors_and_values_svd_helper__RidgeGCV._errors_and_values_svd_helper.10.1",
          "closest_snippet_line_distance": 703,
          "pos": 13,
          "context_length": 7902
        },
        {
          "start_line_old": 363,
          "end_line_old": 369,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_RidgeClassifier.fit_RidgeClassifier.classes_.1.1",
          "closest_snippet_line_distance": 512
        },
        {
          "start_line_old": 391,
          "end_line_old": 401,
          "file_pos": 2,
          "file_context_length": 16634,
          "pos": 4,
          "context_length": 3763
        },
        {
          "start_line_old": 420,
          "end_line_old": 421,
          "file_pos": 2,
          "file_context_length": 16634,
          "pos": 4,
          "context_length": 3763
        },
        {
          "start_line_old": 441,
          "end_line_old": 441,
          "file_pos": 2,
          "file_context_length": 16634,
          "pos": 4,
          "context_length": 3763
        },
        {
          "start_line_old": 464,
          "end_line_old": 464,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_1_ConvergenceWarning",
          "closest_snippet_line_distance": 431,
          "pos": 7,
          "context_length": 5226
        },
        {
          "start_line_old": 476,
          "end_line_old": 480,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_1_ConvergenceWarning",
          "closest_snippet_line_distance": 447,
          "pos": 7,
          "context_length": 5226
        },
        {
          "start_line_old": 533,
          "end_line_old": 539,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__ridge_regression__ridge_regression.n_iter.1",
          "closest_snippet_line_distance": 97,
          "pos": 5,
          "context_length": 4383
        },
        {
          "start_line_old": 558,
          "end_line_old": 558,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__ridge_regression__ridge_regression.n_iter.1",
          "closest_snippet_line_distance": 116,
          "pos": 5,
          "context_length": 4383
        },
        {
          "start_line_old": 573,
          "end_line_old": 574,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__ridge_regression__ridge_regression.n_iter.1",
          "closest_snippet_line_distance": 132,
          "pos": 5,
          "context_length": 4383
        },
        {
          "start_line_old": 896,
          "end_line_old": 897,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__solve_lsqr__solve_lsqr.7.1",
          "closest_snippet_line_distance": 767,
          "pos": 62,
          "context_length": 32282
        },
        {
          "start_line_old": 1080,
          "end_line_old": 1083,
          "file_pos": 2,
          "file_context_length": 16634,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._errors__RidgeGCV._pre_compute_svd.8.1",
          "closest_snippet_line_distance": 47,
          "pos": 16,
          "context_length": 9651
        }
      ]
    }
  },
  "vectors": 2995,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/sag.py_sag_solver.1_sag_solver.1",
      "distance": 1.124422311782837,
      "file_path": "sklearn/linear_model/sag.py",
      "start_line": 91,
      "end_line": 240,
      "tokens": 1513,
      "context_length": 1513
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/sag.py_sag_solver.2_sag_solver.sag.1",
      "distance": 1.1747782230377197,
      "file_path": "sklearn/linear_model/sag.py",
      "start_line": 241,
      "end_line": 317,
      "tokens": 785,
      "context_length": 2298
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/sag.py_1_sag_solver",
      "distance": 1.1892606019973755,
      "file_path": "sklearn/linear_model/sag.py",
      "start_line": 1,
      "end_line": 352,
      "tokens": 755,
      "context_length": 3053
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__ridge_regression__ridge_regression.n_iter.1",
      "distance": 1.1949191093444824,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 366,
      "end_line": 442,
      "tokens": 710,
      "context_length": 3763,
      "file_pos": 2
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__BaseRidge__BaseRidge.fit.8.1",
      "distance": 1.1984089612960815,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 517,
      "end_line": 577,
      "tokens": 620,
      "context_length": 4383,
      "file_pos": 2
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_1_ConvergenceWarning",
      "distance": 1.2547249794006348,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1,
      "end_line": 33,
      "tokens": 181,
      "context_length": 4564,
      "file_pos": 2
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__ridge_regression.21__ridge_regression.24.4.1.1",
      "distance": 1.255704402923584,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 443,
      "end_line": 514,
      "tokens": 662,
      "context_length": 5226,
      "file_pos": 2
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._errors_and_values_helper__RidgeGCV._errors_and_values_helper.11.1",
      "distance": 1.2733218669891357,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 998,
      "end_line": 1016,
      "tokens": 192,
      "context_length": 5418,
      "file_pos": 2
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__solve_sparse_cg__solve_sparse_cg",
      "distance": 1.2737979888916016,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 36,
      "end_line": 112,
      "tokens": 635,
      "context_length": 6053,
      "file_pos": 2
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_RidgeClassifier.__init___RidgeClassifier.__init__.self.class_weight.1",
      "distance": 1.2777619361877441,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 866,
      "end_line": 873,
      "tokens": 118,
      "context_length": 6171,
      "file_pos": 2
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/sag.py_sag_solver.29_",
      "distance": 1.2781271934509277,
      "file_path": "sklearn/linear_model/sag.py",
      "start_line": 318,
      "end_line": 353,
      "tokens": 307,
      "context_length": 6478
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._errors_and_values_svd_helper__RidgeGCV._errors_and_values_svd_helper.10.1",
      "distance": 1.2905194759368896,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1038,
      "end_line": 1052,
      "tokens": 209,
      "context_length": 6687,
      "file_pos": 2
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_ridge_regression_ridge_regression.2.1",
      "distance": 1.3009967803955078,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 229,
      "end_line": 363,
      "tokens": 1215,
      "context_length": 7902,
      "file_pos": 2
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._errors__RidgeGCV._pre_compute_svd.8.1",
      "distance": 1.3056302070617676,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1018,
      "end_line": 1036,
      "tokens": 255,
      "context_length": 8157,
      "file_pos": 2
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_bayesian_ridge.py_1_y_58.1",
      "distance": 1.3061848878860474,
      "file_path": "examples/linear_model/plot_bayesian_ridge.py",
      "start_line": 1,
      "end_line": 99,
      "tokens": 772,
      "context_length": 8929
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV.fit__RidgeGCV.fit.19.3",
      "distance": 1.3091764450073242,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1062,
      "end_line": 1140,
      "tokens": 722,
      "context_length": 9651,
      "file_pos": 3
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV.fit.20__RidgeGCV.fit.26.1",
      "distance": 1.3117060661315918,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1142,
      "end_line": 1170,
      "tokens": 276,
      "context_length": 9927,
      "file_pos": 3
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._errors_svd__RidgeGCV._values_svd.2.1",
      "distance": 1.3206539154052734,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1054,
      "end_line": 1060,
      "tokens": 123,
      "context_length": 10050,
      "file_pos": 3
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_Ridge.__init___Ridge.fit.2.1",
      "distance": 1.327913761138916,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 714,
      "end_line": 741,
      "tokens": 231,
      "context_length": 10281,
      "file_pos": 3
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__nls_subproblem.6__nls_subproblem.8.1",
      "distance": 1.3315260410308838,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 105,
      "end_line": 148,
      "tokens": 401,
      "context_length": 10682
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__fit_projected_gradient__fit_projected_gradient.11.1",
      "distance": 1.3331847190856934,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 151,
      "end_line": 192,
      "tokens": 476,
      "context_length": 11158
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV__RidgeGCV.__init__.self.store_cv_values.1",
      "distance": 1.3393058776855469,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 924,
      "end_line": 973,
      "tokens": 425,
      "context_length": 11583,
      "file_pos": 4
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_RidgeClassifier_RidgeClassifier.1",
      "distance": 1.339946985244751,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 744,
      "end_line": 864,
      "tokens": 1138,
      "context_length": 12721,
      "file_pos": 4
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sgd_regression.py_np_",
      "distance": 1.3439372777938843,
      "file_path": "benchmarks/bench_sgd_regression.py",
      "start_line": 4,
      "end_line": 151,
      "tokens": 1314,
      "context_length": 14035
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/bayes.py_1_BayesianRidge.1",
      "distance": 1.3450531959533691,
      "file_path": "sklearn/linear_model/bayes.py",
      "start_line": 1,
      "end_line": 142,
      "tokens": 1162,
      "context_length": 15197
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._decomp_diag__RidgeGCV._diag_dot.2.3.1",
      "distance": 1.3524333238601685,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 987,
      "end_line": 996,
      "tokens": 133,
      "context_length": 15330,
      "file_pos": 6
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_saga.py_json_fit_single.16.1",
      "distance": 1.3620102405548096,
      "file_path": "benchmarks/bench_saga.py",
      "start_line": 6,
      "end_line": 104,
      "tokens": 837,
      "context_length": 16167
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__RidgeGCV._pre_compute__RidgeGCV._pre_compute.K.8.1",
      "distance": 1.3631958961486816,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 975,
      "end_line": 985,
      "tokens": 133,
      "context_length": 16300,
      "file_pos": 7
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__BaseRidgeCV__BaseRidgeCV.fit.5.1",
      "distance": 1.365914225578308,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1173,
      "end_line": 1230,
      "tokens": 453,
      "context_length": 16753,
      "file_pos": 7
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_huber_vs_ridge.py_1_",
      "distance": 1.367527961730957,
      "file_path": "examples/linear_model/plot_huber_vs_ridge.py",
      "start_line": 1,
      "end_line": 66,
      "tokens": 592,
      "context_length": 17345
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_saga.py_18_",
      "distance": 1.3683710098266602,
      "file_path": "benchmarks/bench_saga.py",
      "start_line": 287,
      "end_line": 306,
      "tokens": 182,
      "context_length": 17527
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__solve_cholesky__solve_cholesky.2",
      "distance": 1.3730297088623047,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 133,
      "end_line": 154,
      "tokens": 238,
      "context_length": 17765,
      "file_pos": 8
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_Ridge_Ridge.1",
      "distance": 1.3738423585891724,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 580,
      "end_line": 713,
      "tokens": 1307,
      "context_length": 19072,
      "file_pos": 8
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sparsify_coefficients_check_sparsify_coefficients.15",
      "distance": 1.3782250881195068,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2079,
      "end_line": 2099,
      "tokens": 227,
      "context_length": 19299
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/bayes.py_BayesianRidge.__init___BayesianRidge.__init__.self.verbose.1",
      "distance": 1.378265142440796,
      "file_path": "sklearn/linear_model/bayes.py",
      "start_line": 144,
      "end_line": 158,
      "tokens": 182,
      "context_length": 19481
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ransac.py_1__EPSILON.1",
      "distance": 1.3818219900131226,
      "file_path": "sklearn/linear_model/ransac.py",
      "start_line": 1,
      "end_line": 19,
      "tokens": 111,
      "context_length": 19592
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/bayes.py_BayesianRidge.fit_BayesianRidge.fit.self.n_iter_.1",
      "distance": 1.3818974494934082,
      "file_path": "sklearn/linear_model/bayes.py",
      "start_line": 160,
      "end_line": 249,
      "tokens": 799,
      "context_length": 20391
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_2_deprecated",
      "distance": 1.3826955556869507,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 10,
      "end_line": 26,
      "tokens": 126,
      "context_length": 20517
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__solve_cholesky_kernel__solve_cholesky_kernel.n_samples.8.3.dual_coefs.4.1",
      "distance": 1.3879791498184204,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 157,
      "end_line": 215,
      "tokens": 517,
      "context_length": 21034,
      "file_pos": 11
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__nls_subproblem__nls_subproblem.gamma.1",
      "distance": 1.388134241104126,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 49,
      "end_line": 104,
      "tokens": 590,
      "context_length": 21624
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_types_CROSS_DECOMPOSITION.1",
      "distance": 1.388871431350708,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1,
      "end_line": 62,
      "tokens": 444,
      "context_length": 22068
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/bayes.py_BayesianRidge._update_coef__BayesianRidge._update_coef_.4.1",
      "distance": 1.3901140689849854,
      "file_path": "sklearn/linear_model/bayes.py",
      "start_line": 309,
      "end_line": 330,
      "tokens": 234,
      "context_length": 22302
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_RidgeClassifierCV.__init___",
      "distance": 1.3921031951904297,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1451,
      "end_line": 1499,
      "tokens": 414,
      "context_length": 22716,
      "file_pos": 11
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.3.2",
      "distance": 1.3930504322052002,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1907,
      "end_line": 1951,
      "tokens": 472,
      "context_length": 23188
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/bayes.py_BayesianRidge.fit.28_BayesianRidge.fit.38.1",
      "distance": 1.3940155506134033,
      "file_path": "sklearn/linear_model/bayes.py",
      "start_line": 251,
      "end_line": 275,
      "tokens": 247,
      "context_length": 23435
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__solve_svd__solve_svd.9.1",
      "distance": 1.3951733112335205,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 218,
      "end_line": 226,
      "tokens": 131,
      "context_length": 23566,
      "file_pos": 11
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__solve_lsqr__solve_lsqr.7.1",
      "distance": 1.401422142982483,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 115,
      "end_line": 130,
      "tokens": 169,
      "context_length": 23735,
      "file_pos": 11
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_ridge_path.py_1_",
      "distance": 1.4028289318084717,
      "file_path": "examples/linear_model/plot_ridge_path.py",
      "start_line": 1,
      "end_line": 67,
      "tokens": 434,
      "context_length": 24169
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_saga.py_plot_plot.9.30",
      "distance": 1.4060410261154175,
      "file_path": "benchmarks/bench_saga.py",
      "start_line": 192,
      "end_line": 284,
      "tokens": 761,
      "context_length": 24930
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_ridge_coeffs.py_1_",
      "distance": 1.4089856147766113,
      "file_path": "examples/linear_model/plot_ridge_coeffs.py",
      "start_line": 1,
      "end_line": 90,
      "tokens": 590,
      "context_length": 25520
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train_check_classifiers_train.9.1",
      "distance": 1.4104588031768799,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1416,
      "end_line": 1431,
      "tokens": 203,
      "context_length": 25723
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/optimize.py__cg__cg.8.1",
      "distance": 1.4149943590164185,
      "file_path": "sklearn/utils/optimize.py",
      "start_line": 55,
      "end_line": 111,
      "tokens": 425,
      "context_length": 26148
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_ols_ridge_variance.py_1_",
      "distance": 1.416314721107483,
      "file_path": "examples/linear_model/plot_ols_ridge_variance.py",
      "start_line": 1,
      "end_line": 68,
      "tokens": 484,
      "context_length": 26632
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_np_MAX_INT.1",
      "distance": 1.4171133041381836,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 7,
      "end_line": 45,
      "tokens": 361,
      "context_length": 26993
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_46_",
      "distance": 1.4194207191467285,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 197,
      "end_line": 239,
      "tokens": 373,
      "context_length": 27366
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train.10_check_classifiers_train.10.24.y_prob.7.y_log_prob.3",
      "distance": 1.4212632179260254,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1433,
      "end_line": 1532,
      "tokens": 940,
      "context_length": 28306
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py__fit_coordinate_descent.6__fit_coordinate_descent.7.1",
      "distance": 1.421294927597046,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 500,
      "end_line": 525,
      "tokens": 247,
      "context_length": 28553
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/base.py_1__check_weights.2.3.1",
      "distance": 1.4225053787231445,
      "file_path": "sklearn/neighbors/base.py",
      "start_line": 1,
      "end_line": 58,
      "tokens": 434,
      "context_length": 28987
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py__multiplicative_update_h__multiplicative_update_h.11.1",
      "distance": 1.422692060470581,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 623,
      "end_line": 702,
      "tokens": 716,
      "context_length": 29703
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/least_angle.py__lars_path_solver.23__lars_path_solver.23.10.3.AA.3",
      "distance": 1.4231005907058716,
      "file_path": "sklearn/linear_model/least_angle.py",
      "start_line": 475,
      "end_line": 632,
      "tokens": 1591,
      "context_length": 31294
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_saga.py__predict_proba_exp.9.1",
      "distance": 1.4234604835510254,
      "file_path": "benchmarks/bench_saga.py",
      "start_line": 107,
      "end_line": 189,
      "tokens": 637,
      "context_length": 31931
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_RidgeClassifier.fit_RidgeClassifier.classes_.1.1",
      "distance": 1.4251898527145386,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 875,
      "end_line": 921,
      "tokens": 351,
      "context_length": 32282,
      "file_pos": 20
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/base.py_40__rescale_data.8.1",
      "distance": 1.4333595037460327,
      "file_path": "sklearn/linear_model/base.py",
      "start_line": 177,
      "end_line": 191,
      "tokens": 155,
      "context_length": 32437
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_parameters_default_constructible_check_parameters_default_constructible.4.18.5.2.1.3.1",
      "distance": 1.4364426136016846,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2142,
      "end_line": 2218,
      "tokens": 630,
      "context_length": 33067
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__PGNMF._fit_transform__PGNMF._fit_transform.13.1",
      "distance": 1.4368550777435303,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 230,
      "end_line": 277,
      "tokens": 530,
      "context_length": 33597
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_dtype_object_check_dtype_object.rng.12.4.5",
      "distance": 1.4383893013000488,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 630,
      "end_line": 663,
      "tokens": 312,
      "context_length": 33909
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py__fit_multiplicative_update.10_non_negative_factorization",
      "distance": 1.438737154006958,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 792,
      "end_line": 1071,
      "tokens": 603,
      "context_length": 34512
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_rcv1_logreg_convergence.py_get_max_squared_sum_clfs.1",
      "distance": 1.43931245803833,
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "start_line": 142,
      "end_line": 194,
      "tokens": 532,
      "context_length": 35044
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_methods_subset_invariance_check_methods_subset_invariance.rnd.11.4.2",
      "distance": 1.4441030025482178,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 819,
      "end_line": 855,
      "tokens": 352,
      "context_length": 35396
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_train_check_regressors_train.23.1",
      "distance": 1.4456543922424316,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1838,
      "end_line": 1880,
      "tokens": 469,
      "context_length": 35865
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegression.1_LogisticRegression.1",
      "distance": 1.44768226146698,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 1204,
      "end_line": 1442,
      "tokens": 2732,
      "context_length": 38597
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_bayesian_ridge.py_clf_poly_",
      "distance": 1.4482800960540771,
      "file_path": "examples/linear_model/plot_bayesian_ridge.py",
      "start_line": 100,
      "end_line": 115,
      "tokens": 149,
      "context_length": 38746
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_nmf.py__PGNMF__PGNMF.fit_transform.3.1",
      "distance": 1.4483906030654907,
      "file_path": "benchmarks/bench_plot_nmf.py",
      "start_line": 195,
      "end_line": 228,
      "tokens": 317,
      "context_length": 39063
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/covariance/graph_lasso_.py_graphical_lasso.19_graphical_lasso.20.2.1.2.1.1",
      "distance": 1.4508790969848633,
      "file_path": "sklearn/covariance/graph_lasso_.py",
      "start_line": 202,
      "end_line": 280,
      "tokens": 891,
      "context_length": 39954
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_sample_weights_invariance_check_sample_weights_invariance.3.estimator1.10.1.4",
      "distance": 1.4514065980911255,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 592,
      "end_line": 627,
      "tokens": 472,
      "context_length": 40426
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_nan_inf_check_estimators_nan_inf.rnd.13.2.10.1.4.1",
      "distance": 1.4514104127883911,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1161,
      "end_line": 1229,
      "tokens": 601,
      "context_length": 41027
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_dtypes_check_estimators_dtypes.10.4.1.1",
      "distance": 1.4514217376708984,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1115,
      "end_line": 1135,
      "tokens": 236,
      "context_length": 41263
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/sklearn/kernel_ridge.py_1_KernelRidge.1",
      "distance": 1.45151948928833,
      "file_path": "sklearn/kernel_ridge.py",
      "start_line": 1,
      "end_line": 107,
      "tokens": 971,
      "context_length": 42234
    },
    {
      "position": 79,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_covertype.py_ESTIMATORS_ESTIMATORS.1",
      "distance": 1.4519095420837402,
      "file_path": "benchmarks/bench_covertype.py",
      "start_line": 99,
      "end_line": 109,
      "tokens": 151,
      "context_length": 42385
    },
    {
      "position": 80,
      "id": "/tmp/repos/scikit-learn/sklearn/kernel_ridge.py_KernelRidge.__init___KernelRidge._pairwise.1.1",
      "distance": 1.4519150257110596,
      "file_path": "sklearn/kernel_ridge.py",
      "start_line": 108,
      "end_line": 129,
      "tokens": 186,
      "context_length": 42571
    },
    {
      "position": 81,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM.fit.14_BaseLibSVM.fit.29.1",
      "distance": 1.4533355236053467,
      "file_path": "sklearn/svm/base.py",
      "start_line": 170,
      "end_line": 223,
      "tokens": 596,
      "context_length": 43167
    },
    {
      "position": 82,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py__multiplicative_update_w__multiplicative_update_w.11.1",
      "distance": 1.4540486335754395,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 528,
      "end_line": 620,
      "tokens": 844,
      "context_length": 44011
    },
    {
      "position": 83,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__yield_checks__yield_checks.19",
      "distance": 1.4552314281463623,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 79,
      "end_line": 112,
      "tokens": 261,
      "context_length": 44272
    },
    {
      "position": 84,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/__init__.py_1_",
      "distance": 1.4553892612457275,
      "file_path": "sklearn/linear_model/__init__.py",
      "start_line": 1,
      "end_line": 82,
      "tokens": 674,
      "context_length": 44946
    },
    {
      "position": 85,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_supervised_y_no_nan_check_supervised_y_no_nan.estimator.7.3.1",
      "distance": 1.456119179725647,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 140,
      "end_line": 160,
      "tokens": 202,
      "context_length": 45148
    },
    {
      "position": 86,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_balanced_linear_classifier_check_class_weight_balanced_linear_classifier.18",
      "distance": 1.4569462537765503,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1974,
      "end_line": 2008,
      "tokens": 363,
      "context_length": 45511
    },
    {
      "position": 87,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/extmath.py_32__safe_accumulator_op.3.1",
      "distance": 1.4570977687835693,
      "file_path": "sklearn/utils/extmath.py",
      "start_line": 660,
      "end_line": 689,
      "tokens": 258,
      "context_length": 45769
    },
    {
      "position": 88,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_check_array.20_check_array.21.2.1",
      "distance": 1.4571260213851929,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 481,
      "end_line": 550,
      "tokens": 810,
      "context_length": 46579
    },
    {
      "position": 89,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimator_sparse_data_check_estimator_sparse_data.10.2.4.5.2",
      "distance": 1.459648609161377,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 499,
      "end_line": 547,
      "tokens": 491,
      "context_length": 47070
    },
    {
      "position": 90,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py__update_coordinate_descent__update_coordinate_descent.12.1",
      "distance": 1.46053946018219,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 391,
      "end_line": 419,
      "tokens": 286,
      "context_length": 47356
    },
    {
      "position": 91,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/optics_.py__update_filter_sdas__update_filter_sdas.5.1",
      "distance": 1.4612270593643188,
      "file_path": "sklearn/cluster/optics_.py",
      "start_line": 695,
      "end_line": 705,
      "tokens": 131,
      "context_length": 47487
    },
    {
      "position": 92,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py_BaseHistGradientBoosting.fit.48_BaseHistGradientBoosting.fit.61.3.9.15",
      "distance": 1.461867094039917,
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "start_line": 168,
      "end_line": 230,
      "tokens": 654,
      "context_length": 48141
    }
  ],
  "files": [
    {
      "file_path": "sklearn/linear_model/sag.py",
      "position": 1,
      "tokens": 3171,
      "context_length": 3171
    },
    {
      "file_path": "sklearn/linear_model/ridge.py",
      "position": 2,
      "tokens": 13463,
      "context_length": 16634
    },
    {
      "file_path": "examples/linear_model/plot_bayesian_ridge.py",
      "position": 3,
      "tokens": 921,
      "context_length": 17555
    },
    {
      "file_path": "benchmarks/bench_plot_nmf.py",
      "position": 4,
      "tokens": 3896,
      "context_length": 21451
    },
    {
      "file_path": "benchmarks/bench_sgd_regression.py",
      "position": 5,
      "tokens": 1341,
      "context_length": 22792
    },
    {
      "file_path": "sklearn/linear_model/bayes.py",
      "position": 6,
      "tokens": 5652,
      "context_length": 28444
    },
    {
      "file_path": "benchmarks/bench_saga.py",
      "position": 7,
      "tokens": 2466,
      "context_length": 30910
    },
    {
      "file_path": "examples/linear_model/plot_huber_vs_ridge.py",
      "position": 8,
      "tokens": 614,
      "context_length": 31524
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 9,
      "tokens": 21976,
      "context_length": 53500
    },
    {
      "file_path": "sklearn/linear_model/ransac.py",
      "position": 10,
      "tokens": 4065,
      "context_length": 57565
    },
    {
      "file_path": "sklearn/cluster/hierarchical.py",
      "position": 11,
      "tokens": 9008,
      "context_length": 66573
    },
    {
      "file_path": "examples/linear_model/plot_ridge_path.py",
      "position": 12,
      "tokens": 463,
      "context_length": 67036
    },
    {
      "file_path": "examples/linear_model/plot_ridge_coeffs.py",
      "position": 13,
      "tokens": 612,
      "context_length": 67648
    },
    {
      "file_path": "sklearn/utils/optimize.py",
      "position": 14,
      "tokens": 1491,
      "context_length": 69139
    },
    {
      "file_path": "examples/linear_model/plot_ols_ridge_variance.py",
      "position": 15,
      "tokens": 492,
      "context_length": 69631
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 16,
      "tokens": 13928,
      "context_length": 83559
    },
    {
      "file_path": "benchmarks/bench_rcv1_logreg_convergence.py",
      "position": 17,
      "tokens": 1945,
      "context_length": 85504
    },
    {
      "file_path": "sklearn/decomposition/nmf.py",
      "position": 18,
      "tokens": 11907,
      "context_length": 97411
    },
    {
      "file_path": "sklearn/neighbors/base.py",
      "position": 19,
      "tokens": 7732,
      "context_length": 105143
    },
    {
      "file_path": "sklearn/linear_model/least_angle.py",
      "position": 20,
      "tokens": 16498,
      "context_length": 121641
    },
    {
      "file_path": "sklearn/linear_model/base.py",
      "position": 21,
      "tokens": 4761,
      "context_length": 126402
    },
    {
      "file_path": "sklearn/linear_model/logistic.py",
      "position": 22,
      "tokens": 22043,
      "context_length": 148445
    },
    {
      "file_path": "sklearn/covariance/graph_lasso_.py",
      "position": 23,
      "tokens": 9054,
      "context_length": 157499
    },
    {
      "file_path": "sklearn/kernel_ridge.py",
      "position": 24,
      "tokens": 1681,
      "context_length": 159180
    },
    {
      "file_path": "benchmarks/bench_covertype.py",
      "position": 25,
      "tokens": 1891,
      "context_length": 161071
    },
    {
      "file_path": "sklearn/svm/base.py",
      "position": 26,
      "tokens": 8216,
      "context_length": 169287
    },
    {
      "file_path": "sklearn/linear_model/__init__.py",
      "position": 27,
      "tokens": 674,
      "context_length": 169961
    },
    {
      "file_path": "sklearn/utils/extmath.py",
      "position": 28,
      "tokens": 6316,
      "context_length": 176277
    },
    {
      "file_path": "sklearn/utils/validation.py",
      "position": 29,
      "tokens": 8217,
      "context_length": 184494
    },
    {
      "file_path": "sklearn/cluster/optics_.py",
      "position": 30,
      "tokens": 8324,
      "context_length": 192818
    },
    {
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "position": 31,
      "tokens": 8098,
      "context_length": 200916
    }
  ]
}