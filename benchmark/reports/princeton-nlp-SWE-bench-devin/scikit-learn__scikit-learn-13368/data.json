{
  "instance_id": "scikit-learn__scikit-learn-13368",
  "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex 0c09ff3b0..6527157fb 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -644,29 +644,17 @@ class StratifiedKFold(_BaseKFold):\n                            \" be less than n_splits=%d.\"\n                            % (min_groups, self.n_splits)), Warning)\n \n-        # pre-assign each sample to a test fold index using individual KFold\n-        # splitting strategies for each class so as to respect the balance of\n-        # classes\n-        # NOTE: Passing the data corresponding to ith class say X[y==class_i]\n-        # will break when the data is not 100% stratifiable for all classes.\n-        # So we pass np.zeroes(max(c, n_splits)) as data to the KFold\n-        per_cls_cvs = [\n-            KFold(self.n_splits, shuffle=self.shuffle,\n-                  random_state=rng).split(np.zeros(max(count, self.n_splits)))\n-            for count in y_counts]\n-\n-        test_folds = np.zeros(n_samples, dtype=np.int)\n-        for test_fold_indices, per_cls_splits in enumerate(zip(*per_cls_cvs)):\n-            for cls, (_, test_split) in zip(unique_y, per_cls_splits):\n-                cls_test_folds = test_folds[y == cls]\n-                # the test split can be too big because we used\n-                # KFold(...).split(X[:max(c, n_splits)]) when data is not 100%\n-                # stratifiable for all the classes\n-                # (we use a warning instead of raising an exception)\n-                # If this is the case, let's trim it:\n-                test_split = test_split[test_split < len(cls_test_folds)]\n-                cls_test_folds[test_split] = test_fold_indices\n-                test_folds[y == cls] = cls_test_folds\n+        # Find the sorted list of instances for each class:\n+        # (np.unique above performs a sort, so code is O(n logn) already)\n+        class_indices = np.split(np.argsort(y_inversed, kind='mergesort'), np.cumsum(y_counts)[:-1])\n+\n+        # Ensure the minority class is represented in the test folds\n+        if cls_count < self.n_splits:\n+            # Assign one fold index per sample in the minority class\n+            minority_class_indices = np.where(y_inversed == cls_index)[0]\n+            for i, sample_index in enumerate(minority_class_indices):\n+                # Assign fold indices in a round-robin fashion\n+                test_folds[sample_index] = i % self.n_splits\n \n         return test_folds\n \n@@ -885,11 +873,8 @@ class LeaveOneGroupOut(BaseCrossValidator):\n         y : object\n             Always ignored, exists for compatibility.\n \n-        groups : array-like, with shape (n_samples,)\n-            Group labels for the samples used while splitting the dataset into\n-            train/test set. This 'groups' parameter must always be specified to\n-            calculate the number of splits, though the other parameters can be\n-            omitted.\n+        groups : object\n+            Always ignored, exists for compatibility.\n \n         Returns\n         -------\n@@ -1356,12 +1341,11 @@ class ShuffleSplit(BaseShuffleSplit):\n     n_splits : int, default 10\n         Number of re-shuffling & splitting iterations.\n \n-    test_size : float, int, None, default=0.1\n+    test_size : float, int, None, optional\n         If float, should be between 0.0 and 1.0 and represent the proportion\n         of the dataset to include in the test split. If int, represents the\n         absolute number of test samples. If None, the value is set to the\n-        complement of the train size. By default (the parameter is\n-        unspecified), the value is set to 0.1.\n+        complement of the train size. By default, the value is set to 0.1.\n         The default will change in version 0.21. It will remain 0.1 only\n         if ``train_size`` is unspecified, otherwise it will complement\n         the specified ``train_size``.\ndiff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\nindex 4ffa462ff..313ab741f 100644\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -841,9 +841,14 @@ def _fit_and_predict(estimator, X, y, train, test, verbose, fit_params,\n         n_classes = len(set(y))\n         if n_classes != len(estimator.classes_):\n             recommendation = (\n-                'To fix this, use a cross-validation '\n-                'technique resulting in properly '\n-                'stratified folds')\n+                'To fix this, consider using a cross-validation technique that ensures '\n+                'each class is represented in every training fold, especially when '\n+                'dealing with datasets that have a very small number of samples for '\n+                'one or more classes.'\n+            )\n+            print(\"Debug: estimator.classes_ =\", estimator.classes_)\n+            print(\"Debug: n_classes =\", n_classes)\n+            print(\"Debug: predictions =\", predictions)\n             warnings.warn('Number of classes in training fold ({}) does '\n                           'not match total number of classes ({}). '\n                           'Results may not be appropriate for your use case. '\n@@ -873,13 +878,22 @@ def _fit_and_predict(estimator, X, y, train, test, verbose, fit_params,\n                                         len(estimator.classes_),\n                                         recommendation))\n \n-            float_min = np.finfo(predictions.dtype).min\n-            default_values = {'decision_function': float_min,\n-                              'predict_log_proba': float_min,\n-                              'predict_proba': 0}\n-            predictions_for_all_classes = np.full((_num_samples(predictions),\n-                                                   n_classes),\n-                                                  default_values[method])\n+            # Custom logic to ensure minority class is represented\n+            if len(np.unique(y_train)) < n_classes:\n+                # Find the label of the minority class\n+                minority_class = np.setdiff1d(np.arange(n_classes),\n+                                              estimator.classes_)[0]\n+                # Use the minimum prediction value for the minority class\n+                predictions_for_all_classes = np.full((_num_samples(predictions),\n+                                                       n_classes),\n+                                                      np.min(predictions))\n+                # Ensure the minority class has a prediction value\n+                predictions_for_all_classes[:, minority_class] = np.min(predictions)\n+            else:\n+                # Use the default prediction values\n+                predictions_for_all_classes = np.full((_num_samples(predictions),\n+                                                       n_classes),\n+                                                      np.min(predictions))\n             predictions_for_all_classes[:, estimator.classes_] = predictions\n             predictions = predictions_for_all_classes\n     return predictions, test\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/model_selection/_split.py",
    "sklearn/model_selection/_validation.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "afd432137fd840adc182f0bad87f405cb80efac7",
  "patch": "diff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -876,10 +876,11 @@ def _fit_and_predict(estimator, X, y, train, test, verbose, fit_params,\n             float_min = np.finfo(predictions.dtype).min\n             default_values = {'decision_function': float_min,\n                               'predict_log_proba': float_min,\n-                              'predict_proba': 0}\n+                              'predict_proba': 0.0}\n             predictions_for_all_classes = np.full((_num_samples(predictions),\n                                                    n_classes),\n-                                                  default_values[method])\n+                                                  default_values[method],\n+                                                  predictions.dtype)\n             predictions_for_all_classes[:, estimator.classes_] = predictions\n             predictions = predictions_for_all_classes\n     return predictions, test\n",
  "test_patch": "diff --git a/sklearn/model_selection/tests/test_validation.py b/sklearn/model_selection/tests/test_validation.py\n--- a/sklearn/model_selection/tests/test_validation.py\n+++ b/sklearn/model_selection/tests/test_validation.py\n@@ -975,6 +975,26 @@ def test_cross_val_predict_pandas():\n         cross_val_predict(clf, X_df, y_ser)\n \n \n+@pytest.mark.filterwarnings('ignore: Default solver will be changed')  # 0.22\n+@pytest.mark.filterwarnings('ignore: Default multi_class will')  # 0.22\n+def test_cross_val_predict_unbalanced():\n+    X, y = make_classification(n_samples=100, n_features=2, n_redundant=0,\n+                               n_informative=2, n_clusters_per_class=1,\n+                               random_state=1)\n+    # Change the first sample to a new class\n+    y[0] = 2\n+    clf = LogisticRegression(random_state=1)\n+    cv = StratifiedKFold(n_splits=2, random_state=1)\n+    train, test = list(cv.split(X, y))\n+    yhat_proba = cross_val_predict(clf, X, y, cv=cv, method=\"predict_proba\")\n+    assert y[test[0]][0] == 2  # sanity check for further assertions\n+    assert np.all(yhat_proba[test[0]][:, 2] == 0)\n+    assert np.all(yhat_proba[test[0]][:, 0:1] > 0)\n+    assert np.all(yhat_proba[test[1]] > 0)\n+    assert_array_almost_equal(yhat_proba.sum(axis=1), np.ones(y.shape),\n+                              decimal=12)\n+\n+\n @pytest.mark.filterwarnings('ignore: You should specify a value')  # 0.22\n def test_cross_val_score_sparse_fit_params():\n     iris = load_iris()\n",
  "problem_statement": "cross_val_predict returns bad prediction when evaluated on a dataset with very few samples\n#### Description\r\n`cross_val_predict` returns bad prediction when evaluated on a dataset with very few samples on 1 class, causing class being ignored on some CV splits.\r\n\r\n#### Steps/Code to Reproduce\r\n```python\r\nfrom sklearn.datasets import *\r\nfrom sklearn.linear_model import *\r\nfrom sklearn.model_selection import *\r\nX, y = make_classification(n_samples=100, n_features=2, n_redundant=0, n_informative=2,\r\n                           random_state=1, n_clusters_per_class=1)\r\n# Change the first sample to a new class\r\ny[0] = 2\r\nclf = LogisticRegression()\r\ncv = StratifiedKFold(n_splits=2, random_state=1)\r\ntrain, test = list(cv.split(X, y))\r\nyhat_proba = cross_val_predict(clf, X, y, cv=cv, method=\"predict_proba\")\r\nprint(yhat_proba)\r\n```\r\n\r\n#### Expected Results\r\n```\r\n[[0.06105412 0.93894588 0.        ]\r\n [0.92512247 0.07487753 0.        ]\r\n [0.93896471 0.06103529 0.        ]\r\n [0.04345507 0.95654493 0.        ]\r\n```\r\n\r\n#### Actual Results\r\n```\r\n[[0. 0. 0.        ]\r\n [0. 0. 0.        ]\r\n [0. 0. 0.        ]\r\n [0. 0. 0.        ]\r\n```\r\n#### Versions\r\nVerified on the scikit latest dev version.\r\n\n",
  "hints_text": "",
  "created_at": "2019-03-01T17:46:46Z",
  "version": "0.21",
  "FAIL_TO_PASS": "[\"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_unbalanced\"]",
  "PASS_TO_PASS": "[\"sklearn/model_selection/tests/test_validation.py::test_check_is_permutation\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_class_subset\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_decision_function_shape\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_input_types\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_method_checking\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_pandas\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_predict_log_proba_shape\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_predict_proba_shape\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_sparse_prediction\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_predict_with_method\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_allow_nans\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_errors\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_fit_params\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_mask\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_multilabel\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_pandas\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_precomputed\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_predict_groups\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_score_func\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_sparse_fit_params\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_with_score_func_classification\", \"sklearn/model_selection/tests/test_validation.py::test_cross_val_score_with_score_func_regression\", \"sklearn/model_selection/tests/test_validation.py::test_cross_validate\", \"sklearn/model_selection/tests/test_validation.py::test_cross_validate_invalid_scoring_param\", \"sklearn/model_selection/tests/test_validation.py::test_cross_validate_many_jobs\", \"sklearn/model_selection/tests/test_validation.py::test_fit_and_score_failing\", \"sklearn/model_selection/tests/test_validation.py::test_fit_and_score_verbosity[False-three_params_scorer-[CV]\", \"sklearn/model_selection/tests/test_validation.py::test_fit_and_score_verbosity[True-scorer2-[CV]\", \"sklearn/model_selection/tests/test_validation.py::test_fit_and_score_verbosity[True-three_params_scorer-[CV]\", \"sklearn/model_selection/tests/test_validation.py::test_fit_and_score_working\", \"sklearn/model_selection/tests/test_validation.py::test_gridsearchcv_cross_val_predict_with_method\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_batch_and_incremental_learning_are_equal\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_incremental_learning\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_incremental_learning_not_possible\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_incremental_learning_unsupervised\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_n_sample_range_out_of_bounds\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_remove_duplicate_sample_sizes\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_unsupervised\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_verbose\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_with_boolean_indices\", \"sklearn/model_selection/tests/test_validation.py::test_learning_curve_with_shuffle\", \"sklearn/model_selection/tests/test_validation.py::test_permutation_score\", \"sklearn/model_selection/tests/test_validation.py::test_permutation_test_score_allow_nans\", \"sklearn/model_selection/tests/test_validation.py::test_permutation_test_score_pandas\", \"sklearn/model_selection/tests/test_validation.py::test_score\", \"sklearn/model_selection/tests/test_validation.py::test_score_memmap\", \"sklearn/model_selection/tests/test_validation.py::test_validation_curve\", \"sklearn/model_selection/tests/test_validation.py::test_validation_curve_clone_estimator\", \"sklearn/model_selection/tests/test_validation.py::test_validation_curve_cv_splits_consistency\"]",
  "environment_setup_commit": "7813f7efb5b2012412888b69e73d76f2df2b50b6",
  "patch_files": [
    "sklearn/model_selection/_validation.py"
  ],
  "test_patch_files": [
    "sklearn/model_selection/tests/test_validation.py"
  ],
  "patch_diff_details": {
    "sklearn/model_selection/_validation.py": {
      "diffs": [
        {
          "start_line_old": 879,
          "end_line_old": 882,
          "file_pos": 2,
          "file_context_length": 14384,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py_cross_val_predict_cross_val_predict.1",
          "closest_snippet_line_distance": 133,
          "pos": 7,
          "context_length": 3341
        }
      ]
    }
  },
  "vectors": 3234,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_cv_indices.py_41_",
      "distance": 0.8322229981422424,
      "file_path": "examples/model_selection/plot_cv_indices.py",
      "start_line": 105,
      "end_line": 150,
      "tokens": 381,
      "context_length": 381
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py_cross_val_predict.2_cross_val_predict.17.1",
      "distance": 0.8978831171989441,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 750,
      "end_line": 782,
      "tokens": 348,
      "context_length": 729,
      "file_pos": 2
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_StratifiedKFold._make_test_folds_StratifiedKFold._make_test_folds.22.1",
      "distance": 0.9274955987930298,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 621,
      "end_line": 671,
      "tokens": 583,
      "context_length": 1312
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_cv_predict.py_1_",
      "distance": 0.935664713382721,
      "file_path": "examples/model_selection/plot_cv_predict.py",
      "start_line": 1,
      "end_line": 29,
      "tokens": 189,
      "context_length": 1501
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_predictions_check_classifiers_predictions.10",
      "distance": 0.9475938677787781,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1719,
      "end_line": 1760,
      "tokens": 417,
      "context_length": 1918
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py_cross_val_predict_cross_val_predict.1",
      "distance": 0.9479513764381409,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 640,
      "end_line": 749,
      "tokens": 961,
      "context_length": 2879,
      "file_pos": 5
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py__fit_and_predict.10__fit_and_predict.11.1",
      "distance": 0.9512149691581726,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 840,
      "end_line": 885,
      "tokens": 462,
      "context_length": 3341,
      "file_pos": 5
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_ShuffleSplit_ShuffleSplit.1",
      "distance": 0.9514293670654297,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1343,
      "end_line": 1410,
      "tokens": 835,
      "context_length": 4176
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_StratifiedShuffleSplit_StratifiedShuffleSplit.1",
      "distance": 0.9573187828063965,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1609,
      "end_line": 1670,
      "tokens": 758,
      "context_length": 4934
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_cv_indices.py_1_groups.1",
      "distance": 0.9631452560424805,
      "file_path": "examples/model_selection/plot_cv_indices.py",
      "start_line": 1,
      "end_line": 48,
      "tokens": 368,
      "context_length": 5302
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/examples/exercises/plot_cv_diabetes.py_1_",
      "distance": 0.9674735069274902,
      "file_path": "examples/exercises/plot_cv_diabetes.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 676,
      "context_length": 5978
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_StratifiedKFold_StratifiedKFold.__init__.2",
      "distance": 0.9679082632064819,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 559,
      "end_line": 619,
      "tokens": 584,
      "context_length": 6562
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_RepeatedStratifiedKFold_RepeatedStratifiedKFold.__init__.1",
      "distance": 0.9764842987060547,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1216,
      "end_line": 1266,
      "tokens": 483,
      "context_length": 7045
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/dummy.py_DummyClassifier.predict_DummyClassifier.predict.15.1",
      "distance": 0.9784215092658997,
      "file_path": "sklearn/dummy.py",
      "start_line": 160,
      "end_line": 233,
      "tokens": 617,
      "context_length": 7662
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/examples/feature_selection/plot_rfe_with_cross_validation.py_1_",
      "distance": 0.985197901725769,
      "file_path": "examples/feature_selection/plot_rfe_with_cross_validation.py",
      "start_line": 1,
      "end_line": 38,
      "tokens": 300,
      "context_length": 7962
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_roc_crossval.py_1_std_auc.1",
      "distance": 0.9871991872787476,
      "file_path": "examples/model_selection/plot_roc_crossval.py",
      "start_line": 1,
      "end_line": 87,
      "tokens": 740,
      "context_length": 8702
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_KFold_KFold.__init__.2",
      "distance": 0.9877513647079468,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 348,
      "end_line": 421,
      "tokens": 673,
      "context_length": 9375
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/examples/feature_selection/plot_permutation_test_for_classification.py_1_",
      "distance": 0.9923288822174072,
      "file_path": "examples/feature_selection/plot_permutation_test_for_classification.py",
      "start_line": 1,
      "end_line": 70,
      "tokens": 498,
      "context_length": 9873
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/classification.py_KNeighborsClassifier.predict_KNeighborsClassifier.predict.13.1",
      "distance": 0.9938013553619385,
      "file_path": "sklearn/neighbors/classification.py",
      "start_line": 133,
      "end_line": 173,
      "tokens": 345,
      "context_length": 10218
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_one_label_check_classifiers_one_label.8.5.2.2",
      "distance": 1.0030629634857178,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1373,
      "end_line": 1404,
      "tokens": 258,
      "context_length": 10476
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/dummy.py_DummyRegressor.predict_DummyRegressor._more_tags.1.1",
      "distance": 1.006615161895752,
      "file_path": "sklearn/dummy.py",
      "start_line": 478,
      "end_line": 513,
      "tokens": 289,
      "context_length": 10765
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/classes.py_OneClassSVM.predict_",
      "distance": 1.009598970413208,
      "file_path": "sklearn/svm/classes.py",
      "start_line": 1215,
      "end_line": 1234,
      "tokens": 138,
      "context_length": 10903
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/examples/datasets/plot_random_dataset.py_1_",
      "distance": 1.0113623142242432,
      "file_path": "examples/datasets/plot_random_dataset.py",
      "start_line": 1,
      "end_line": 68,
      "tokens": 645,
      "context_length": 11548
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_nested_cross_validation_iris.py_1_21",
      "distance": 1.0117709636688232,
      "file_path": "examples/model_selection/plot_nested_cross_validation_iris.py",
      "start_line": 1,
      "end_line": 73,
      "tokens": 640,
      "context_length": 12188
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_cv_indices.py_32_plot_cv_indices.11.1",
      "distance": 1.0125502347946167,
      "file_path": "examples/model_selection/plot_cv_indices.py",
      "start_line": 64,
      "end_line": 102,
      "tokens": 419,
      "context_length": 12607
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_RepeatedKFold_RepeatedKFold.__init__.1",
      "distance": 1.0127137899398804,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1163,
      "end_line": 1213,
      "tokens": 502,
      "context_length": 13109
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_grid_search_digits.py_1_",
      "distance": 1.0145725011825562,
      "file_path": "examples/model_selection/plot_grid_search_digits.py",
      "start_line": 1,
      "end_line": 78,
      "tokens": 629,
      "context_length": 13738
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py__CVIterableWrapper__CVIterableWrapper.get_n_splits.2.1",
      "distance": 1.0200233459472656,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1970,
      "end_line": 1994,
      "tokens": 142,
      "context_length": 13880
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_ZeroEstimator.predict_ZeroEstimator.predict_proba.1.1",
      "distance": 1.0242745876312256,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 306,
      "end_line": 326,
      "tokens": 150,
      "context_length": 14030
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_outliers_train_check_outliers_train.33.expected_outliers.14.2",
      "distance": 1.0253751277923584,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1546,
      "end_line": 1618,
      "tokens": 655,
      "context_length": 14685
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_nested_cross_validation_iris.py_22_",
      "distance": 1.0258920192718506,
      "file_path": "examples/model_selection/plot_nested_cross_validation_iris.py",
      "start_line": 74,
      "end_line": 119,
      "tokens": 433,
      "context_length": 15118
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_LeaveOneOut_LeaveOneOut._iter_test_indices.1.1",
      "distance": 1.0262820720672607,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 119,
      "end_line": 167,
      "tokens": 467,
      "context_length": 15585
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train.10_check_classifiers_train.10.24.y_prob.7.y_log_prob.3",
      "distance": 1.0271230936050415,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1424,
      "end_line": 1523,
      "tokens": 940,
      "context_length": 16525
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py_cross_validate.2_cross_validate.19.1",
      "distance": 1.0291651487350464,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 216,
      "end_line": 255,
      "tokens": 409,
      "context_length": 16934,
      "file_pos": 16
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/datasets/samples_generator.py_make_classification.31_make_classification.42.1",
      "distance": 1.030983567237854,
      "file_path": "sklearn/datasets/samples_generator.py",
      "start_line": 222,
      "end_line": 254,
      "tokens": 368,
      "context_length": 17302
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/examples/impute/plot_missing_values.py_get_results_get_results.24.1",
      "distance": 1.0323525667190552,
      "file_path": "examples/impute/plot_missing_values.py",
      "start_line": 49,
      "end_line": 93,
      "tokens": 440,
      "context_length": 17742
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_lof.py_15_",
      "distance": 1.0348879098892212,
      "file_path": "benchmarks/bench_lof.py",
      "start_line": 36,
      "end_line": 107,
      "tokens": 650,
      "context_length": 18392
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py__RepeatedSplits.get_n_splits__RepeatedSplits.get_n_splits.4.1",
      "distance": 1.0354795455932617,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1135,
      "end_line": 1160,
      "tokens": 206,
      "context_length": 18598
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_saga.py__predict_proba_exp.9.1",
      "distance": 1.0371301174163818,
      "file_path": "benchmarks/bench_saga.py",
      "start_line": 107,
      "end_line": 189,
      "tokens": 637,
      "context_length": 19235
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_data_not_an_array_check_estimators_data_not_an_array.14",
      "distance": 1.0375590324401855,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2108,
      "end_line": 2128,
      "tokens": 200,
      "context_length": 19435
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/bagging.py_BaggingClassifier._validate_y_BaggingClassifier.predict.3.1",
      "distance": 1.0399160385131836,
      "file_path": "sklearn/ensemble/bagging.py",
      "start_line": 622,
      "end_line": 650,
      "tokens": 231,
      "context_length": 19666
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_oob.py_1_37",
      "distance": 1.040791392326355,
      "file_path": "examples/ensemble/plot_gradient_boosting_oob.py",
      "start_line": 1,
      "end_line": 95,
      "tokens": 793,
      "context_length": 20459
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_fit2d_1sample_check_fit2d_1sample.rnd.10.2.1.1",
      "distance": 1.0415716171264648,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 853,
      "end_line": 878,
      "tokens": 234,
      "context_length": 20693
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_choose_check_classifiers_labels_check_classifiers_classes.19",
      "distance": 1.0424145460128784,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1763,
      "end_line": 1798,
      "tokens": 399,
      "context_length": 21092
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.3.2",
      "distance": 1.0426921844482422,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1898,
      "end_line": 1940,
      "tokens": 449,
      "context_length": 21541
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_StratifiedShuffleSplit.__init___StratifiedShuffleSplit._iter_indices.15.n_i.9",
      "distance": 1.0427485704421997,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1672,
      "end_line": 1735,
      "tokens": 607,
      "context_length": 22148
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_discretization_classification.py_1_classifiers.1",
      "distance": 1.0429573059082031,
      "file_path": "examples/preprocessing/plot_discretization_classification.py",
      "start_line": 1,
      "end_line": 89,
      "tokens": 793,
      "context_length": 22941
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_GradientBoostingClassifier.predict_GradientBoostingClassifier.predict.4.1",
      "distance": 1.0430629253387451,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 2101,
      "end_line": 2119,
      "tokens": 150,
      "context_length": 23091
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/multiclass.py__ConstantPredictor__ConstantPredictor.predict_proba.2.1",
      "distance": 1.0449728965759277,
      "file_path": "sklearn/multiclass.py",
      "start_line": 110,
      "end_line": 130,
      "tokens": 137,
      "context_length": 23228
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/base.py_LinearClassifierMixin.predict_LinearClassifierMixin.predict.4.1",
      "distance": 1.0462877750396729,
      "file_path": "sklearn/linear_model/base.py",
      "start_line": 276,
      "end_line": 294,
      "tokens": 126,
      "context_length": 23354
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/examples/datasets/plot_random_multilabel_dataset.py_1_RANDOM_SEED.1",
      "distance": 1.0471972227096558,
      "file_path": "examples/datasets/plot_random_multilabel_dataset.py",
      "start_line": 1,
      "end_line": 56,
      "tokens": 432,
      "context_length": 23786
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py_1_models.1",
      "distance": 1.047858476638794,
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py",
      "start_line": 1,
      "end_line": 63,
      "tokens": 497,
      "context_length": 24283
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/examples/classification/plot_classifier_comparison.py_36_",
      "distance": 1.0504353046417236,
      "file_path": "examples/classification/plot_classifier_comparison.py",
      "start_line": 79,
      "end_line": 145,
      "tokens": 710,
      "context_length": 24993
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseLibSVM.predict_BaseLibSVM.predict.4.1",
      "distance": 1.0535926818847656,
      "file_path": "sklearn/svm/base.py",
      "start_line": 307,
      "end_line": 324,
      "tokens": 152,
      "context_length": 25145
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_KFold._iter_test_indices_KFold._iter_test_indices.8.current.1",
      "distance": 1.0540090799331665,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 423,
      "end_line": 436,
      "tokens": 135,
      "context_length": 25280
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_out_of_core_classification.py_30_partial_fit_classifiers.1",
      "distance": 1.0542125701904297,
      "file_path": "examples/applications/plot_out_of_core_classification.py",
      "start_line": 187,
      "end_line": 214,
      "tokens": 241,
      "context_length": 25521
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/__init__.py_BaseCrossValidator_",
      "distance": 1.0556621551513672,
      "file_path": "sklearn/model_selection/__init__.py",
      "start_line": 1,
      "end_line": 60,
      "tokens": 405,
      "context_length": 25926
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_precision_recall.py_10_81",
      "distance": 1.0562142133712769,
      "file_path": "examples/model_selection/plot_precision_recall.py",
      "start_line": 101,
      "end_line": 205,
      "tokens": 770,
      "context_length": 26696
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_20newsgroups.py_1_",
      "distance": 1.0573793649673462,
      "file_path": "benchmarks/bench_20newsgroups.py",
      "start_line": 1,
      "end_line": 97,
      "tokens": 778,
      "context_length": 27474
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_TimeSeriesSplit_TimeSeriesSplit.__init__.self.max_train_size.1",
      "distance": 1.0581200122833252,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 716,
      "end_line": 775,
      "tokens": 646,
      "context_length": 28120
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/sklearn/svm/base.py_BaseSVC.predict_BaseSVC.predict.3.1",
      "distance": 1.0587549209594727,
      "file_path": "sklearn/svm/base.py",
      "start_line": 558,
      "end_line": 575,
      "tokens": 146,
      "context_length": 28266
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/examples/svm/plot_oneclass.py_1_",
      "distance": 1.0608117580413818,
      "file_path": "examples/svm/plot_oneclass.py",
      "start_line": 1,
      "end_line": 67,
      "tokens": 695,
      "context_length": 28961
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py__BaseKFold.get_n_splits__BaseKFold.get_n_splits.2.1",
      "distance": 1.060910940170288,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 326,
      "end_line": 345,
      "tokens": 119,
      "context_length": 29080
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/datasets/samples_generator.py_make_multilabel_classification.X_indices_make_multilabel_classification.20.1",
      "distance": 1.0617849826812744,
      "file_path": "sklearn/datasets/samples_generator.py",
      "start_line": 380,
      "end_line": 404,
      "tokens": 295,
      "context_length": 29375
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/examples/multioutput/plot_classifier_chain_yeast.py_1_ensemble_jaccard_score.1",
      "distance": 1.0631005764007568,
      "file_path": "examples/multioutput/plot_classifier_chain_yeast.py",
      "start_line": 1,
      "end_line": 77,
      "tokens": 753,
      "context_length": 30128
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/classification.py_RadiusNeighborsClassifier.predict_",
      "distance": 1.0639708042144775,
      "file_path": "sklearn/neighbors/classification.py",
      "start_line": 338,
      "end_line": 402,
      "tokens": 538,
      "context_length": 30666
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_nan_inf_check_estimators_nan_inf.rnd.13.2.10.1.4.1",
      "distance": 1.0644893646240234,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1152,
      "end_line": 1220,
      "tokens": 601,
      "context_length": 31267
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/examples/calibration/plot_calibration_multiclass.py_1_41",
      "distance": 1.0645625591278076,
      "file_path": "examples/calibration/plot_calibration_multiclass.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 764,
      "context_length": 32031
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_assumptions.py_1_",
      "distance": 1.0654984712600708,
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 511,
      "context_length": 32542
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_outliers_fit_predict_check_outliers_fit_predict.n_samples.15.expected_outliers.12.2",
      "distance": 1.0658693313598633,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2384,
      "end_line": 2428,
      "tokens": 427,
      "context_length": 32969
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/mocking.py_CheckingClassifier.predict_",
      "distance": 1.0664232969284058,
      "file_path": "sklearn/utils/mocking.py",
      "start_line": 108,
      "end_line": 138,
      "tokens": 220,
      "context_length": 33189
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_BaseShuffleSplit._iter_indices_BaseShuffleSplit.__repr__.1.1",
      "distance": 1.067863941192627,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1314,
      "end_line": 1340,
      "tokens": 160,
      "context_length": 33349
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py__RepeatedSplits__RepeatedSplits.__init__.self.cvargs.1",
      "distance": 1.0682529211044312,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1062,
      "end_line": 1100,
      "tokens": 314,
      "context_length": 33663
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/datasets/samples_generator.py_make_classification.generator_make_classification.30",
      "distance": 1.0683701038360596,
      "file_path": "sklearn/datasets/samples_generator.py",
      "start_line": 154,
      "end_line": 221,
      "tokens": 785,
      "context_length": 34448
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py_RidgeClassifierCV_RidgeClassifierCV.1",
      "distance": 1.0704400539398193,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 1337,
      "end_line": 1440,
      "tokens": 977,
      "context_length": 35425
    },
    {
      "position": 76,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py_cross_val_score_cross_val_score.5.1",
      "distance": 1.0705256462097168,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 258,
      "end_line": 384,
      "tokens": 1143,
      "context_length": 36568,
      "file_pos": 39
    },
    {
      "position": 77,
      "id": "/tmp/repos/scikit-learn/examples/exercises/plot_cv_digits.py_1_",
      "distance": 1.0713709592819214,
      "file_path": "examples/exercises/plot_cv_digits.py",
      "start_line": 1,
      "end_line": 45,
      "tokens": 313,
      "context_length": 36881
    },
    {
      "position": 78,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/logistic.py_LogisticRegressionCV.fit.57_LogisticRegressionCV.fit.57.3.5.2.1",
      "distance": 1.0734362602233887,
      "file_path": "sklearn/linear_model/logistic.py",
      "start_line": 2135,
      "end_line": 2211,
      "tokens": 820,
      "context_length": 37701
    }
  ],
  "files": [
    {
      "file_path": "examples/model_selection/plot_cv_indices.py",
      "position": 1,
      "tokens": 1315,
      "context_length": 1315
    },
    {
      "file_path": "sklearn/model_selection/_validation.py",
      "position": 2,
      "tokens": 13069,
      "context_length": 14384
    },
    {
      "file_path": "sklearn/model_selection/_split.py",
      "position": 3,
      "tokens": 19394,
      "context_length": 33778
    },
    {
      "file_path": "examples/model_selection/plot_cv_predict.py",
      "position": 4,
      "tokens": 189,
      "context_length": 33967
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 5,
      "tokens": 21935,
      "context_length": 55902
    },
    {
      "file_path": "examples/exercises/plot_cv_diabetes.py",
      "position": 6,
      "tokens": 676,
      "context_length": 56578
    },
    {
      "file_path": "sklearn/dummy.py",
      "position": 7,
      "tokens": 4403,
      "context_length": 60981
    },
    {
      "file_path": "examples/feature_selection/plot_rfe_with_cross_validation.py",
      "position": 8,
      "tokens": 300,
      "context_length": 61281
    },
    {
      "file_path": "examples/model_selection/plot_roc_crossval.py",
      "position": 9,
      "tokens": 934,
      "context_length": 62215
    },
    {
      "file_path": "examples/feature_selection/plot_permutation_test_for_classification.py",
      "position": 10,
      "tokens": 524,
      "context_length": 62739
    },
    {
      "file_path": "sklearn/neighbors/classification.py",
      "position": 11,
      "tokens": 3388,
      "context_length": 66127
    },
    {
      "file_path": "sklearn/svm/classes.py",
      "position": 12,
      "tokens": 11432,
      "context_length": 77559
    },
    {
      "file_path": "examples/datasets/plot_random_dataset.py",
      "position": 13,
      "tokens": 645,
      "context_length": 78204
    },
    {
      "file_path": "examples/model_selection/plot_nested_cross_validation_iris.py",
      "position": 14,
      "tokens": 1074,
      "context_length": 79278
    },
    {
      "file_path": "examples/model_selection/plot_grid_search_digits.py",
      "position": 15,
      "tokens": 629,
      "context_length": 79907
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 16,
      "tokens": 21241,
      "context_length": 101148
    },
    {
      "file_path": "sklearn/datasets/samples_generator.py",
      "position": 17,
      "tokens": 14010,
      "context_length": 115158
    },
    {
      "file_path": "examples/impute/plot_missing_values.py",
      "position": 18,
      "tokens": 1204,
      "context_length": 116362
    },
    {
      "file_path": "benchmarks/bench_lof.py",
      "position": 19,
      "tokens": 916,
      "context_length": 117278
    },
    {
      "file_path": "benchmarks/bench_saga.py",
      "position": 20,
      "tokens": 2466,
      "context_length": 119744
    },
    {
      "file_path": "sklearn/ensemble/bagging.py",
      "position": 21,
      "tokens": 7984,
      "context_length": 127728
    },
    {
      "file_path": "examples/ensemble/plot_gradient_boosting_oob.py",
      "position": 22,
      "tokens": 1245,
      "context_length": 128973
    },
    {
      "file_path": "examples/preprocessing/plot_discretization_classification.py",
      "position": 23,
      "tokens": 1846,
      "context_length": 130819
    },
    {
      "file_path": "sklearn/multiclass.py",
      "position": 24,
      "tokens": 6439,
      "context_length": 137258
    },
    {
      "file_path": "sklearn/linear_model/base.py",
      "position": 25,
      "tokens": 4761,
      "context_length": 142019
    },
    {
      "file_path": "examples/datasets/plot_random_multilabel_dataset.py",
      "position": 26,
      "tokens": 883,
      "context_length": 142902
    },
    {
      "file_path": "examples/linear_model/plot_sparse_logistic_regression_20newsgroups.py",
      "position": 27,
      "tokens": 1029,
      "context_length": 143931
    },
    {
      "file_path": "examples/classification/plot_classifier_comparison.py",
      "position": 28,
      "tokens": 1352,
      "context_length": 145283
    },
    {
      "file_path": "sklearn/svm/base.py",
      "position": 29,
      "tokens": 8216,
      "context_length": 153499
    },
    {
      "file_path": "examples/applications/plot_out_of_core_classification.py",
      "position": 30,
      "tokens": 3305,
      "context_length": 156804
    },
    {
      "file_path": "sklearn/model_selection/__init__.py",
      "position": 31,
      "tokens": 405,
      "context_length": 157209
    },
    {
      "file_path": "examples/model_selection/plot_precision_recall.py",
      "position": 32,
      "tokens": 2342,
      "context_length": 159551
    },
    {
      "file_path": "benchmarks/bench_20newsgroups.py",
      "position": 33,
      "tokens": 778,
      "context_length": 160329
    },
    {
      "file_path": "examples/svm/plot_oneclass.py",
      "position": 34,
      "tokens": 695,
      "context_length": 161024
    },
    {
      "file_path": "examples/multioutput/plot_classifier_chain_yeast.py",
      "position": 35,
      "tokens": 1044,
      "context_length": 162068
    },
    {
      "file_path": "examples/calibration/plot_calibration_multiclass.py",
      "position": 36,
      "tokens": 2131,
      "context_length": 164199
    },
    {
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "position": 37,
      "tokens": 533,
      "context_length": 164732
    },
    {
      "file_path": "sklearn/utils/mocking.py",
      "position": 38,
      "tokens": 909,
      "context_length": 165641
    },
    {
      "file_path": "sklearn/linear_model/ridge.py",
      "position": 39,
      "tokens": 13385,
      "context_length": 179026
    },
    {
      "file_path": "examples/exercises/plot_cv_digits.py",
      "position": 40,
      "tokens": 313,
      "context_length": 179339
    },
    {
      "file_path": "sklearn/linear_model/logistic.py",
      "position": 41,
      "tokens": 22042,
      "context_length": 201381
    }
  ]
}