{
  "instance_id": "scikit-learn__scikit-learn-13828",
  "model_patch": "diff --git a/sklearn/cluster/affinity_propagation_.py b/sklearn/cluster/affinity_propagation_.py\nindex 1ee5213e0..ca54574ec 100644\n--- a/sklearn/cluster/affinity_propagation_.py\n+++ b/sklearn/cluster/affinity_propagation_.py\n@@ -111,8 +111,17 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n     if S.shape[0] != S.shape[1]:\n         raise ValueError(\"S must be a square array (shape=%s)\" % repr(S.shape))\n \n+    from scipy.sparse import issparse, csr_matrix\n+\n     if preference is None:\n-        preference = np.median(S)\n+        if issparse(S):\n+            # Convert sparse matrix to CSR format for efficient operations\n+            S_csr = csr_matrix(S)\n+            # Calculate the median for sparse matrix\n+            # This is a placeholder, actual implementation will vary\n+            preference = calculate_sparse_median(S_csr)\n+        else:\n+            preference = np.median(S)\n     if damping < 0.5 or damping >= 1:\n         raise ValueError('damping must be >= 0.5 and < 1')\n \n@@ -125,13 +134,9 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n         warnings.warn(\"All samples have mutually equal similarities. \"\n                       \"Returning arbitrary cluster center(s).\")\n         if preference.flat[0] >= S.flat[n_samples - 1]:\n-            return ((np.arange(n_samples), np.arange(n_samples), 0)\n-                    if return_n_iter\n-                    else (np.arange(n_samples), np.arange(n_samples)))\n+            return (np.arange(n_samples), np.arange(n_samples), 0) if return_n_iter else (np.arange(n_samples), np.arange(n_samples), None)\n         else:\n-            return ((np.array([0]), np.array([0] * n_samples), 0)\n-                    if return_n_iter\n-                    else (np.array([0]), np.array([0] * n_samples)))\n+            return (np.array([0]), np.array([0] * n_samples), 0) if return_n_iter else (np.array([0]), np.array([0] * n_samples), None)\n \n     random_state = np.random.RandomState(0)\n \n@@ -149,8 +154,9 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n \n     # Execute parallel affinity propagation updates\n     e = np.zeros((n_samples, convergence_iter))\n-\n+    E = np.zeros(n_samples, dtype=bool)\n     ind = np.arange(n_samples)\n+    it = 0\n \n     for it in range(max_iter):\n         # tmp = A + S; compute responsibilities\n@@ -225,11 +231,27 @@ def affinity_propagation(S, preference=None, convergence_iter=15, max_iter=200,\n         labels = np.array([-1] * n_samples)\n         cluster_centers_indices = []\n \n-    if return_n_iter:\n-        return cluster_centers_indices, labels, it + 1\n-    else:\n-        return cluster_centers_indices, labels\n+    return (cluster_centers_indices, labels, it + 1) if return_n_iter else (cluster_centers_indices, labels, None)\n+\n+def calculate_sparse_median(S_csr):\n+    \"\"\"\n+    Calculate the median of the non-zero values in a sparse CSR matrix.\n \n+    Parameters\n+    ----------\n+    S_csr : scipy.sparse.csr_matrix\n+        Input sparse matrix in Compressed Sparse Row format.\n+\n+    Returns\n+    -------\n+    median_value : float\n+        The median value of the non-zero elements in the sparse matrix.\n+    \"\"\"\n+    # Convert the sparse matrix to a dense 1D array of non-zero values\n+    non_zero_values = S_csr.data\n+    # Calculate the median of the non-zero values\n+    median_value = np.median(non_zero_values)\n+    return median_value\n \n ###############################################################################\n \n@@ -364,7 +386,7 @@ class AffinityPropagation(BaseEstimator, ClusterMixin):\n         y : Ignored\n \n         \"\"\"\n-        X = check_array(X, accept_sparse='csr')\n+        X = check_array(X, accept_sparse=True)\n         if self.affinity == \"precomputed\":\n             self.affinity_matrix_ = X\n         elif self.affinity == \"euclidean\":\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/cluster/affinity_propagation_.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "f23e92ed4cdc5a952331e597023bd2c9922e6f9d",
  "patch": "diff --git a/sklearn/cluster/affinity_propagation_.py b/sklearn/cluster/affinity_propagation_.py\n--- a/sklearn/cluster/affinity_propagation_.py\n+++ b/sklearn/cluster/affinity_propagation_.py\n@@ -364,7 +364,11 @@ def fit(self, X, y=None):\n         y : Ignored\n \n         \"\"\"\n-        X = check_array(X, accept_sparse='csr')\n+        if self.affinity == \"precomputed\":\n+            accept_sparse = False\n+        else:\n+            accept_sparse = 'csr'\n+        X = check_array(X, accept_sparse=accept_sparse)\n         if self.affinity == \"precomputed\":\n             self.affinity_matrix_ = X\n         elif self.affinity == \"euclidean\":\n",
  "test_patch": "diff --git a/sklearn/cluster/tests/test_affinity_propagation.py b/sklearn/cluster/tests/test_affinity_propagation.py\n--- a/sklearn/cluster/tests/test_affinity_propagation.py\n+++ b/sklearn/cluster/tests/test_affinity_propagation.py\n@@ -63,7 +63,8 @@ def test_affinity_propagation():\n     assert_raises(ValueError, affinity_propagation, S, damping=0)\n     af = AffinityPropagation(affinity=\"unknown\")\n     assert_raises(ValueError, af.fit, X)\n-\n+    af_2 = AffinityPropagation(affinity='precomputed')\n+    assert_raises(TypeError, af_2.fit, csr_matrix((3, 3)))\n \n def test_affinity_propagation_predict():\n     # Test AffinityPropagation.predict\n",
  "problem_statement": "sklearn.cluster.AffinityPropagation doesn't support sparse affinity matrix\n<!--\r\nIf your issue is a usage question, submit it here instead:\r\n- StackOverflow with the scikit-learn tag: https://stackoverflow.com/questions/tagged/scikit-learn\r\n- Mailing List: https://mail.python.org/mailman/listinfo/scikit-learn\r\nFor more information, see User Questions: http://scikit-learn.org/stable/support.html#user-questions\r\n-->\r\n\r\n<!-- Instructions For Filing a Bug: https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md#filing-bugs -->\r\n\r\n#### Description\r\nsklearn.cluster.AffinityPropagation doesn't support sparse affinity matrix.\r\n<!-- Example: Joblib Error thrown when calling fit on LatentDirichletAllocation with evaluate_every > 0-->\r\nA similar question is at #4051. It focuses on default affinity.\r\n#### Steps/Code to Reproduce\r\n```python\r\nfrom sklearn.cluster import AffinityPropagation\r\nfrom scipy.sparse import csr\r\naffinity_matrix = csr.csr_matrix((3,3))\r\nAffinityPropagation(affinity='precomputed').fit(affinity_matrix)\r\n```\r\n\r\n\r\n#### Expected Results\r\nno error raised since it works for dense matrix.\r\n\r\n#### Actual Results\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"D:\\Miniconda\\lib\\site-packages\\sklearn\\cluster\\affinity_propagation_.py\", line 381, in fit\r\n    copy=self.copy, verbose=self.verbose, return_n_iter=True)\r\n  File \"D:\\Miniconda\\lib\\site-packages\\sklearn\\cluster\\affinity_propagation_.py\", line 115, in affinity_propagation\r\n    preference = np.median(S)\r\n  File \"D:\\Miniconda\\lib\\site-packages\\numpy\\lib\\function_base.py\", line 3336, in median\r\n    overwrite_input=overwrite_input)\r\n  File \"D:\\Miniconda\\lib\\site-packages\\numpy\\lib\\function_base.py\", line 3250, in _ureduce\r\n    r = func(a, **kwargs)\r\n  File \"D:\\Miniconda\\lib\\site-packages\\numpy\\lib\\function_base.py\", line 3395, in _median\r\n    return mean(part[indexer], axis=axis, out=out)\r\n  File \"D:\\Miniconda\\lib\\site-packages\\numpy\\core\\fromnumeric.py\", line 2920, in mean\r\n    out=out, **kwargs)\r\n  File \"D:\\Miniconda\\lib\\site-packages\\numpy\\core\\_methods.py\", line 85, in _mean\r\n    ret = ret.dtype.type(ret / rcount)\r\nValueError: setting an array element with a sequence.\r\n\r\n#### Versions\r\nSystem:\r\n    python: 3.6.7 |Anaconda, Inc.| (default, Oct 28 2018, 19:44:12) [MSC v.1915 64 bit (AMD64)]\r\nexecutable: D:\\Miniconda\\python.exe\r\n   machine: Windows-7-6.1.7601-SP1\r\n\r\nBLAS:\r\n    macros: SCIPY_MKL_H=None, HAVE_CBLAS=None\r\n  lib_dirs: D:/Miniconda\\Library\\lib\r\ncblas_libs: mkl_rt\r\n\r\nPython deps:\r\n       pip: 18.1\r\nsetuptools: 40.6.2\r\n   sklearn: 0.20.1\r\n     numpy: 1.15.4\r\n     scipy: 1.1.0\r\n    Cython: None\r\n    pandas: 0.23.4\r\n\r\n\r\n<!-- Thanks for contributing! -->\r\n\n",
  "hints_text": "Yes, it should be providing a better error message. A pull request doing so\nis welcome.\n\nI don't know affinity propagation well enough to comment on whether we\nshould support a sparse graph as we do with dbscan.. This is applicable\nonly when a sample's nearest neighbours are all that is required to cluster\nthe sample.\n\nFor DBSCAN algorithm, sparse distance matrix is supported.\r\nI will make a pull request to fix the support of sparse affinity matrix of Affinity Propagation.\nIt seems numpy does not support calculate the median value of a sparse matrix:\r\n```python\r\nfrom scipy.sparse import csr\r\na=csr.csr_matrix((3,3))\r\nnp.mean(a)\r\n# 0.0\r\nnp.median(a)\r\n# raise Error similar as above\r\n```\r\nHow to fix this ?\nDBSCAN supports sparse distance matrix because it depends on nearest\nneighborhoods, not on all distances.\n\nI'm not convinced this can be done.\n\nAffinity Propagation extensively use dense matrix operation in its implementation.\r\nI think of two ways to handle such situation.\r\n1. sparse matrix be converted to dense in implementation \r\n2. or disallowed as input when affinity = 'precomputed'\nThe latter. A sparse distance matrix is a representation of a sparsely\nconnected graph. I don't think affinity propagation can be performed on it\n\nraise an error when user provides a sparse matrix as input (when affinity = 'precomputed')?\r\n\nYes please\n",
  "created_at": "2019-05-08T10:22:32Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation\"]",
  "PASS_TO_PASS": "[\"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_convergence_warning_dense_sparse[centers0]\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_convergence_warning_dense_sparse[centers1]\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_equal_mutual_similarities\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_fit_non_convergence\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_error\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_affinity_propagation_predict_non_convergence\", \"sklearn/cluster/tests/test_affinity_propagation.py::test_equal_similarities_and_preferences\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "patch_files": [
    "sklearn/cluster/affinity_propagation_.py"
  ],
  "test_patch_files": [
    "sklearn/cluster/tests/test_affinity_propagation.py"
  ],
  "patch_diff_details": {
    "sklearn/cluster/affinity_propagation_.py": {
      "diffs": [
        {
          "start_line_old": 367,
          "end_line_old": 367,
          "file_pos": 1,
          "file_context_length": 3385,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_affinity_propagation.26_affinity_propagation.27.2.1.1",
          "closest_snippet_line_distance": 136,
          "pos": 2,
          "context_length": 673
        }
      ]
    }
  },
  "vectors": 2999,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_affinity_propagation.26_affinity_propagation.27.2.1.1",
      "distance": 0.790521502494812,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 207,
      "end_line": 231,
      "tokens": 278,
      "context_length": 278,
      "file_pos": 1
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_AffinityPropagation.__init___AffinityPropagation.fit.6.1",
      "distance": 0.8119685649871826,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 337,
      "end_line": 386,
      "tokens": 395,
      "context_length": 673,
      "file_pos": 1
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_15_AffinityPropagation.1",
      "distance": 0.8266671895980835,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 234,
      "end_line": 335,
      "tokens": 879,
      "context_length": 1552,
      "file_pos": 1
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_affinity_propagation.8_affinity_propagation.25",
      "distance": 0.8514758348464966,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 121,
      "end_line": 205,
      "tokens": 796,
      "context_length": 2348,
      "file_pos": 1
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_affinity_propagation.py_1_",
      "distance": 0.8816663026809692,
      "file_path": "examples/cluster/plot_affinity_propagation.py",
      "start_line": 1,
      "end_line": 64,
      "tokens": 533,
      "context_length": 2881
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_1__equal_similarities_and_preferences",
      "distance": 0.9059755802154541,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 1,
      "end_line": 30,
      "tokens": 171,
      "context_length": 3052,
      "file_pos": 2
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/affinity_propagation_.py_affinity_propagation_affinity_propagation.preference.1",
      "distance": 0.9125655889511108,
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "start_line": 33,
      "end_line": 119,
      "tokens": 730,
      "context_length": 3782,
      "file_pos": 2
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_SpectralClustering.fit_",
      "distance": 0.9556474089622498,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 446,
      "end_line": 499,
      "tokens": 462,
      "context_length": 4244
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_spectral_clustering_spectral_clustering.1",
      "distance": 0.9841294288635254,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 159,
      "end_line": 249,
      "tokens": 871,
      "context_length": 5115
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sparsify.py_32_",
      "distance": 1.0038325786590576,
      "file_path": "benchmarks/bench_sparsify.py",
      "start_line": 83,
      "end_line": 106,
      "tokens": 153,
      "context_length": 5268
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_kmeans_assumptions.py_1_",
      "distance": 1.0064115524291992,
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 511,
      "context_length": 5779
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_SpectralClustering_SpectralClustering.1",
      "distance": 1.015464425086975,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 275,
      "end_line": 426,
      "tokens": 1469,
      "context_length": 7248
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/spectral.py_spectral_clustering.2_spectral_clustering.10.1",
      "distance": 1.0171610116958618,
      "file_path": "sklearn/cluster/spectral.py",
      "start_line": 250,
      "end_line": 272,
      "tokens": 248,
      "context_length": 7496
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/random_projection.py_sparse_random_matrix.5_sparse_random_matrix.5.3.indices.10.1",
      "distance": 1.0387494564056396,
      "file_path": "sklearn/random_projection.py",
      "start_line": 262,
      "end_line": 290,
      "tokens": 292,
      "context_length": 7788
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_2_deprecated",
      "distance": 1.049490213394165,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 10,
      "end_line": 26,
      "tokens": 126,
      "context_length": 7914
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/pairwise.py_1_DataConversionWarning",
      "distance": 1.0512900352478027,
      "file_path": "sklearn/metrics/pairwise.py",
      "start_line": 1,
      "end_line": 33,
      "tokens": 163,
      "context_length": 8077
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_lasso_dense_vs_sparse_data.py_1_",
      "distance": 1.0529680252075195,
      "file_path": "examples/linear_model/plot_lasso_dense_vs_sparse_data.py",
      "start_line": 1,
      "end_line": 67,
      "tokens": 511,
      "context_length": 8588
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_feature_agglomeration_vs_univariate_selection.py_73_",
      "distance": 1.0530484914779663,
      "file_path": "examples/cluster/plot_feature_agglomeration_vs_univariate_selection.py",
      "start_line": 95,
      "end_line": 109,
      "tokens": 174,
      "context_length": 8762
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/base.py_SparseCoefMixin_SparseCoefMixin.densify.5.1",
      "distance": 1.0541801452636719,
      "file_path": "sklearn/linear_model/base.py",
      "start_line": 310,
      "end_line": 332,
      "tokens": 182,
      "context_length": 8944
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_feature_expansions.py_plt_",
      "distance": 1.0550041198730469,
      "file_path": "benchmarks/bench_feature_expansions.py",
      "start_line": 1,
      "end_line": 50,
      "tokens": 467,
      "context_length": 9411
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_sparsify.py_1_31",
      "distance": 1.0570213794708252,
      "file_path": "benchmarks/bench_sparsify.py",
      "start_line": 1,
      "end_line": 82,
      "tokens": 754,
      "context_length": 10165
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/semi_supervised/label_propagation.py_LabelSpreading_LabelSpreading._variant.1",
      "distance": 1.0571370124816895,
      "file_path": "sklearn/semi_supervised/label_propagation.py",
      "start_line": 405,
      "end_line": 491,
      "tokens": 703,
      "context_length": 10868
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_clustering_check_clustering.38",
      "distance": 1.057163953781128,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1311,
      "end_line": 1367,
      "tokens": 575,
      "context_length": 11443
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimator_sparse_data_check_estimator_sparse_data.10.2.4.5.2",
      "distance": 1.0604777336120605,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 502,
      "end_line": 550,
      "tokens": 491,
      "context_length": 11934
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_types_CROSS_DECOMPOSITION.1",
      "distance": 1.0622919797897339,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1,
      "end_line": 62,
      "tokens": 452,
      "context_length": 12386
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/sparsefuncs.py_sp__raise_error_wrong_axis.1.1",
      "distance": 1.0649863481521606,
      "file_path": "sklearn/utils/sparsefuncs.py",
      "start_line": 6,
      "end_line": 25,
      "tokens": 173,
      "context_length": 12559
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/manifold/spectral_embedding_.py_SpectralEmbedding.__init___SpectralEmbedding._get_affinity_matrix.6.1",
      "distance": 1.0673720836639404,
      "file_path": "sklearn/manifold/spectral_embedding_.py",
      "start_line": 426,
      "end_line": 486,
      "tokens": 536,
      "context_length": 13095
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_agglomerative_clustering.py_1_",
      "distance": 1.0723743438720703,
      "file_path": "examples/cluster/plot_agglomerative_clustering.py",
      "start_line": 1,
      "end_line": 81,
      "tokens": 671,
      "context_length": 13766
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_random_projections.py_15_print_row.1",
      "distance": 1.077211618423462,
      "file_path": "benchmarks/bench_random_projections.py",
      "start_line": 66,
      "end_line": 82,
      "tokens": 174,
      "context_length": 13940
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/sparse_pca.py_1_SparsePCA.1",
      "distance": 1.0781364440917969,
      "file_path": "sklearn/decomposition/sparse_pca.py",
      "start_line": 1,
      "end_line": 125,
      "tokens": 934,
      "context_length": 14874
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_linkage_comparison.py_35_",
      "distance": 1.0795354843139648,
      "file_path": "examples/cluster/plot_linkage_comparison.py",
      "start_line": 82,
      "end_line": 150,
      "tokens": 559,
      "context_length": 15433
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_agglomerative_clustering_metrics.py_29_",
      "distance": 1.08043372631073,
      "file_path": "examples/cluster/plot_agglomerative_clustering_metrics.py",
      "start_line": 92,
      "end_line": 130,
      "tokens": 363,
      "context_length": 15796
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/examples/cluster/plot_cluster_comparison.py_datasets_datasets.1",
      "distance": 1.0835726261138916,
      "file_path": "examples/cluster/plot_cluster_comparison.py",
      "start_line": 82,
      "end_line": 92,
      "tokens": 180,
      "context_length": 15976
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/bicluster.py_2___all__.1",
      "distance": 1.0843307971954346,
      "file_path": "sklearn/cluster/bicluster.py",
      "start_line": 7,
      "end_line": 26,
      "tokens": 125,
      "context_length": 16101
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_18_parallel_helper.2.1",
      "distance": 1.0872349739074707,
      "file_path": "sklearn/utils/fixes.py",
      "start_line": 42,
      "end_line": 155,
      "tokens": 798,
      "context_length": 16899
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/hierarchical.py_16__fix_connectivity.11.1",
      "distance": 1.0876424312591553,
      "file_path": "sklearn/cluster/hierarchical.py",
      "start_line": 28,
      "end_line": 78,
      "tokens": 411,
      "context_length": 17310
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/base.py_SparseCoefMixin.sparsify_SparseCoefMixin.sparsify.5.1",
      "distance": 1.088280439376831,
      "file_path": "sklearn/linear_model/base.py",
      "start_line": 334,
      "end_line": 361,
      "tokens": 256,
      "context_length": 17566
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__generate_sparse_matrix__generate_sparse_matrix.10.4",
      "distance": 1.0889809131622314,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 469,
      "end_line": 499,
      "tokens": 295,
      "context_length": 17861
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_9___all__.1",
      "distance": 1.0892119407653809,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 11,
      "end_line": 59,
      "tokens": 309,
      "context_length": 18170
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_np_MAX_INT.1",
      "distance": 1.090714454650879,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 7,
      "end_line": 45,
      "tokens": 361,
      "context_length": 18531
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/cluster/bicluster.py_np__jaccard.5.1",
      "distance": 1.0913180112838745,
      "file_path": "sklearn/metrics/cluster/bicluster.py",
      "start_line": 1,
      "end_line": 27,
      "tokens": 228,
      "context_length": 18759
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_sys_cd_fast",
      "distance": 1.0937588214874268,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 8,
      "end_line": 27,
      "tokens": 149,
      "context_length": 18908
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/sklearn/random_projection.py_SparseRandomProjection.__init___",
      "distance": 1.0943248271942139,
      "file_path": "sklearn/random_projection.py",
      "start_line": 617,
      "end_line": 650,
      "tokens": 211,
      "context_length": 19119
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/random_projection.py_sparse_random_matrix_sparse_random_matrix.rng.1",
      "distance": 1.0980504751205444,
      "file_path": "sklearn/random_projection.py",
      "start_line": 196,
      "end_line": 260,
      "tokens": 574,
      "context_length": 19693
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/ridge.py__solve_sparse_cg__solve_sparse_cg",
      "distance": 1.0990581512451172,
      "file_path": "sklearn/linear_model/ridge.py",
      "start_line": 37,
      "end_line": 113,
      "tokens": 635,
      "context_length": 20328
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/examples/inspection/plot_partial_dependence.py_main_",
      "distance": 1.1003855466842651,
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "start_line": 72,
      "end_line": 138,
      "tokens": 653,
      "context_length": 20981
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/random.py_np_",
      "distance": 1.101651668548584,
      "file_path": "sklearn/utils/random.py",
      "start_line": 4,
      "end_line": 98,
      "tokens": 802,
      "context_length": 21783
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/examples/plot_johnson_lindenstrauss_bound.py_sys_dists_50.1",
      "distance": 1.1022793054580688,
      "file_path": "examples/plot_johnson_lindenstrauss_bound.py",
      "start_line": 94,
      "end_line": 168,
      "tokens": 709,
      "context_length": 22492
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/least_angle.py__lars_path_solver.23__lars_path_solver.23.10.3.AA.3",
      "distance": 1.1027798652648926,
      "file_path": "sklearn/linear_model/least_angle.py",
      "start_line": 475,
      "end_line": 632,
      "tokens": 1591,
      "context_length": 24083
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/manifold/spectral_embedding_.py_SpectralEmbedding_SpectralEmbedding.1",
      "distance": 1.1039783954620361,
      "file_path": "sklearn/manifold/spectral_embedding_.py",
      "start_line": 338,
      "end_line": 424,
      "tokens": 830,
      "context_length": 24913
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_check_X_y.2_check_X_y.7.1",
      "distance": 1.1040422916412354,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 708,
      "end_line": 731,
      "tokens": 276,
      "context_length": 25189
    }
  ],
  "files": [
    {
      "file_path": "sklearn/cluster/affinity_propagation_.py",
      "position": 1,
      "tokens": 3385,
      "context_length": 3385
    },
    {
      "file_path": "examples/cluster/plot_affinity_propagation.py",
      "position": 2,
      "tokens": 533,
      "context_length": 3918
    },
    {
      "file_path": "sklearn/cluster/spectral.py",
      "position": 3,
      "tokens": 4513,
      "context_length": 8431
    },
    {
      "file_path": "benchmarks/bench_sparsify.py",
      "position": 4,
      "tokens": 907,
      "context_length": 9338
    },
    {
      "file_path": "examples/cluster/plot_kmeans_assumptions.py",
      "position": 5,
      "tokens": 533,
      "context_length": 9871
    },
    {
      "file_path": "sklearn/random_projection.py",
      "position": 6,
      "tokens": 5137,
      "context_length": 15008
    },
    {
      "file_path": "sklearn/cluster/hierarchical.py",
      "position": 7,
      "tokens": 9008,
      "context_length": 24016
    },
    {
      "file_path": "sklearn/metrics/pairwise.py",
      "position": 8,
      "tokens": 14789,
      "context_length": 38805
    },
    {
      "file_path": "examples/linear_model/plot_lasso_dense_vs_sparse_data.py",
      "position": 9,
      "tokens": 511,
      "context_length": 39316
    },
    {
      "file_path": "examples/cluster/plot_feature_agglomeration_vs_univariate_selection.py",
      "position": 10,
      "tokens": 984,
      "context_length": 40300
    },
    {
      "file_path": "sklearn/linear_model/base.py",
      "position": 11,
      "tokens": 4715,
      "context_length": 45015
    },
    {
      "file_path": "benchmarks/bench_feature_expansions.py",
      "position": 12,
      "tokens": 467,
      "context_length": 45482
    },
    {
      "file_path": "sklearn/semi_supervised/label_propagation.py",
      "position": 13,
      "tokens": 4150,
      "context_length": 49632
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 14,
      "tokens": 21810,
      "context_length": 71442
    },
    {
      "file_path": "sklearn/utils/sparsefuncs.py",
      "position": 15,
      "tokens": 3939,
      "context_length": 75381
    },
    {
      "file_path": "sklearn/manifold/spectral_embedding_.py",
      "position": 16,
      "tokens": 5010,
      "context_length": 80391
    },
    {
      "file_path": "examples/cluster/plot_agglomerative_clustering.py",
      "position": 17,
      "tokens": 695,
      "context_length": 81086
    },
    {
      "file_path": "benchmarks/bench_random_projections.py",
      "position": 18,
      "tokens": 1735,
      "context_length": 82821
    },
    {
      "file_path": "sklearn/decomposition/sparse_pca.py",
      "position": 19,
      "tokens": 3102,
      "context_length": 85923
    },
    {
      "file_path": "examples/cluster/plot_linkage_comparison.py",
      "position": 20,
      "tokens": 1135,
      "context_length": 87058
    },
    {
      "file_path": "examples/cluster/plot_agglomerative_clustering_metrics.py",
      "position": 21,
      "tokens": 1118,
      "context_length": 88176
    },
    {
      "file_path": "examples/cluster/plot_cluster_comparison.py",
      "position": 22,
      "tokens": 1683,
      "context_length": 89859
    },
    {
      "file_path": "sklearn/cluster/bicluster.py",
      "position": 23,
      "tokens": 4905,
      "context_length": 94764
    },
    {
      "file_path": "sklearn/utils/fixes.py",
      "position": 24,
      "tokens": 1840,
      "context_length": 96604
    },
    {
      "file_path": "sklearn/preprocessing/data.py",
      "position": 25,
      "tokens": 25189,
      "context_length": 121793
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 26,
      "tokens": 13928,
      "context_length": 135721
    },
    {
      "file_path": "sklearn/metrics/cluster/bicluster.py",
      "position": 27,
      "tokens": 717,
      "context_length": 136438
    },
    {
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "position": 28,
      "tokens": 21093,
      "context_length": 157531
    },
    {
      "file_path": "sklearn/linear_model/ridge.py",
      "position": 29,
      "tokens": 16601,
      "context_length": 174132
    },
    {
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "position": 30,
      "tokens": 1341,
      "context_length": 175473
    },
    {
      "file_path": "sklearn/utils/random.py",
      "position": 31,
      "tokens": 828,
      "context_length": 176301
    },
    {
      "file_path": "examples/plot_johnson_lindenstrauss_bound.py",
      "position": 32,
      "tokens": 1843,
      "context_length": 178144
    },
    {
      "file_path": "sklearn/linear_model/least_angle.py",
      "position": 33,
      "tokens": 16494,
      "context_length": 194638
    },
    {
      "file_path": "sklearn/utils/validation.py",
      "position": 34,
      "tokens": 8217,
      "context_length": 202855
    }
  ]
}