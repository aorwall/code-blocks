{
  "instance_id": "scikit-learn__scikit-learn-14092",
  "model_patch": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\nindex 1d278b6e1..1737c7723 100644\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -8,7 +8,7 @@ Neighborhood Component Analysis\n # License: BSD 3 clause\n \n from __future__ import print_function\n-\n+import numbers\n from warnings import warn\n import numpy as np\n import sys\n@@ -299,7 +299,12 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+            if not isinstance(self.n_components, numbers.Integral):\n+                raise TypeError(\"n_components must be an integer; got (type {})\"\n+                                .format(type(self.n_components)))\n+            if self.n_components <= 0:\n+                raise ValueError(\"n_components must be positive; got (n_components={})\"\n+                                 .format(self.n_components))\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -319,7 +324,7 @@ class NeighborhoodComponentsAnalysis(BaseEstimator, TransformerMixin):\n                                          self.components_.shape[1]))\n \n         check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n+        check_scalar(self.tol, 'tol', numbers.Real, min_val=0)\n         check_scalar(self.verbose, 'verbose', int, 0)\n \n         if self.callback is not None:\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/neighbors/nca.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "df7dd8391148a873d157328a4f0328528a0c4ed9",
  "patch": "diff --git a/sklearn/neighbors/nca.py b/sklearn/neighbors/nca.py\n--- a/sklearn/neighbors/nca.py\n+++ b/sklearn/neighbors/nca.py\n@@ -13,6 +13,7 @@\n import numpy as np\n import sys\n import time\n+import numbers\n from scipy.optimize import minimize\n from ..utils.extmath import softmax\n from ..metrics import pairwise_distances\n@@ -299,7 +300,8 @@ def _validate_params(self, X, y):\n \n         # Check the preferred dimensionality of the projected space\n         if self.n_components is not None:\n-            check_scalar(self.n_components, 'n_components', int, 1)\n+            check_scalar(\n+                self.n_components, 'n_components', numbers.Integral, 1)\n \n             if self.n_components > X.shape[1]:\n                 raise ValueError('The preferred dimensionality of the '\n@@ -318,9 +320,9 @@ def _validate_params(self, X, y):\n                                  .format(X.shape[1],\n                                          self.components_.shape[1]))\n \n-        check_scalar(self.max_iter, 'max_iter', int, 1)\n-        check_scalar(self.tol, 'tol', float, 0.)\n-        check_scalar(self.verbose, 'verbose', int, 0)\n+        check_scalar(self.max_iter, 'max_iter', numbers.Integral, 1)\n+        check_scalar(self.tol, 'tol', numbers.Real, 0.)\n+        check_scalar(self.verbose, 'verbose', numbers.Integral, 0)\n \n         if self.callback is not None:\n             if not callable(self.callback):\n",
  "test_patch": "diff --git a/sklearn/neighbors/tests/test_nca.py b/sklearn/neighbors/tests/test_nca.py\n--- a/sklearn/neighbors/tests/test_nca.py\n+++ b/sklearn/neighbors/tests/test_nca.py\n@@ -129,7 +129,7 @@ def test_params_validation():\n     # TypeError\n     assert_raises(TypeError, NCA(max_iter='21').fit, X, y)\n     assert_raises(TypeError, NCA(verbose='true').fit, X, y)\n-    assert_raises(TypeError, NCA(tol=1).fit, X, y)\n+    assert_raises(TypeError, NCA(tol='1').fit, X, y)\n     assert_raises(TypeError, NCA(n_components='invalid').fit, X, y)\n     assert_raises(TypeError, NCA(warm_start=1).fit, X, y)\n \n@@ -518,3 +518,17 @@ def test_convergence_warning():\n     assert_warns_message(ConvergenceWarning,\n                          '[{}] NCA did not converge'.format(cls_name),\n                          nca.fit, iris_data, iris_target)\n+\n+\n+@pytest.mark.parametrize('param, value', [('n_components', np.int32(3)),\n+                                          ('max_iter', np.int32(100)),\n+                                          ('tol', np.float32(0.0001))])\n+def test_parameters_valid_types(param, value):\n+    # check that no error is raised when parameters have numpy integer or\n+    # floating types.\n+    nca = NeighborhoodComponentsAnalysis(**{param: value})\n+\n+    X = iris_data\n+    y = iris_target\n+\n+    nca.fit(X, y)\n",
  "problem_statement": "NCA fails in GridSearch due to too strict parameter checks\nNCA checks its parameters to have a specific type, which can easily fail in a GridSearch due to how param grid is made.\r\n\r\nHere is an example:\r\n```python\r\nimport numpy as np\r\n\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sklearn.model_selection import GridSearchCV\r\nfrom sklearn.neighbors import NeighborhoodComponentsAnalysis\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\n\r\nX = np.random.random_sample((100, 10))\r\ny = np.random.randint(2, size=100)\r\n\r\nnca = NeighborhoodComponentsAnalysis()\r\nknn = KNeighborsClassifier()\r\n\r\npipe = Pipeline([('nca', nca),\r\n                 ('knn', knn)])\r\n                \r\nparams = {'nca__tol': [0.1, 0.5, 1],\r\n          'nca__n_components': np.arange(1, 10)}\r\n          \r\ngs = GridSearchCV(estimator=pipe, param_grid=params, error_score='raise')\r\ngs.fit(X,y)\r\n```\r\n\r\nThe issue is that for `tol`: 1 is not a float, and for  `n_components`: np.int64 is not int\r\n\r\nBefore proposing a fix for this specific situation, I'd like to have your general opinion about parameter checking.  \r\nI like this idea of common parameter checking tool introduced with the NCA PR. What do you think about extending it across the code-base (or at least for new or recent estimators) ?\r\n\r\nCurrently parameter checking is not always done or often partially done, and is quite redundant. For instance, here is the input validation of lda:\r\n```python\r\ndef _check_params(self):\r\n        \"\"\"Check model parameters.\"\"\"\r\n        if self.n_components <= 0:\r\n            raise ValueError(\"Invalid 'n_components' parameter: %r\"\r\n                             % self.n_components)\r\n\r\n        if self.total_samples <= 0:\r\n            raise ValueError(\"Invalid 'total_samples' parameter: %r\"\r\n                             % self.total_samples)\r\n\r\n        if self.learning_offset < 0:\r\n            raise ValueError(\"Invalid 'learning_offset' parameter: %r\"\r\n                             % self.learning_offset)\r\n\r\n        if self.learning_method not in (\"batch\", \"online\"):\r\n            raise ValueError(\"Invalid 'learning_method' parameter: %r\"\r\n                             % self.learning_method)\r\n```\r\nmost params aren't checked and for those who are there's a lot of duplicated code.\r\n\r\nA propose to be upgrade the new tool to be able to check open/closed intervals (currently only closed) and list membership.\r\n\r\nThe api would be something like that:\r\n```\r\ncheck_param(param, name, valid_options)\r\n```\r\nwhere valid_options would be a dict of `type: constraint`. e.g for the `beta_loss` param of `NMF`, it can be either a float or a string in a list, which would give\r\n```\r\nvalid_options = {numbers.Real: None,  # None for no constraint\r\n                 str: ['frobenius', 'kullback-leibler', 'itakura-saito']}\r\n```\r\nSometimes a parameter can only be positive or within a given interval, e.g. `l1_ratio` of `LogisticRegression` must be between 0 and 1, which would give\r\n```\r\nvalid_options = {numbers.Real: Interval(0, 1, closed='both')}\r\n```\r\npositivity of e.g. `max_iter` would be `numbers.Integral: Interval(left=1)`.\n",
  "hints_text": "I have developed a framework, experimenting with parameter verification: https://github.com/thomasjpfan/skconfig (Don't expect the API to be stable)\r\n\r\nYour idea of using a simple dict for union types is really nice!\r\n\r\nEdit: I am currently trying out another idea. I'll update this issue when it becomes something presentable.\nIf I understood correctly your package is designed for a sklearn user, who has to implement its validator for each estimator, or did I get it wrong ?\r\nI think we want to keep the param validation inside the estimators.\r\n\r\n> Edit: I am currently trying out another idea. I'll update this issue when it becomes something presentable.\r\n\r\nmaybe you can pitch me and if you want I can give a hand :)\nI would have loved to using the typing system to get this to work:\r\n\r\n```py\r\ndef __init__(\r\n    self,\r\n    C: Annotated[float, Range('[0, Inf)')],\r\n    ...)\r\n```\r\n\r\nbut that would have to wait for [PEP 593](https://www.python.org/dev/peps/pep-0593/). In the end, I would want the validator to be a part of sklearn estimators. Using typing (as above) is a natural choice, since it keeps the parameter and its constraint physically close to each other.\r\n\r\nIf we can't use typing, these constraints can be place in a `_validate_parameters` method. This will be called at the beginning of fit to do parameter validation. Estimators that need more validation will overwrite the method, call `super()._validate_parameters` and do more validation. For example, `LogesticRegression`'s `penalty='l2'` only works for specify solvers. `skconfig` defines a framework for handling these situations, but I think it would be too hard to learn.\n>  Using typing (as above) is a natural choice\r\n\r\nI agree, and to go further it would be really nice to use them for the coverage to check that every possible type of a parameter is covered by tests\r\n\r\n> If we can't use typing, these constraints can be place in a _validate_parameters method. \r\n\r\nThis is already the case for a subset of the estimators (`_check_params` or `_validate_input`). But it's often incomplete.\r\n\r\n> skconfig defines a framework for handling these situations, but I think it would be too hard to learn.\r\n\r\nYour framework does way more than what I proposed. Maybe we can do this in 2 steps:\r\nFirst, a simple single param check which only checks its type and if its value is acceptable in general (e.g. positive for a number of clusters). This will raise a standard error message\r\nThen a more advanced check, depending on the data (e.g. number of clusters should be < n_samples) or consistency across params (e.g. solver + penalty). These checks require more elaborate error messages.\r\n\r\nwdyt ?",
  "created_at": "2019-06-14T14:16:17Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/neighbors/tests/test_nca.py::test_parameters_valid_types[max_iter-value1]\", \"sklearn/neighbors/tests/test_nca.py::test_parameters_valid_types[n_components-value0]\", \"sklearn/neighbors/tests/test_nca.py::test_parameters_valid_types[tol-value2]\"]",
  "PASS_TO_PASS": "[\"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-11-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-5-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[11-7-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-11-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-5-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[3-7-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-11-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-5-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[5-7-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-11-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-5-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-11-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-3-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-5-7]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-11]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-3]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-5]\", \"sklearn/neighbors/tests/test_nca.py::test_auto_init[7-7-7-7]\", \"sklearn/neighbors/tests/test_nca.py::test_callback\", \"sklearn/neighbors/tests/test_nca.py::test_convergence_warning\", \"sklearn/neighbors/tests/test_nca.py::test_expected_transformation_shape\", \"sklearn/neighbors/tests/test_nca.py::test_finite_differences\", \"sklearn/neighbors/tests/test_nca.py::test_init_transformation\", \"sklearn/neighbors/tests/test_nca.py::test_n_components\", \"sklearn/neighbors/tests/test_nca.py::test_no_verbose\", \"sklearn/neighbors/tests/test_nca.py::test_one_class\", \"sklearn/neighbors/tests/test_nca.py::test_params_validation\", \"sklearn/neighbors/tests/test_nca.py::test_simple_example\", \"sklearn/neighbors/tests/test_nca.py::test_singleton_class\", \"sklearn/neighbors/tests/test_nca.py::test_toy_example_collapse_points\", \"sklearn/neighbors/tests/test_nca.py::test_transformation_dimensions\", \"sklearn/neighbors/tests/test_nca.py::test_verbose[identity]\", \"sklearn/neighbors/tests/test_nca.py::test_verbose[lda]\", \"sklearn/neighbors/tests/test_nca.py::test_verbose[pca]\", \"sklearn/neighbors/tests/test_nca.py::test_verbose[precomputed]\", \"sklearn/neighbors/tests/test_nca.py::test_verbose[random]\", \"sklearn/neighbors/tests/test_nca.py::test_warm_start_effectiveness\", \"sklearn/neighbors/tests/test_nca.py::test_warm_start_validation\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "patch_files": [
    "sklearn/neighbors/nca.py"
  ],
  "test_patch_files": [
    "sklearn/neighbors/tests/test_nca.py"
  ],
  "patch_diff_details": {
    "sklearn/neighbors/nca.py": {
      "diffs": [
        {
          "start_line_old": 16,
          "end_line_old": 16,
          "file_pos": 1,
          "file_context_length": 4186,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/neighbors/nca.py_NeighborhoodComponentsAnalysis.__init___NeighborhoodComponentsAnalysis.fit.25.1",
          "closest_snippet_line_distance": 142,
          "pos": 24,
          "context_length": 16387
        },
        {
          "start_line_old": 302,
          "end_line_old": 302,
          "file_pos": 1,
          "file_context_length": 4186,
          "pos": 1,
          "context_length": 563
        },
        {
          "start_line_old": 321,
          "end_line_old": 323,
          "file_pos": 1,
          "file_context_length": 4186,
          "pos": 1,
          "context_length": 563
        }
      ]
    }
  },
  "vectors": 2971,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/nca.py_NeighborhoodComponentsAnalysis._validate_params_NeighborhoodComponentsAnalysis._validate_params.init.1",
      "distance": 0.8153379559516907,
      "file_path": "sklearn/neighbors/nca.py",
      "start_line": 262,
      "end_line": 330,
      "tokens": 563,
      "context_length": 563,
      "file_pos": 1
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_set_checking_parameters_set_checking_parameters.params.22.1",
      "distance": 0.8714089393615723,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 324,
      "end_line": 402,
      "tokens": 707,
      "context_length": 1270
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/gradient_boosting.py_BaseGradientBoosting._check_params_BaseGradientBoosting._check_params.14.1",
      "distance": 0.912940502166748,
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "start_line": 1255,
      "end_line": 1337,
      "tokens": 797,
      "context_length": 2067
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_parameters_default_constructible_check_parameters_default_constructible.4.18.5.2.1.3.1",
      "distance": 0.9311691522598267,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2161,
      "end_line": 2237,
      "tokens": 630,
      "context_length": 2697
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py__check_param_grid__check_param_grid.2.1.3.1",
      "distance": 0.9459688067436218,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 358,
      "end_line": 375,
      "tokens": 158,
      "context_length": 2855
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_BaseSGD._validate_params_BaseSGD._validate_params.16.1",
      "distance": 0.9489222764968872,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 110,
      "end_line": 144,
      "tokens": 422,
      "context_length": 3277
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/nca.py_NeighborhoodComponentsAnalysis._validate_params.17_NeighborhoodComponentsAnalysis._validate_params.18.1",
      "distance": 0.9609673619270325,
      "file_path": "sklearn/neighbors/nca.py",
      "start_line": 332,
      "end_line": 368,
      "tokens": 375,
      "context_length": 3652,
      "file_pos": 5
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_GridSearchCV.1_GridSearchCV.1",
      "distance": 0.9611824750900269,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 817,
      "end_line": 1104,
      "tokens": 3064,
      "context_length": 6716
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_set_params_check_set_params.estimator.11.3",
      "distance": 0.982891321182251,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2322,
      "end_line": 2374,
      "tokens": 436,
      "context_length": 7152
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/nca.py_NeighborhoodComponentsAnalysis_NeighborhoodComponentsAnalysis.1",
      "distance": 0.9866102337837219,
      "file_path": "sklearn/neighbors/nca.py",
      "start_line": 29,
      "end_line": 156,
      "tokens": 1234,
      "context_length": 8386,
      "file_pos": 5
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_GridSearchCV._required_parameters_RandomizedSearchCV",
      "distance": 1.0079379081726074,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 1105,
      "end_line": 1435,
      "tokens": 188,
      "context_length": 8574
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_RandomizedSearchCV.1_RandomizedSearchCV.1",
      "distance": 1.0110433101654053,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 1125,
      "end_line": 1414,
      "tokens": 2997,
      "context_length": 11571
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_BaseSearchCV._format_results.10_GridSearchCV",
      "distance": 1.0146818161010742,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 771,
      "end_line": 1121,
      "tokens": 443,
      "context_length": 12014
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_overwrite_params_check_estimators_overwrite_params.16.8",
      "distance": 1.0175867080688477,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2026,
      "end_line": 2062,
      "tokens": 366,
      "context_length": 12380
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/__init__.py_BaseCrossValidator_",
      "distance": 1.023834466934204,
      "file_path": "sklearn/model_selection/__init__.py",
      "start_line": 1,
      "end_line": 60,
      "tokens": 405,
      "context_length": 12785
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_dont_overwrite_parameters_check_dont_overwrite_parameters.2.22",
      "distance": 1.0266027450561523,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 732,
      "end_line": 784,
      "tokens": 466,
      "context_length": 13251
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimators_nan_inf_check_estimators_nan_inf.rnd.13.2.10.1.4.1",
      "distance": 1.0331887006759644,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1185,
      "end_line": 1253,
      "tokens": 601,
      "context_length": 13852
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_transformer_n_iter_check_get_params_invariance.e.4",
      "distance": 1.0334088802337646,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 2284,
      "end_line": 2319,
      "tokens": 401,
      "context_length": 14253
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_ParameterGrid_ParameterGrid.__init__.self.param_grid.1",
      "distance": 1.0340838432312012,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 46,
      "end_line": 111,
      "tokens": 562,
      "context_length": 14815
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py_BaseHistGradientBoosting._validate_parameters_BaseHistGradientBoosting._validate_parameters.7.1",
      "distance": 1.0360612869262695,
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "start_line": 46,
      "end_line": 74,
      "tokens": 289,
      "context_length": 15104
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/nmf.py__check_string_param__check_string_param.9.1",
      "distance": 1.0450383424758911,
      "file_path": "sklearn/decomposition/nmf.py",
      "start_line": 197,
      "end_line": 224,
      "tokens": 295,
      "context_length": 15399
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_1___all__.1",
      "distance": 1.0467689037322998,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 1,
      "end_line": 43,
      "tokens": 262,
      "context_length": 15661
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/nca.py_NeighborhoodComponentsAnalysis.__init___NeighborhoodComponentsAnalysis.fit.25.1",
      "distance": 1.0490329265594482,
      "file_path": "sklearn/neighbors/nca.py",
      "start_line": 158,
      "end_line": 236,
      "tokens": 593,
      "context_length": 16254,
      "file_pos": 8
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/nca.py_1_ConvergenceWarning",
      "distance": 1.0506478548049927,
      "file_path": "sklearn/neighbors/nca.py",
      "start_line": 1,
      "end_line": 26,
      "tokens": 133,
      "context_length": 16387,
      "file_pos": 8
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_grid_search_refit_callable.py_pipe_",
      "distance": 1.06694495677948,
      "file_path": "examples/model_selection/plot_grid_search_refit_callable.py",
      "start_line": 78,
      "end_line": 117,
      "tokens": 323,
      "context_length": 16710
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_complex_data_is_public_parameter.1.1",
      "distance": 1.0687832832336426,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 678,
      "end_line": 729,
      "tokens": 436,
      "context_length": 17146
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_methods_subset_invariance_check_methods_subset_invariance.rnd.12.4.2",
      "distance": 1.0697929859161377,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 835,
      "end_line": 873,
      "tokens": 375,
      "context_length": 17521
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/gaussian_process/kernels.py_Hyperparameter.__new___Hyperparameter.__eq__.1.1",
      "distance": 1.0728868246078491,
      "file_path": "sklearn/gaussian_process/kernels.py",
      "start_line": 92,
      "end_line": 115,
      "tokens": 287,
      "context_length": 17808
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/online_lda.py_LatentDirichletAllocation._check_params_LatentDirichletAllocation._check_params.5.1",
      "distance": 1.0742478370666504,
      "file_path": "sklearn/decomposition/online_lda.py",
      "start_line": 300,
      "end_line": 316,
      "tokens": 147,
      "context_length": 17955
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimator__boston_subset.3.1",
      "distance": 1.0743534564971924,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 273,
      "end_line": 321,
      "tokens": 368,
      "context_length": 18323
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/coordinate_descent.py_ElasticNetCV.1_ElasticNetCV.1",
      "distance": 1.0751110315322876,
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "start_line": 1399,
      "end_line": 1577,
      "tokens": 1649,
      "context_length": 19972
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/neighbors/base.py_NeighborsBase._check_algorithm_metric_NeighborsBase._check_algorithm_metric.5.1",
      "distance": 1.0776475667953491,
      "file_path": "sklearn/neighbors/base.py",
      "start_line": 124,
      "end_line": 162,
      "tokens": 368,
      "context_length": 20340
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_hist_gradient_boosting/grower.py_TreeGrower._validate_parameters_TreeGrower._validate_parameters.9.1",
      "distance": 1.0789086818695068,
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/grower.py",
      "start_line": 204,
      "end_line": 235,
      "tokens": 335,
      "context_length": 20675
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_class_weight_classifiers_check_class_weight_classifiers.4.2",
      "distance": 1.0797533988952637,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1915,
      "end_line": 1964,
      "tokens": 499,
      "context_length": 21174
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_compare_reduction.py_1_55",
      "distance": 1.0823259353637695,
      "file_path": "examples/compose/plot_compare_reduction.py",
      "start_line": 1,
      "end_line": 105,
      "tokens": 823,
      "context_length": 21997
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_classifiers_train.12_check_classifiers_train.12.24.y_prob.7.y_log_prob.3",
      "distance": 1.0836410522460938,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1461,
      "end_line": 1560,
      "tokens": 927,
      "context_length": 22924
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/stochastic_gradient.py_np_MAX_INT.1",
      "distance": 1.0854430198669434,
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "start_line": 7,
      "end_line": 45,
      "tokens": 361,
      "context_length": 23285
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_ParameterGrid.__getitem___ParameterGrid.__getitem__.5",
      "distance": 1.090165138244629,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 140,
      "end_line": 179,
      "tokens": 259,
      "context_length": 23544
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_grid_search_refit_callable.py_1_10",
      "distance": 1.092128038406372,
      "file_path": "examples/model_selection/plot_grid_search_refit_callable.py",
      "start_line": 1,
      "end_line": 30,
      "tokens": 213,
      "context_length": 23757
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_randomized_search.py_17_",
      "distance": 1.0926979780197144,
      "file_path": "examples/model_selection/plot_randomized_search.py",
      "start_line": 54,
      "end_line": 87,
      "tokens": 310,
      "context_length": 24067
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_types_CROSS_DECOMPOSITION.1",
      "distance": 1.093754768371582,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1,
      "end_line": 62,
      "tokens": 452,
      "context_length": 24519
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py__yield_checks__yield_checks.19",
      "distance": 1.0949212312698364,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 79,
      "end_line": 112,
      "tokens": 261,
      "context_length": 24780
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_multi_metric_evaluation.py_1_X_axis.1",
      "distance": 1.1023478507995605,
      "file_path": "examples/model_selection/plot_multi_metric_evaluation.py",
      "start_line": 1,
      "end_line": 70,
      "tokens": 543,
      "context_length": 25323
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_RandomizedSearchCV._required_parameters_",
      "distance": 1.1027815341949463,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 1415,
      "end_line": 1436,
      "tokens": 218,
      "context_length": 25541
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_regressors_train_check_regressors_train.23.1",
      "distance": 1.1032803058624268,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 1846,
      "end_line": 1888,
      "tokens": 469,
      "context_length": 26010
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/plot_grid_search_digits.py_1_",
      "distance": 1.1046255826950073,
      "file_path": "examples/model_selection/plot_grid_search_digits.py",
      "start_line": 1,
      "end_line": 79,
      "tokens": 631,
      "context_length": 26641
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_validation.py_validation_curve.2_validation_curve.11.1",
      "distance": 1.1052206754684448,
      "file_path": "sklearn/model_selection/_validation.py",
      "start_line": 1441,
      "end_line": 1459,
      "tokens": 263,
      "context_length": 26904
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/examples/calibration/plot_calibration_multiclass.py_1_41",
      "distance": 1.1054438352584839,
      "file_path": "examples/calibration/plot_calibration_multiclass.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 762,
      "context_length": 27666
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_hist_gradient_boosting.py_1_max_bins.1",
      "distance": 1.1054438352584839,
      "file_path": "benchmarks/bench_hist_gradient_boosting.py",
      "start_line": 1,
      "end_line": 37,
      "tokens": 349,
      "context_length": 28015
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/data.py_9___all__.1",
      "distance": 1.1087279319763184,
      "file_path": "sklearn/preprocessing/data.py",
      "start_line": 11,
      "end_line": 60,
      "tokens": 312,
      "context_length": 28327
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_ParameterGrid.__iter___ParameterGrid.__len__.4.1",
      "distance": 1.108928918838501,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 113,
      "end_line": 138,
      "tokens": 196,
      "context_length": 28523
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_search.py_BaseSearchCV_BaseSearchCV._estimator_type.1.1",
      "distance": 1.1090806722640991,
      "file_path": "sklearn/model_selection/_search.py",
      "start_line": 378,
      "end_line": 400,
      "tokens": 185,
      "context_length": 28708
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/examples/model_selection/grid_search_text_feature_extraction.py_parameters_",
      "distance": 1.1129179000854492,
      "file_path": "examples/model_selection/grid_search_text_feature_extraction.py",
      "start_line": 95,
      "end_line": 129,
      "tokens": 369,
      "context_length": 29077
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/testing.py_check_docstring_parameters_check_docstring_parameters.21.1",
      "distance": 1.115856409072876,
      "file_path": "sklearn/utils/testing.py",
      "start_line": 734,
      "end_line": 810,
      "tokens": 655,
      "context_length": 29732
    }
  ],
  "files": [
    {
      "file_path": "sklearn/neighbors/nca.py",
      "position": 1,
      "tokens": 4186,
      "context_length": 4186
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 2,
      "tokens": 22216,
      "context_length": 26402
    },
    {
      "file_path": "sklearn/ensemble/gradient_boosting.py",
      "position": 3,
      "tokens": 21475,
      "context_length": 47877
    },
    {
      "file_path": "sklearn/model_selection/_search.py",
      "position": 4,
      "tokens": 12926,
      "context_length": 60803
    },
    {
      "file_path": "sklearn/linear_model/stochastic_gradient.py",
      "position": 5,
      "tokens": 13660,
      "context_length": 74463
    },
    {
      "file_path": "sklearn/model_selection/__init__.py",
      "position": 6,
      "tokens": 405,
      "context_length": 74868
    },
    {
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "position": 7,
      "tokens": 8245,
      "context_length": 83113
    },
    {
      "file_path": "sklearn/decomposition/nmf.py",
      "position": 8,
      "tokens": 11898,
      "context_length": 95011
    },
    {
      "file_path": "examples/model_selection/plot_grid_search_refit_callable.py",
      "position": 9,
      "tokens": 832,
      "context_length": 95843
    },
    {
      "file_path": "sklearn/gaussian_process/kernels.py",
      "position": 10,
      "tokens": 15290,
      "context_length": 111133
    },
    {
      "file_path": "sklearn/decomposition/online_lda.py",
      "position": 11,
      "tokens": 6510,
      "context_length": 117643
    },
    {
      "file_path": "sklearn/linear_model/coordinate_descent.py",
      "position": 12,
      "tokens": 20564,
      "context_length": 138207
    },
    {
      "file_path": "sklearn/neighbors/base.py",
      "position": 13,
      "tokens": 7631,
      "context_length": 145838
    },
    {
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/grower.py",
      "position": 14,
      "tokens": 4162,
      "context_length": 150000
    },
    {
      "file_path": "examples/compose/plot_compare_reduction.py",
      "position": 15,
      "tokens": 1074,
      "context_length": 151074
    },
    {
      "file_path": "examples/model_selection/plot_randomized_search.py",
      "position": 16,
      "tokens": 692,
      "context_length": 151766
    },
    {
      "file_path": "examples/model_selection/plot_multi_metric_evaluation.py",
      "position": 17,
      "tokens": 880,
      "context_length": 152646
    },
    {
      "file_path": "examples/model_selection/plot_grid_search_digits.py",
      "position": 18,
      "tokens": 631,
      "context_length": 153277
    },
    {
      "file_path": "sklearn/model_selection/_validation.py",
      "position": 19,
      "tokens": 13069,
      "context_length": 166346
    },
    {
      "file_path": "examples/calibration/plot_calibration_multiclass.py",
      "position": 20,
      "tokens": 2127,
      "context_length": 168473
    },
    {
      "file_path": "benchmarks/bench_hist_gradient_boosting.py",
      "position": 21,
      "tokens": 2226,
      "context_length": 170699
    },
    {
      "file_path": "sklearn/preprocessing/data.py",
      "position": 22,
      "tokens": 25071,
      "context_length": 195770
    },
    {
      "file_path": "examples/model_selection/grid_search_text_feature_extraction.py",
      "position": 23,
      "tokens": 1090,
      "context_length": 196860
    },
    {
      "file_path": "sklearn/utils/testing.py",
      "position": 24,
      "tokens": 6529,
      "context_length": 203389
    }
  ]
}