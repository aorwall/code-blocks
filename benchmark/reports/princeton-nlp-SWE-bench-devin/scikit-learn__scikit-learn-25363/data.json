{
  "instance_id": "scikit-learn__scikit-learn-25363",
  "model_patch": "diff --git a/sklearn/ensemble/_forest.py b/sklearn/ensemble/_forest.py\nindex 3e5efd7b0..728f944be 100644\n--- a/sklearn/ensemble/_forest.py\n+++ b/sklearn/ensemble/_forest.py\n@@ -2338,14 +2338,14 @@ class ExtraTreesRegressor(ForestRegressor):\n \n     Attributes\n     ----------\n-    estimator_ : :class:`~sklearn.tree.ExtraTreeRegressor`\n+    estimator_ : :class:`~sklearn.tree.ExtraTreeRegressor` instance\n         The child estimator template used to create the collection of fitted\n         sub-estimators.\n \n         .. versionadded:: 1.2\n            `base_estimator_` was renamed to `estimator_`.\n \n-    base_estimator_ : ExtraTreeRegressor\n+    base_estimator_ : :class:`~sklearn.tree.ExtraTreeRegressor` instance\n         The child estimator template used to create the collection of fitted\n         sub-estimators.\n \n@@ -2379,7 +2379,7 @@ class ExtraTreesRegressor(ForestRegressor):\n         .. versionadded:: 1.0\n \n     n_outputs_ : int\n-        The number of outputs.\n+        The number of outputs when ``fit`` is performed.\n \n     oob_score_ : float\n         Score of the training dataset obtained using an out-of-bag estimate.\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/ensemble/_forest.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "cfd428afc5b6e25bbbe4bc92067f857fa9658442",
  "patch": "diff --git a/benchmarks/bench_saga.py b/benchmarks/bench_saga.py\n--- a/benchmarks/bench_saga.py\n+++ b/benchmarks/bench_saga.py\n@@ -7,8 +7,7 @@\n import time\n import os\n \n-from joblib import Parallel\n-from sklearn.utils.fixes import delayed\n+from sklearn.utils.parallel import delayed, Parallel\n import matplotlib.pyplot as plt\n import numpy as np\n \ndiff --git a/sklearn/calibration.py b/sklearn/calibration.py\n--- a/sklearn/calibration.py\n+++ b/sklearn/calibration.py\n@@ -14,7 +14,6 @@\n \n from math import log\n import numpy as np\n-from joblib import Parallel\n \n from scipy.special import expit\n from scipy.special import xlogy\n@@ -36,7 +35,7 @@\n )\n \n from .utils.multiclass import check_classification_targets\n-from .utils.fixes import delayed\n+from .utils.parallel import delayed, Parallel\n from .utils._param_validation import StrOptions, HasMethods, Hidden\n from .utils.validation import (\n     _check_fit_params,\ndiff --git a/sklearn/cluster/_mean_shift.py b/sklearn/cluster/_mean_shift.py\n--- a/sklearn/cluster/_mean_shift.py\n+++ b/sklearn/cluster/_mean_shift.py\n@@ -16,13 +16,12 @@\n \n import numpy as np\n import warnings\n-from joblib import Parallel\n from numbers import Integral, Real\n \n from collections import defaultdict\n from ..utils._param_validation import Interval, validate_params\n from ..utils.validation import check_is_fitted\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils import check_random_state, gen_batches, check_array\n from ..base import BaseEstimator, ClusterMixin\n from ..neighbors import NearestNeighbors\ndiff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -12,7 +12,6 @@\n \n import numpy as np\n from scipy import sparse\n-from joblib import Parallel\n \n from ..base import clone, TransformerMixin\n from ..utils._estimator_html_repr import _VisualBlock\n@@ -26,7 +25,7 @@\n from ..utils import check_pandas_support\n from ..utils.metaestimators import _BaseComposition\n from ..utils.validation import check_array, check_is_fitted, _check_feature_names_in\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n \n __all__ = [\"ColumnTransformer\", \"make_column_transformer\", \"make_column_selector\"]\ndiff --git a/sklearn/covariance/_graph_lasso.py b/sklearn/covariance/_graph_lasso.py\n--- a/sklearn/covariance/_graph_lasso.py\n+++ b/sklearn/covariance/_graph_lasso.py\n@@ -13,7 +13,6 @@\n from numbers import Integral, Real\n import numpy as np\n from scipy import linalg\n-from joblib import Parallel\n \n from . import empirical_covariance, EmpiricalCovariance, log_likelihood\n \n@@ -23,7 +22,7 @@\n     check_random_state,\n     check_scalar,\n )\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils._param_validation import Interval, StrOptions\n \n # mypy error: Module 'sklearn.linear_model' has no attribute '_cd_fast'\ndiff --git a/sklearn/decomposition/_dict_learning.py b/sklearn/decomposition/_dict_learning.py\n--- a/sklearn/decomposition/_dict_learning.py\n+++ b/sklearn/decomposition/_dict_learning.py\n@@ -13,7 +13,7 @@\n \n import numpy as np\n from scipy import linalg\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n from ..base import BaseEstimator, TransformerMixin, ClassNamePrefixFeaturesOutMixin\n from ..utils import check_array, check_random_state, gen_even_slices, gen_batches\n@@ -21,7 +21,7 @@\n from ..utils._param_validation import validate_params\n from ..utils.extmath import randomized_svd, row_norms, svd_flip\n from ..utils.validation import check_is_fitted\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..linear_model import Lasso, orthogonal_mp_gram, LassoLars, Lars\n \n \ndiff --git a/sklearn/decomposition/_lda.py b/sklearn/decomposition/_lda.py\n--- a/sklearn/decomposition/_lda.py\n+++ b/sklearn/decomposition/_lda.py\n@@ -15,13 +15,13 @@\n import numpy as np\n import scipy.sparse as sp\n from scipy.special import gammaln, logsumexp\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n from ..base import BaseEstimator, TransformerMixin, ClassNamePrefixFeaturesOutMixin\n from ..utils import check_random_state, gen_batches, gen_even_slices\n from ..utils.validation import check_non_negative\n from ..utils.validation import check_is_fitted\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils._param_validation import Interval, StrOptions\n \n from ._online_lda_fast import (\ndiff --git a/sklearn/ensemble/_bagging.py b/sklearn/ensemble/_bagging.py\n--- a/sklearn/ensemble/_bagging.py\n+++ b/sklearn/ensemble/_bagging.py\n@@ -12,8 +12,6 @@\n from warnings import warn\n from functools import partial\n \n-from joblib import Parallel\n-\n from ._base import BaseEnsemble, _partition_estimators\n from ..base import ClassifierMixin, RegressorMixin\n from ..metrics import r2_score, accuracy_score\n@@ -25,7 +23,7 @@\n from ..utils.random import sample_without_replacement\n from ..utils._param_validation import Interval, HasMethods, StrOptions\n from ..utils.validation import has_fit_parameter, check_is_fitted, _check_sample_weight\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n \n __all__ = [\"BaggingClassifier\", \"BaggingRegressor\"]\ndiff --git a/sklearn/ensemble/_forest.py b/sklearn/ensemble/_forest.py\n--- a/sklearn/ensemble/_forest.py\n+++ b/sklearn/ensemble/_forest.py\n@@ -48,7 +48,6 @@ class calls the ``fit`` method of each sub-estimator on random samples\n import numpy as np\n from scipy.sparse import issparse\n from scipy.sparse import hstack as sparse_hstack\n-from joblib import Parallel\n \n from ..base import is_classifier\n from ..base import ClassifierMixin, MultiOutputMixin, RegressorMixin, TransformerMixin\n@@ -66,7 +65,7 @@ class calls the ``fit`` method of each sub-estimator on random samples\n from ..utils import check_random_state, compute_sample_weight\n from ..exceptions import DataConversionWarning\n from ._base import BaseEnsemble, _partition_estimators\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils.multiclass import check_classification_targets, type_of_target\n from ..utils.validation import (\n     check_is_fitted,\ndiff --git a/sklearn/ensemble/_stacking.py b/sklearn/ensemble/_stacking.py\n--- a/sklearn/ensemble/_stacking.py\n+++ b/sklearn/ensemble/_stacking.py\n@@ -8,7 +8,6 @@\n from numbers import Integral\n \n import numpy as np\n-from joblib import Parallel\n import scipy.sparse as sparse\n \n from ..base import clone\n@@ -33,7 +32,7 @@\n from ..utils.metaestimators import available_if\n from ..utils.validation import check_is_fitted\n from ..utils.validation import column_or_1d\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils._param_validation import HasMethods, StrOptions\n from ..utils.validation import _check_feature_names_in\n \ndiff --git a/sklearn/ensemble/_voting.py b/sklearn/ensemble/_voting.py\n--- a/sklearn/ensemble/_voting.py\n+++ b/sklearn/ensemble/_voting.py\n@@ -18,8 +18,6 @@\n \n import numpy as np\n \n-from joblib import Parallel\n-\n from ..base import ClassifierMixin\n from ..base import RegressorMixin\n from ..base import TransformerMixin\n@@ -36,7 +34,7 @@\n from ..utils._param_validation import StrOptions\n from ..exceptions import NotFittedError\n from ..utils._estimator_html_repr import _VisualBlock\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n \n class _BaseVoting(TransformerMixin, _BaseHeterogeneousEnsemble):\ndiff --git a/sklearn/feature_selection/_rfe.py b/sklearn/feature_selection/_rfe.py\n--- a/sklearn/feature_selection/_rfe.py\n+++ b/sklearn/feature_selection/_rfe.py\n@@ -8,7 +8,7 @@\n \n import numpy as np\n from numbers import Integral, Real\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n \n from ..utils.metaestimators import available_if\n@@ -16,7 +16,7 @@\n from ..utils._param_validation import HasMethods, Interval\n from ..utils._tags import _safe_tags\n from ..utils.validation import check_is_fitted\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..base import BaseEstimator\n from ..base import MetaEstimatorMixin\n from ..base import clone\ndiff --git a/sklearn/inspection/_permutation_importance.py b/sklearn/inspection/_permutation_importance.py\n--- a/sklearn/inspection/_permutation_importance.py\n+++ b/sklearn/inspection/_permutation_importance.py\n@@ -1,7 +1,6 @@\n \"\"\"Permutation importance for estimators.\"\"\"\n import numbers\n import numpy as np\n-from joblib import Parallel\n \n from ..ensemble._bagging import _generate_indices\n from ..metrics import check_scoring\n@@ -10,7 +9,7 @@\n from ..utils import Bunch, _safe_indexing\n from ..utils import check_random_state\n from ..utils import check_array\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n \n def _weights_scorer(scorer, estimator, X, y, sample_weight):\ndiff --git a/sklearn/inspection/_plot/partial_dependence.py b/sklearn/inspection/_plot/partial_dependence.py\n--- a/sklearn/inspection/_plot/partial_dependence.py\n+++ b/sklearn/inspection/_plot/partial_dependence.py\n@@ -6,7 +6,6 @@\n import numpy as np\n from scipy import sparse\n from scipy.stats.mstats import mquantiles\n-from joblib import Parallel\n \n from .. import partial_dependence\n from .._pd_utils import _check_feature_names, _get_feature_index\n@@ -16,7 +15,7 @@\n from ...utils import check_matplotlib_support  # noqa\n from ...utils import check_random_state\n from ...utils import _safe_indexing\n-from ...utils.fixes import delayed\n+from ...utils.parallel import delayed, Parallel\n from ...utils._encode import _unique\n \n \ndiff --git a/sklearn/linear_model/_base.py b/sklearn/linear_model/_base.py\n--- a/sklearn/linear_model/_base.py\n+++ b/sklearn/linear_model/_base.py\n@@ -25,7 +25,6 @@\n from scipy import sparse\n from scipy.sparse.linalg import lsqr\n from scipy.special import expit\n-from joblib import Parallel\n from numbers import Integral\n \n from ..base import BaseEstimator, ClassifierMixin, RegressorMixin, MultiOutputMixin\n@@ -40,7 +39,7 @@\n from ..utils._seq_dataset import ArrayDataset32, CSRDataset32\n from ..utils._seq_dataset import ArrayDataset64, CSRDataset64\n from ..utils.validation import check_is_fitted, _check_sample_weight\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n # TODO: bayesian_ridge_regression and bayesian_regression_ard\n # should be squashed into its respective objects.\ndiff --git a/sklearn/linear_model/_coordinate_descent.py b/sklearn/linear_model/_coordinate_descent.py\n--- a/sklearn/linear_model/_coordinate_descent.py\n+++ b/sklearn/linear_model/_coordinate_descent.py\n@@ -14,7 +14,7 @@\n \n import numpy as np\n from scipy import sparse\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n from ._base import LinearModel, _pre_fit\n from ..base import RegressorMixin, MultiOutputMixin\n@@ -30,7 +30,7 @@\n     check_is_fitted,\n     column_or_1d,\n )\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n # mypy error: Module 'sklearn.linear_model' has no attribute '_cd_fast'\n from . import _cd_fast as cd_fast  # type: ignore\ndiff --git a/sklearn/linear_model/_least_angle.py b/sklearn/linear_model/_least_angle.py\n--- a/sklearn/linear_model/_least_angle.py\n+++ b/sklearn/linear_model/_least_angle.py\n@@ -16,7 +16,6 @@\n import numpy as np\n from scipy import linalg, interpolate\n from scipy.linalg.lapack import get_lapack_funcs\n-from joblib import Parallel\n \n from ._base import LinearModel, LinearRegression\n from ._base import _deprecate_normalize, _preprocess_data\n@@ -28,7 +27,7 @@\n from ..utils._param_validation import Hidden, Interval, StrOptions\n from ..model_selection import check_cv\n from ..exceptions import ConvergenceWarning\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n SOLVE_TRIANGULAR_ARGS = {\"check_finite\": False}\n \ndiff --git a/sklearn/linear_model/_logistic.py b/sklearn/linear_model/_logistic.py\n--- a/sklearn/linear_model/_logistic.py\n+++ b/sklearn/linear_model/_logistic.py\n@@ -16,7 +16,7 @@\n \n import numpy as np\n from scipy import optimize\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n from sklearn.metrics import get_scorer_names\n \n@@ -34,7 +34,7 @@\n from ..utils.optimize import _newton_cg, _check_optimize_result\n from ..utils.validation import check_is_fitted, _check_sample_weight\n from ..utils.multiclass import check_classification_targets\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils._param_validation import StrOptions, Interval\n from ..model_selection import check_cv\n from ..metrics import get_scorer\ndiff --git a/sklearn/linear_model/_omp.py b/sklearn/linear_model/_omp.py\n--- a/sklearn/linear_model/_omp.py\n+++ b/sklearn/linear_model/_omp.py\n@@ -12,12 +12,11 @@\n import numpy as np\n from scipy import linalg\n from scipy.linalg.lapack import get_lapack_funcs\n-from joblib import Parallel\n \n from ._base import LinearModel, _pre_fit, _deprecate_normalize\n from ..base import RegressorMixin, MultiOutputMixin\n from ..utils import as_float_array, check_array\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils._param_validation import Hidden, Interval, StrOptions\n from ..model_selection import check_cv\n \ndiff --git a/sklearn/linear_model/_stochastic_gradient.py b/sklearn/linear_model/_stochastic_gradient.py\n--- a/sklearn/linear_model/_stochastic_gradient.py\n+++ b/sklearn/linear_model/_stochastic_gradient.py\n@@ -12,8 +12,6 @@\n from abc import ABCMeta, abstractmethod\n from numbers import Integral, Real\n \n-from joblib import Parallel\n-\n from ..base import clone, is_classifier\n from ._base import LinearClassifierMixin, SparseCoefMixin\n from ._base import make_dataset\n@@ -26,7 +24,7 @@\n from ..utils._param_validation import Interval\n from ..utils._param_validation import StrOptions\n from ..utils._param_validation import Hidden\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..exceptions import ConvergenceWarning\n from ..model_selection import StratifiedShuffleSplit, ShuffleSplit\n \ndiff --git a/sklearn/linear_model/_theil_sen.py b/sklearn/linear_model/_theil_sen.py\n--- a/sklearn/linear_model/_theil_sen.py\n+++ b/sklearn/linear_model/_theil_sen.py\n@@ -15,13 +15,13 @@\n from scipy import linalg\n from scipy.special import binom\n from scipy.linalg.lapack import get_lapack_funcs\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n from ._base import LinearModel\n from ..base import RegressorMixin\n from ..utils import check_random_state\n from ..utils._param_validation import Interval\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..exceptions import ConvergenceWarning\n \n _EPSILON = np.finfo(np.double).eps\ndiff --git a/sklearn/manifold/_mds.py b/sklearn/manifold/_mds.py\n--- a/sklearn/manifold/_mds.py\n+++ b/sklearn/manifold/_mds.py\n@@ -8,7 +8,7 @@\n from numbers import Integral, Real\n \n import numpy as np\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n import warnings\n \n@@ -17,7 +17,7 @@\n from ..utils import check_random_state, check_array, check_symmetric\n from ..isotonic import IsotonicRegression\n from ..utils._param_validation import Interval, StrOptions, Hidden\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n \n \n def _smacof_single(\ndiff --git a/sklearn/metrics/pairwise.py b/sklearn/metrics/pairwise.py\n--- a/sklearn/metrics/pairwise.py\n+++ b/sklearn/metrics/pairwise.py\n@@ -15,7 +15,7 @@\n from scipy.spatial import distance\n from scipy.sparse import csr_matrix\n from scipy.sparse import issparse\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n from .. import config_context\n from ..utils.validation import _num_samples\n@@ -27,7 +27,7 @@\n from ..utils.extmath import row_norms, safe_sparse_dot\n from ..preprocessing import normalize\n from ..utils._mask import _get_mask\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils.fixes import sp_version, parse_version\n \n from ._pairwise_distances_reduction import ArgKmin\ndiff --git a/sklearn/model_selection/_search.py b/sklearn/model_selection/_search.py\n--- a/sklearn/model_selection/_search.py\n+++ b/sklearn/model_selection/_search.py\n@@ -33,14 +33,13 @@\n from ._validation import _normalize_score_results\n from ._validation import _warn_or_raise_about_fit_failures\n from ..exceptions import NotFittedError\n-from joblib import Parallel\n from ..utils import check_random_state\n from ..utils.random import sample_without_replacement\n from ..utils._param_validation import HasMethods, Interval, StrOptions\n from ..utils._tags import _safe_tags\n from ..utils.validation import indexable, check_is_fitted, _check_fit_params\n from ..utils.metaestimators import available_if\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..metrics._scorer import _check_multimetric_scoring, get_scorer_names\n from ..metrics import check_scoring\n \ndiff --git a/sklearn/model_selection/_validation.py b/sklearn/model_selection/_validation.py\n--- a/sklearn/model_selection/_validation.py\n+++ b/sklearn/model_selection/_validation.py\n@@ -21,13 +21,13 @@\n \n import numpy as np\n import scipy.sparse as sp\n-from joblib import Parallel, logger\n+from joblib import logger\n \n from ..base import is_classifier, clone\n from ..utils import indexable, check_random_state, _safe_indexing\n from ..utils.validation import _check_fit_params\n from ..utils.validation import _num_samples\n-from ..utils.fixes import delayed\n+from ..utils.parallel import delayed, Parallel\n from ..utils.metaestimators import _safe_split\n from ..metrics import check_scoring\n from ..metrics._scorer import _check_multimetric_scoring, _MultimetricScorer\ndiff --git a/sklearn/multiclass.py b/sklearn/multiclass.py\n--- a/sklearn/multiclass.py\n+++ b/sklearn/multiclass.py\n@@ -56,9 +56,7 @@\n     _ovr_decision_function,\n )\n from .utils.metaestimators import _safe_split, available_if\n-from .utils.fixes import delayed\n-\n-from joblib import Parallel\n+from .utils.parallel import delayed, Parallel\n \n __all__ = [\n     \"OneVsRestClassifier\",\ndiff --git a/sklearn/multioutput.py b/sklearn/multioutput.py\n--- a/sklearn/multioutput.py\n+++ b/sklearn/multioutput.py\n@@ -17,7 +17,6 @@\n \n import numpy as np\n import scipy.sparse as sp\n-from joblib import Parallel\n \n from abc import ABCMeta, abstractmethod\n from .base import BaseEstimator, clone, MetaEstimatorMixin\n@@ -31,7 +30,7 @@\n     has_fit_parameter,\n     _check_fit_params,\n )\n-from .utils.fixes import delayed\n+from .utils.parallel import delayed, Parallel\n from .utils._param_validation import HasMethods, StrOptions\n \n __all__ = [\ndiff --git a/sklearn/neighbors/_base.py b/sklearn/neighbors/_base.py\n--- a/sklearn/neighbors/_base.py\n+++ b/sklearn/neighbors/_base.py\n@@ -16,7 +16,7 @@\n \n import numpy as np\n from scipy.sparse import csr_matrix, issparse\n-from joblib import Parallel, effective_n_jobs\n+from joblib import effective_n_jobs\n \n from ._ball_tree import BallTree\n from ._kd_tree import KDTree\n@@ -37,8 +37,8 @@\n from ..utils.validation import check_is_fitted\n from ..utils.validation import check_non_negative\n from ..utils._param_validation import Interval, StrOptions\n-from ..utils.fixes import delayed, sp_version\n-from ..utils.fixes import parse_version\n+from ..utils.parallel import delayed, Parallel\n+from ..utils.fixes import parse_version, sp_version\n from ..exceptions import DataConversionWarning, EfficiencyWarning\n \n VALID_METRICS = dict(\ndiff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -14,7 +14,6 @@\n \n import numpy as np\n from scipy import sparse\n-from joblib import Parallel\n \n from .base import clone, TransformerMixin\n from .preprocessing import FunctionTransformer\n@@ -30,7 +29,7 @@\n from .utils import check_pandas_support\n from .utils._param_validation import HasMethods, Hidden\n from .utils._set_output import _safe_set_output, _get_output_config\n-from .utils.fixes import delayed\n+from .utils.parallel import delayed, Parallel\n from .exceptions import NotFittedError\n \n from .utils.metaestimators import _BaseComposition\ndiff --git a/sklearn/utils/fixes.py b/sklearn/utils/fixes.py\n--- a/sklearn/utils/fixes.py\n+++ b/sklearn/utils/fixes.py\n@@ -10,9 +10,7 @@\n #\n # License: BSD 3 clause\n \n-from functools import update_wrapper\n from importlib import resources\n-import functools\n import sys\n \n import sklearn\n@@ -20,7 +18,8 @@\n import scipy\n import scipy.stats\n import threadpoolctl\n-from .._config import config_context, get_config\n+\n+from .deprecation import deprecated\n from ..externals._packaging.version import parse as parse_version\n \n \n@@ -106,30 +105,6 @@ def _eigh(*args, **kwargs):\n         return scipy.linalg.eigh(*args, eigvals=eigvals, **kwargs)\n \n \n-# remove when https://github.com/joblib/joblib/issues/1071 is fixed\n-def delayed(function):\n-    \"\"\"Decorator used to capture the arguments of a function.\"\"\"\n-\n-    @functools.wraps(function)\n-    def delayed_function(*args, **kwargs):\n-        return _FuncWrapper(function), args, kwargs\n-\n-    return delayed_function\n-\n-\n-class _FuncWrapper:\n-    \"\"\" \"Load the global configuration before calling the function.\"\"\"\n-\n-    def __init__(self, function):\n-        self.function = function\n-        self.config = get_config()\n-        update_wrapper(self, self.function)\n-\n-    def __call__(self, *args, **kwargs):\n-        with config_context(**self.config):\n-            return self.function(*args, **kwargs)\n-\n-\n # Rename the `method` kwarg to `interpolation` for NumPy < 1.22, because\n # `interpolation` kwarg was deprecated in favor of `method` in NumPy >= 1.22.\n def _percentile(a, q, *, method=\"linear\", **kwargs):\n@@ -178,6 +153,16 @@ def threadpool_info():\n threadpool_info.__doc__ = threadpoolctl.threadpool_info.__doc__\n \n \n+@deprecated(\n+    \"The function `delayed` has been moved from `sklearn.utils.fixes` to \"\n+    \"`sklearn.utils.parallel`. This import path will be removed in 1.5.\"\n+)\n+def delayed(function):\n+    from sklearn.utils.parallel import delayed\n+\n+    return delayed(function)\n+\n+\n # TODO: Remove when SciPy 1.11 is the minimum supported version\n def _mode(a, axis=0):\n     if sp_version >= parse_version(\"1.9.0\"):\ndiff --git a/sklearn/utils/parallel.py b/sklearn/utils/parallel.py\nnew file mode 100644\n--- /dev/null\n+++ b/sklearn/utils/parallel.py\n@@ -0,0 +1,123 @@\n+\"\"\"Module that customize joblib tools for scikit-learn usage.\"\"\"\n+\n+import functools\n+import warnings\n+from functools import update_wrapper\n+\n+import joblib\n+\n+from .._config import config_context, get_config\n+\n+\n+def _with_config(delayed_func, config):\n+    \"\"\"Helper function that intends to attach a config to a delayed function.\"\"\"\n+    if hasattr(delayed_func, \"with_config\"):\n+        return delayed_func.with_config(config)\n+    else:\n+        warnings.warn(\n+            \"`sklearn.utils.parallel.Parallel` needs to be used in \"\n+            \"conjunction with `sklearn.utils.parallel.delayed` instead of \"\n+            \"`joblib.delayed` to correctly propagate the scikit-learn \"\n+            \"configuration to the joblib workers.\",\n+            UserWarning,\n+        )\n+        return delayed_func\n+\n+\n+class Parallel(joblib.Parallel):\n+    \"\"\"Tweak of :class:`joblib.Parallel` that propagates the scikit-learn configuration.\n+\n+    This subclass of :class:`joblib.Parallel` ensures that the active configuration\n+    (thread-local) of scikit-learn is propagated to the parallel workers for the\n+    duration of the execution of the parallel tasks.\n+\n+    The API does not change and you can refer to :class:`joblib.Parallel`\n+    documentation for more details.\n+\n+    .. versionadded:: 1.3\n+    \"\"\"\n+\n+    def __call__(self, iterable):\n+        \"\"\"Dispatch the tasks and return the results.\n+\n+        Parameters\n+        ----------\n+        iterable : iterable\n+            Iterable containing tuples of (delayed_function, args, kwargs) that should\n+            be consumed.\n+\n+        Returns\n+        -------\n+        results : list\n+            List of results of the tasks.\n+        \"\"\"\n+        # Capture the thread-local scikit-learn configuration at the time\n+        # Parallel.__call__ is issued since the tasks can be dispatched\n+        # in a different thread depending on the backend and on the value of\n+        # pre_dispatch and n_jobs.\n+        config = get_config()\n+        iterable_with_config = (\n+            (_with_config(delayed_func, config), args, kwargs)\n+            for delayed_func, args, kwargs in iterable\n+        )\n+        return super().__call__(iterable_with_config)\n+\n+\n+# remove when https://github.com/joblib/joblib/issues/1071 is fixed\n+def delayed(function):\n+    \"\"\"Decorator used to capture the arguments of a function.\n+\n+    This alternative to `joblib.delayed` is meant to be used in conjunction\n+    with `sklearn.utils.parallel.Parallel`. The latter captures the the scikit-\n+    learn configuration by calling `sklearn.get_config()` in the current\n+    thread, prior to dispatching the first task. The captured configuration is\n+    then propagated and enabled for the duration of the execution of the\n+    delayed function in the joblib workers.\n+\n+    .. versionchanged:: 1.3\n+       `delayed` was moved from `sklearn.utils.fixes` to `sklearn.utils.parallel`\n+       in scikit-learn 1.3.\n+\n+    Parameters\n+    ----------\n+    function : callable\n+        The function to be delayed.\n+\n+    Returns\n+    -------\n+    output: tuple\n+        Tuple containing the delayed function, the positional arguments, and the\n+        keyword arguments.\n+    \"\"\"\n+\n+    @functools.wraps(function)\n+    def delayed_function(*args, **kwargs):\n+        return _FuncWrapper(function), args, kwargs\n+\n+    return delayed_function\n+\n+\n+class _FuncWrapper:\n+    \"\"\"Load the global configuration before calling the function.\"\"\"\n+\n+    def __init__(self, function):\n+        self.function = function\n+        update_wrapper(self, self.function)\n+\n+    def with_config(self, config):\n+        self.config = config\n+        return self\n+\n+    def __call__(self, *args, **kwargs):\n+        config = getattr(self, \"config\", None)\n+        if config is None:\n+            warnings.warn(\n+                \"`sklearn.utils.parallel.delayed` should be used with \"\n+                \"`sklearn.utils.parallel.Parallel` to make it possible to propagate \"\n+                \"the scikit-learn configuration of the current thread to the \"\n+                \"joblib workers.\",\n+                UserWarning,\n+            )\n+            config = {}\n+        with config_context(**config):\n+            return self.function(*args, **kwargs)\n",
  "test_patch": "diff --git a/sklearn/decomposition/tests/test_dict_learning.py b/sklearn/decomposition/tests/test_dict_learning.py\n--- a/sklearn/decomposition/tests/test_dict_learning.py\n+++ b/sklearn/decomposition/tests/test_dict_learning.py\n@@ -5,8 +5,6 @@\n from functools import partial\n import itertools\n \n-from joblib import Parallel\n-\n import sklearn\n \n from sklearn.base import clone\n@@ -14,6 +12,7 @@\n from sklearn.exceptions import ConvergenceWarning\n \n from sklearn.utils import check_array\n+from sklearn.utils.parallel import Parallel\n \n from sklearn.utils._testing import assert_allclose\n from sklearn.utils._testing import assert_array_almost_equal\ndiff --git a/sklearn/ensemble/tests/test_forest.py b/sklearn/ensemble/tests/test_forest.py\n--- a/sklearn/ensemble/tests/test_forest.py\n+++ b/sklearn/ensemble/tests/test_forest.py\n@@ -18,16 +18,15 @@\n from typing import Dict, Any\n \n import numpy as np\n-from joblib import Parallel\n from scipy.sparse import csr_matrix\n from scipy.sparse import csc_matrix\n from scipy.sparse import coo_matrix\n from scipy.special import comb\n \n-import pytest\n-\n import joblib\n \n+import pytest\n+\n import sklearn\n from sklearn.dummy import DummyRegressor\n from sklearn.metrics import mean_poisson_deviance\n@@ -52,6 +51,7 @@\n from sklearn.model_selection import train_test_split, cross_val_score\n from sklearn.model_selection import GridSearchCV\n from sklearn.svm import LinearSVC\n+from sklearn.utils.parallel import Parallel\n from sklearn.utils.validation import check_random_state\n \n from sklearn.metrics import mean_squared_error\ndiff --git a/sklearn/neighbors/tests/test_kd_tree.py b/sklearn/neighbors/tests/test_kd_tree.py\n--- a/sklearn/neighbors/tests/test_kd_tree.py\n+++ b/sklearn/neighbors/tests/test_kd_tree.py\n@@ -1,7 +1,6 @@\n import numpy as np\n import pytest\n-from joblib import Parallel\n-from sklearn.utils.fixes import delayed\n+from sklearn.utils.parallel import delayed, Parallel\n \n from sklearn.neighbors._kd_tree import KDTree\n \ndiff --git a/sklearn/tests/test_config.py b/sklearn/tests/test_config.py\n--- a/sklearn/tests/test_config.py\n+++ b/sklearn/tests/test_config.py\n@@ -1,11 +1,10 @@\n import time\n from concurrent.futures import ThreadPoolExecutor\n \n-from joblib import Parallel\n import pytest\n \n from sklearn import get_config, set_config, config_context\n-from sklearn.utils.fixes import delayed\n+from sklearn.utils.parallel import delayed, Parallel\n \n \n def test_config_context():\n@@ -120,15 +119,15 @@ def test_config_threadsafe_joblib(backend):\n     should be the same as the value passed to the function. In other words,\n     it is not influenced by the other job setting assume_finite to True.\n     \"\"\"\n-    assume_finites = [False, True]\n-    sleep_durations = [0.1, 0.2]\n+    assume_finites = [False, True, False, True]\n+    sleep_durations = [0.1, 0.2, 0.1, 0.2]\n \n     items = Parallel(backend=backend, n_jobs=2)(\n         delayed(set_assume_finite)(assume_finite, sleep_dur)\n         for assume_finite, sleep_dur in zip(assume_finites, sleep_durations)\n     )\n \n-    assert items == [False, True]\n+    assert items == [False, True, False, True]\n \n \n def test_config_threadsafe():\n@@ -136,8 +135,8 @@ def test_config_threadsafe():\n     between threads. Same test as `test_config_threadsafe_joblib` but with\n     `ThreadPoolExecutor`.\"\"\"\n \n-    assume_finites = [False, True]\n-    sleep_durations = [0.1, 0.2]\n+    assume_finites = [False, True, False, True]\n+    sleep_durations = [0.1, 0.2, 0.1, 0.2]\n \n     with ThreadPoolExecutor(max_workers=2) as e:\n         items = [\n@@ -145,4 +144,4 @@ def test_config_threadsafe():\n             for output in e.map(set_assume_finite, assume_finites, sleep_durations)\n         ]\n \n-    assert items == [False, True]\n+    assert items == [False, True, False, True]\ndiff --git a/sklearn/utils/tests/test_fixes.py b/sklearn/utils/tests/test_fixes.py\n--- a/sklearn/utils/tests/test_fixes.py\n+++ b/sklearn/utils/tests/test_fixes.py\n@@ -11,8 +11,7 @@\n \n from sklearn.utils._testing import assert_array_equal\n \n-from sklearn.utils.fixes import _object_dtype_isnan\n-from sklearn.utils.fixes import loguniform\n+from sklearn.utils.fixes import _object_dtype_isnan, delayed, loguniform\n \n \n @pytest.mark.parametrize(\"dtype, val\", ([object, 1], [object, \"a\"], [float, 1]))\n@@ -46,3 +45,14 @@ def test_loguniform(low, high, base):\n     assert loguniform(base**low, base**high).rvs(random_state=0) == loguniform(\n         base**low, base**high\n     ).rvs(random_state=0)\n+\n+\n+def test_delayed_deprecation():\n+    \"\"\"Check that we issue the FutureWarning regarding the deprecation of delayed.\"\"\"\n+\n+    def func(x):\n+        return x\n+\n+    warn_msg = \"The function `delayed` has been moved from `sklearn.utils.fixes`\"\n+    with pytest.warns(FutureWarning, match=warn_msg):\n+        delayed(func)\ndiff --git a/sklearn/utils/tests/test_parallel.py b/sklearn/utils/tests/test_parallel.py\n--- a/sklearn/utils/tests/test_parallel.py\n+++ b/sklearn/utils/tests/test_parallel.py\n@@ -1,10 +1,19 @@\n-import pytest\n-from joblib import Parallel\n+import time\n \n+import joblib\n+import numpy as np\n+import pytest\n from numpy.testing import assert_array_equal\n \n-from sklearn._config import config_context, get_config\n-from sklearn.utils.fixes import delayed\n+from sklearn import config_context, get_config\n+from sklearn.compose import make_column_transformer\n+from sklearn.datasets import load_iris\n+from sklearn.ensemble import RandomForestClassifier\n+from sklearn.model_selection import GridSearchCV\n+from sklearn.pipeline import make_pipeline\n+from sklearn.preprocessing import StandardScaler\n+\n+from sklearn.utils.parallel import delayed, Parallel\n \n \n def get_working_memory():\n@@ -22,3 +31,71 @@ def test_configuration_passes_through_to_joblib(n_jobs, backend):\n         )\n \n     assert_array_equal(results, [123] * 2)\n+\n+\n+def test_parallel_delayed_warnings():\n+    \"\"\"Informative warnings should be raised when mixing sklearn and joblib API\"\"\"\n+    # We should issue a warning when one wants to use sklearn.utils.fixes.Parallel\n+    # with joblib.delayed. The config will not be propagated to the workers.\n+    warn_msg = \"`sklearn.utils.parallel.Parallel` needs to be used in conjunction\"\n+    with pytest.warns(UserWarning, match=warn_msg) as records:\n+        Parallel()(joblib.delayed(time.sleep)(0) for _ in range(10))\n+    assert len(records) == 10\n+\n+    # We should issue a warning if one wants to use sklearn.utils.fixes.delayed with\n+    # joblib.Parallel\n+    warn_msg = (\n+        \"`sklearn.utils.parallel.delayed` should be used with \"\n+        \"`sklearn.utils.parallel.Parallel` to make it possible to propagate\"\n+    )\n+    with pytest.warns(UserWarning, match=warn_msg) as records:\n+        joblib.Parallel()(delayed(time.sleep)(0) for _ in range(10))\n+    assert len(records) == 10\n+\n+\n+@pytest.mark.parametrize(\"n_jobs\", [1, 2])\n+def test_dispatch_config_parallel(n_jobs):\n+    \"\"\"Check that we properly dispatch the configuration in parallel processing.\n+\n+    Non-regression test for:\n+    https://github.com/scikit-learn/scikit-learn/issues/25239\n+    \"\"\"\n+    pd = pytest.importorskip(\"pandas\")\n+    iris = load_iris(as_frame=True)\n+\n+    class TransformerRequiredDataFrame(StandardScaler):\n+        def fit(self, X, y=None):\n+            assert isinstance(X, pd.DataFrame), \"X should be a DataFrame\"\n+            return super().fit(X, y)\n+\n+        def transform(self, X, y=None):\n+            assert isinstance(X, pd.DataFrame), \"X should be a DataFrame\"\n+            return super().transform(X, y)\n+\n+    dropper = make_column_transformer(\n+        (\"drop\", [0]),\n+        remainder=\"passthrough\",\n+        n_jobs=n_jobs,\n+    )\n+    param_grid = {\"randomforestclassifier__max_depth\": [1, 2, 3]}\n+    search_cv = GridSearchCV(\n+        make_pipeline(\n+            dropper,\n+            TransformerRequiredDataFrame(),\n+            RandomForestClassifier(n_estimators=5, n_jobs=n_jobs),\n+        ),\n+        param_grid,\n+        cv=5,\n+        n_jobs=n_jobs,\n+        error_score=\"raise\",  # this search should not fail\n+    )\n+\n+    # make sure that `fit` would fail in case we don't request dataframe\n+    with pytest.raises(AssertionError, match=\"X should be a DataFrame\"):\n+        search_cv.fit(iris.data, iris.target)\n+\n+    with config_context(transform_output=\"pandas\"):\n+        # we expect each intermediate steps to output a DataFrame\n+        search_cv.fit(iris.data, iris.target)\n+\n+    assert not np.isnan(search_cv.cv_results_[\"mean_test_score\"]).any()\n",
  "problem_statement": "FIX pass explicit configuration to delayed\nWorking alternative to #25242\r\ncloses #25242 \r\ncloses #25239 \r\n\r\nThis is an alternative to #25242 that does not work if the thread import scikit-learn is different from the thread making the call to `Parallel`.\r\n\r\nHere, we have an alternative where we pass explicitly the configuration that is obtained by the thread that makes the `Parallel` code.\r\n\r\nWe raise a warning if this is not the case. It makes sure that it will turn into an error if we forget to pass the config to `delayed`. The code will still be working if `joblib` decides to provide a way to provide a `context` and a `config`.\n",
  "hints_text": "Thinking more about it, we could also make this more automatic by subclassing `joblib.Parallel` as `sklearn.fixes.Parallel` to overried the `Parallel.__call__` method to automatically call `sklearn.get_config` there and then rewrap the generator args of `Parallel.__call__` to call `delayed_object.set_config(config)` on each task.\r\n\r\nThat would mandate using the `sklearn.fixes.Parallel` subclass everywhere though.\r\n\r\nAnd indeed, maybe we should consider those tools (`Parallel` and `delayed`) semi-public with proper docstrings to explain how they extend the joblib equivalent to propagate scikit-learn specific configuration to worker threads and processes.",
  "created_at": "2023-01-11T16:39:30Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/decomposition/tests/test_dict_learning.py::test_cd_work_on_joblib_memmapped_data\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[float32-float32-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[float32-float32-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[float64-float64-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[float64-float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[int32-float64-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[int32-float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[int64-float64-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_dtype_match[int64-float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_lars_code_positivity\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_lars_dict_positivity[False]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_lars_dict_positivity[True]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_lars_positive_parameter\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_lassocd_readonly_data\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_nonzero_coefs\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_numerical_consistency[cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_numerical_consistency[lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_deprecated_args[inner_stats-None]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_deprecated_args[iter_offset-0]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_deprecated_args[n_iter-5]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_deprecated_args[return_inner_stats-False]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_deprecated_args[return_n_iter-False]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[float32-float32-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[float32-float32-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[float64-float64-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[float64-float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[int32-float64-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[int32-float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[int64-float64-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_dtype_match[int64-float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_estimator_shapes\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_initialization\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_lars_positive_parameter\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_n_iter_deprecated\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_numerical_consistency[cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_numerical_consistency[lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_overcomplete\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_partial_fit\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_positivity[False-False]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_positivity[False-True]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_positivity[True-False]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_positivity[True-True]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_readonly_initialization\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_shapes\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_online_verbosity\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_overcomplete\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[False-False-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[False-False-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[False-False-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[False-True-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[False-True-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[False-True-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[True-False-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[True-False-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[True-False-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[True-True-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[True-True-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_positivity[True-True-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_reconstruction\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_reconstruction_parallel\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_shapes\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dict_learning_split\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float32-float32-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[float64-float64-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int32-float64-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_dictionary_learning_dtype_match[int64-float64-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_get_feature_names_out[DictionaryLearning]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_get_feature_names_out[MiniBatchDictionaryLearning]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_get_feature_names_out[SparseCoder]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_max_iter\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dict_learning_n_iter_deprecated\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float32-float32-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[float64-float64-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int32-float64-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-lasso_cd-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-lasso_cd-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-lasso_lars-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-lasso_lars-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-omp-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-omp-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-threshold-cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_dtype_match[int64-float64-threshold-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_lars[False]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_lars[True]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[False-False-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[False-False-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[False-False-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[False-True-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[False-True-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[False-True-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[True-False-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[True-False-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[True-False-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[True-True-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[True-True-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_positivity[True-True-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_minibatch_dictionary_learning_warns_and_ignore_n_iter\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_common_transformer\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float32-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float32-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float32-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float32-omp]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float32-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float64-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float64-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float64-omp]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_dtype_match[float64-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_estimator\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_estimator_clone\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_n_features_in\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_coder_parallel_mmap\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float32-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float32-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float32-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float32-omp]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float32-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float64-lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float64-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float64-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float64-omp]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_dtype_match[float64-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_error\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_error_default_sparsity\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_input\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_numerical_consistency[lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_numerical_consistency[lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_numerical_consistency[lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_numerical_consistency[omp]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_numerical_consistency[threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_positivity[False-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_positivity[False-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_positivity[False-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_positivity[True-lasso_cd]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_positivity[True-lasso_lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_positivity[True-threshold]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_shapes\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_shapes_omp\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_unavailable_positivity[lars]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_sparse_encode_unavailable_positivity[omp]\", \"sklearn/decomposition/tests/test_dict_learning.py::test_update_dict\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_backend_respected\", \"sklearn/ensemble/tests/test_forest.py::test_balance_property_random_forest[poisson]\", \"sklearn/ensemble/tests/test_forest.py::test_balance_property_random_forest[squared_error]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_balanced_and_bootstrap_multi_output[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_balanced_and_bootstrap_multi_output[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_errors[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_errors[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weights[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weights[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_classes_shape[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_classes_shape[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_classification_toy[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_classification_toy[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_distribution\", \"sklearn/ensemble/tests/test_forest.py::test_dtype_convert\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_degenerate_feature_importances\", \"sklearn/ensemble/tests/test_forest.py::test_forest_feature_importances_sum\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_error[X0-y0-params0-Out\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_error[X1-y1-params1-The\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_y_sparse\", \"sklearn/ensemble/tests/test_forest.py::test_gridsearch[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_gridsearch[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-gini-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-gini-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-log_loss-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-log_loss-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-absolute_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-absolute_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-friedman_mse-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-friedman_mse-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-squared_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-squared_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-gini-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-gini-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-log_loss-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-log_loss-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-absolute_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-absolute_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-friedman_mse-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-friedman_mse-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-squared_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-squared_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances_asymptotic\", \"sklearn/ensemble/tests/test_forest.py::test_iris[gini-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_iris[gini-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_iris[log_loss-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_iris[log_loss-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_little_tree_with_small_max_samples[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_little_tree_with_small_max_samples[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_features_deprecation[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_features_deprecation[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_features_deprecation[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_features_deprecation[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_classifiers[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_classifiers[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_regressors[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_regressors[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_impurity_decrease\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_mse_criterion_object_segfault_smoke_test[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_mse_criterion_object_segfault_smoke_test[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput_string[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput_string[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel_train\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_poisson_vs_mse\", \"sklearn/ensemble/tests/test_forest.py::test_poisson_y_positive_check\", \"sklearn/ensemble/tests/test_forest.py::test_probability[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_probability[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_random_hasher\", \"sklearn/ensemble/tests/test_forest.py::test_random_hasher_sparse_data\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_dense_equal\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_dense_type\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_embedding_feature_names_out\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_embedding_raise_error_oob[False]\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_embedding_raise_error_oob[True]\", \"sklearn/ensemble/tests/test_forest.py::test_read_only_buffer\", \"sklearn/ensemble/tests/test_forest.py::test_regression[absolute_error-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[absolute_error-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[friedman_mse-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[friedman_mse-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[squared_error-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[squared_error-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regressor_attributes[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regressor_attributes[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[RandomTreesEmbedding]\", \"sklearn/neighbors/tests/test_kd_tree.py::test_array_object_type\", \"sklearn/neighbors/tests/test_kd_tree.py::test_kdtree_picklable_with_joblib\", \"sklearn/tests/test_config.py::test_config_context\", \"sklearn/tests/test_config.py::test_config_context_exception\", \"sklearn/tests/test_config.py::test_config_threadsafe\", \"sklearn/tests/test_config.py::test_config_threadsafe_joblib[loky]\", \"sklearn/tests/test_config.py::test_config_threadsafe_joblib[multiprocessing]\", \"sklearn/tests/test_config.py::test_config_threadsafe_joblib[threading]\", \"sklearn/tests/test_config.py::test_set_config\", \"sklearn/utils/tests/test_fixes.py::test_delayed_deprecation\", \"sklearn/utils/tests/test_fixes.py::test_loguniform[-1-0-10]\", \"sklearn/utils/tests/test_fixes.py::test_loguniform[-1-1-2]\", \"sklearn/utils/tests/test_fixes.py::test_loguniform[0-2-2.718281828459045]\", \"sklearn/utils/tests/test_fixes.py::test_object_dtype_isnan[float-1]\", \"sklearn/utils/tests/test_fixes.py::test_object_dtype_isnan[object-1]\", \"sklearn/utils/tests/test_fixes.py::test_object_dtype_isnan[object-a]\", \"sklearn/utils/tests/test_parallel.py::test_configuration_passes_through_to_joblib[loky-1]\", \"sklearn/utils/tests/test_parallel.py::test_configuration_passes_through_to_joblib[loky-2]\", \"sklearn/utils/tests/test_parallel.py::test_configuration_passes_through_to_joblib[multiprocessing-1]\", \"sklearn/utils/tests/test_parallel.py::test_configuration_passes_through_to_joblib[multiprocessing-2]\", \"sklearn/utils/tests/test_parallel.py::test_configuration_passes_through_to_joblib[threading-1]\", \"sklearn/utils/tests/test_parallel.py::test_configuration_passes_through_to_joblib[threading-2]\", \"sklearn/utils/tests/test_parallel.py::test_dispatch_config_parallel[1]\", \"sklearn/utils/tests/test_parallel.py::test_dispatch_config_parallel[2]\", \"sklearn/utils/tests/test_parallel.py::test_parallel_delayed_warnings\"]",
  "PASS_TO_PASS": "[]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "patch_files": [
    "benchmarks/bench_saga.py",
    "sklearn/calibration.py",
    "sklearn/cluster/_mean_shift.py",
    "sklearn/compose/_column_transformer.py",
    "sklearn/covariance/_graph_lasso.py",
    "sklearn/decomposition/_dict_learning.py",
    "sklearn/decomposition/_lda.py",
    "sklearn/ensemble/_bagging.py",
    "sklearn/ensemble/_forest.py",
    "sklearn/ensemble/_stacking.py",
    "sklearn/ensemble/_voting.py",
    "sklearn/feature_selection/_rfe.py",
    "sklearn/inspection/_permutation_importance.py",
    "sklearn/inspection/_plot/partial_dependence.py",
    "sklearn/linear_model/_base.py",
    "sklearn/linear_model/_coordinate_descent.py",
    "sklearn/linear_model/_least_angle.py",
    "sklearn/linear_model/_logistic.py",
    "sklearn/linear_model/_omp.py",
    "sklearn/linear_model/_stochastic_gradient.py",
    "sklearn/linear_model/_theil_sen.py",
    "sklearn/manifold/_mds.py",
    "sklearn/metrics/pairwise.py",
    "sklearn/model_selection/_search.py",
    "sklearn/model_selection/_validation.py",
    "sklearn/multiclass.py",
    "sklearn/multioutput.py",
    "sklearn/neighbors/_base.py",
    "sklearn/pipeline.py",
    "sklearn/utils/fixes.py",
    "sklearn/utils/parallel.py"
  ],
  "test_patch_files": [
    "sklearn/decomposition/tests/test_dict_learning.py",
    "sklearn/ensemble/tests/test_forest.py",
    "sklearn/neighbors/tests/test_kd_tree.py",
    "sklearn/tests/test_config.py",
    "sklearn/utils/tests/test_fixes.py",
    "sklearn/utils/tests/test_parallel.py"
  ],
  "patch_diff_details": {
    "benchmarks/bench_saga.py": {
      "diffs": [
        {
          "start_line_old": 10,
          "end_line_old": 11
        }
      ]
    },
    "sklearn/calibration.py": {
      "diffs": [
        {
          "start_line_old": 17,
          "end_line_old": 17
        },
        {
          "start_line_old": 39,
          "end_line_old": 39
        }
      ]
    },
    "sklearn/cluster/_mean_shift.py": {
      "diffs": [
        {
          "start_line_old": 19,
          "end_line_old": 25
        }
      ]
    },
    "sklearn/compose/_column_transformer.py": {
      "diffs": [
        {
          "start_line_old": 15,
          "end_line_old": 15
        },
        {
          "start_line_old": 29,
          "end_line_old": 29
        }
      ]
    },
    "sklearn/covariance/_graph_lasso.py": {
      "diffs": [
        {
          "start_line_old": 16,
          "end_line_old": 16
        },
        {
          "start_line_old": 26,
          "end_line_old": 26
        }
      ]
    },
    "sklearn/decomposition/_dict_learning.py": {
      "diffs": [
        {
          "start_line_old": 16,
          "end_line_old": 16
        },
        {
          "start_line_old": 24,
          "end_line_old": 24
        }
      ]
    },
    "sklearn/decomposition/_lda.py": {
      "diffs": [
        {
          "start_line_old": 18,
          "end_line_old": 24
        }
      ]
    },
    "sklearn/ensemble/_bagging.py": {
      "diffs": [
        {
          "start_line_old": 15,
          "end_line_old": 16,
          "file_pos": 5,
          "file_context_length": 38662,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/ensemble/_bagging.py__parallel_predict_log_proba__parallel_predict_log_proba.7.1",
          "closest_snippet_line_distance": 166
        },
        {
          "start_line_old": 28,
          "end_line_old": 28,
          "file_pos": 5,
          "file_context_length": 38662,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/ensemble/_bagging.py__parallel_predict_log_proba__parallel_predict_log_proba.7.1",
          "closest_snippet_line_distance": 153
        }
      ]
    },
    "sklearn/ensemble/_forest.py": {
      "diffs": [
        {
          "start_line_old": 51,
          "end_line_old": 51,
          "file_pos": 21,
          "file_context_length": 192182,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/ensemble/_forest.py__accumulate_prediction_ForestClassifier.__init__.1",
          "closest_snippet_line_distance": 603
        },
        {
          "start_line_old": 69,
          "end_line_old": 69,
          "file_pos": 21,
          "file_context_length": 192182,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/ensemble/_forest.py__accumulate_prediction_ForestClassifier.__init__.1",
          "closest_snippet_line_distance": 585
        }
      ]
    },
    "sklearn/ensemble/_stacking.py": {
      "diffs": [
        {
          "start_line_old": 11,
          "end_line_old": 11
        },
        {
          "start_line_old": 36,
          "end_line_old": 36
        }
      ]
    },
    "sklearn/ensemble/_voting.py": {
      "diffs": [
        {
          "start_line_old": 21,
          "end_line_old": 22
        },
        {
          "start_line_old": 39,
          "end_line_old": 39
        }
      ]
    },
    "sklearn/feature_selection/_rfe.py": {
      "diffs": [
        {
          "start_line_old": 11,
          "end_line_old": 11
        },
        {
          "start_line_old": 19,
          "end_line_old": 19
        }
      ]
    },
    "sklearn/inspection/_permutation_importance.py": {
      "diffs": [
        {
          "start_line_old": 4,
          "end_line_old": 4
        },
        {
          "start_line_old": 13,
          "end_line_old": 13
        }
      ]
    },
    "sklearn/inspection/_plot/partial_dependence.py": {
      "diffs": [
        {
          "start_line_old": 9,
          "end_line_old": 9
        },
        {
          "start_line_old": 19,
          "end_line_old": 19
        }
      ]
    },
    "sklearn/linear_model/_base.py": {
      "diffs": [
        {
          "start_line_old": 28,
          "end_line_old": 28
        },
        {
          "start_line_old": 43,
          "end_line_old": 43
        }
      ]
    },
    "sklearn/linear_model/_coordinate_descent.py": {
      "diffs": [
        {
          "start_line_old": 17,
          "end_line_old": 17,
          "file_pos": 4,
          "file_context_length": 29301,
          "pos": 4,
          "context_length": 2027
        },
        {
          "start_line_old": 33,
          "end_line_old": 33,
          "file_pos": 4,
          "file_context_length": 29301,
          "pos": 4,
          "context_length": 2027
        }
      ]
    },
    "sklearn/linear_model/_least_angle.py": {
      "diffs": [
        {
          "start_line_old": 19,
          "end_line_old": 19
        },
        {
          "start_line_old": 31,
          "end_line_old": 31
        }
      ]
    },
    "sklearn/linear_model/_logistic.py": {
      "diffs": [
        {
          "start_line_old": 19,
          "end_line_old": 19
        },
        {
          "start_line_old": 37,
          "end_line_old": 37
        }
      ]
    },
    "sklearn/linear_model/_omp.py": {
      "diffs": [
        {
          "start_line_old": 15,
          "end_line_old": 20,
          "file_pos": 15,
          "file_context_length": 112281,
          "pos": 20,
          "context_length": 7315
        }
      ]
    },
    "sklearn/linear_model/_stochastic_gradient.py": {
      "diffs": [
        {
          "start_line_old": 15,
          "end_line_old": 16,
          "file_pos": 14,
          "file_context_length": 102982,
          "pos": 19,
          "context_length": 7154
        },
        {
          "start_line_old": 29,
          "end_line_old": 29,
          "file_pos": 14,
          "file_context_length": 102982,
          "pos": 19,
          "context_length": 7154
        }
      ]
    },
    "sklearn/linear_model/_theil_sen.py": {
      "diffs": [
        {
          "start_line_old": 18,
          "end_line_old": 24
        }
      ]
    },
    "sklearn/manifold/_mds.py": {
      "diffs": [
        {
          "start_line_old": 11,
          "end_line_old": 11
        },
        {
          "start_line_old": 20,
          "end_line_old": 20
        }
      ]
    },
    "sklearn/metrics/pairwise.py": {
      "diffs": [
        {
          "start_line_old": 18,
          "end_line_old": 18,
          "file_pos": 18,
          "file_context_length": 153412,
          "pos": 25,
          "context_length": 8764
        },
        {
          "start_line_old": 30,
          "end_line_old": 30,
          "file_pos": 18,
          "file_context_length": 153412,
          "pos": 25,
          "context_length": 8764
        }
      ]
    },
    "sklearn/model_selection/_search.py": {
      "diffs": [
        {
          "start_line_old": 36,
          "end_line_old": 43
        }
      ]
    },
    "sklearn/model_selection/_validation.py": {
      "diffs": [
        {
          "start_line_old": 24,
          "end_line_old": 30
        }
      ]
    },
    "sklearn/multiclass.py": {
      "diffs": [
        {
          "start_line_old": 59,
          "end_line_old": 61
        }
      ]
    },
    "sklearn/multioutput.py": {
      "diffs": [
        {
          "start_line_old": 20,
          "end_line_old": 20
        },
        {
          "start_line_old": 34,
          "end_line_old": 34
        }
      ]
    },
    "sklearn/neighbors/_base.py": {
      "diffs": [
        {
          "start_line_old": 19,
          "end_line_old": 19
        },
        {
          "start_line_old": 40,
          "end_line_old": 41
        }
      ]
    },
    "sklearn/pipeline.py": {
      "diffs": [
        {
          "start_line_old": 17,
          "end_line_old": 17,
          "file_pos": 20,
          "file_context_length": 168156,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/pipeline.py_FeatureUnion._log_message_FeatureUnion._parallel_func.6.1",
          "closest_snippet_line_distance": 1213
        },
        {
          "start_line_old": 33,
          "end_line_old": 33,
          "file_pos": 20,
          "file_context_length": 168156,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/pipeline.py_FeatureUnion._log_message_FeatureUnion._parallel_func.6.1",
          "closest_snippet_line_distance": 1197
        }
      ]
    },
    "sklearn/utils/fixes.py": {
      "diffs": [
        {
          "start_line_old": 13,
          "end_line_old": 15,
          "file_pos": 2,
          "file_context_length": 2008,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_25_threadpool_info.__doc__.1",
          "closest_snippet_line_distance": 85,
          "pos": 33,
          "context_length": 10944
        },
        {
          "start_line_old": 23,
          "end_line_old": 23,
          "file_pos": 2,
          "file_context_length": 2008,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_25_threadpool_info.__doc__.1",
          "closest_snippet_line_distance": 75,
          "pos": 33,
          "context_length": 10944
        },
        {
          "start_line_old": 109,
          "end_line_old": 132,
          "file_pos": 2,
          "file_context_length": 2008,
          "pos": 2,
          "context_length": 811
        },
        {
          "start_line_old": 181,
          "end_line_old": 181,
          "file_pos": 2,
          "file_context_length": 2008,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_1__object_dtype_isnan.1.1",
          "closest_snippet_line_distance": 135
        }
      ]
    },
    "sklearn/utils/parallel.py": {
      "diffs": [
        {
          "start_line_old": 0,
          "end_line_old": 0
        }
      ]
    }
  },
  "vectors": 3906,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/_joblib.py__warnings_",
      "distance": 0.9504393339157104,
      "file_path": "sklearn/utils/_joblib.py",
      "start_line": 1,
      "end_line": 32,
      "tokens": 177,
      "context_length": 177
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_25_threadpool_info.__doc__.1",
      "distance": 1.1083271503448486,
      "file_path": "sklearn/utils/fixes.py",
      "start_line": 98,
      "end_line": 178,
      "tokens": 634,
      "context_length": 811,
      "file_pos": 2
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/_config.py_config_context_",
      "distance": 1.1667687892913818,
      "file_path": "sklearn/_config.py",
      "start_line": 162,
      "end_line": 295,
      "tokens": 1017,
      "context_length": 1828
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/_coordinate_descent.py_sys_27",
      "distance": 1.1878913640975952,
      "file_path": "sklearn/linear_model/_coordinate_descent.py",
      "start_line": 8,
      "end_line": 36,
      "tokens": 199,
      "context_length": 2027,
      "file_pos": 4
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/_config.py_1__get_threadlocal_config.3.1",
      "distance": 1.1884987354278564,
      "file_path": "sklearn/_config.py",
      "start_line": 1,
      "end_line": 27,
      "tokens": 214,
      "context_length": 2241
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_bagging.py__parallel_decision_function__parallel_predict_regression.2.1",
      "distance": 1.2065808773040771,
      "file_path": "sklearn/ensemble/_bagging.py",
      "start_line": 206,
      "end_line": 219,
      "tokens": 108,
      "context_length": 2349,
      "file_pos": 5
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/_config.py_set_config_set_config.local_config.1",
      "distance": 1.2148404121398926,
      "file_path": "sklearn/_config.py",
      "start_line": 48,
      "end_line": 142,
      "tokens": 755,
      "context_length": 3104
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/_testing.py_65__delete_folder.2.2.1.1",
      "distance": 1.2162891626358032,
      "file_path": "sklearn/utils/_testing.py",
      "start_line": 391,
      "end_line": 450,
      "tokens": 539,
      "context_length": 3643
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/_config.py_set_config.3_set_config.10.1",
      "distance": 1.218003511428833,
      "file_path": "sklearn/_config.py",
      "start_line": 144,
      "end_line": 159,
      "tokens": 235,
      "context_length": 3878
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_ConvergenceWarning_DataConversionWarning.1",
      "distance": 1.2201577425003052,
      "file_path": "sklearn/exceptions.py",
      "start_line": 41,
      "end_line": 64,
      "tokens": 174,
      "context_length": 4052
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/setup.py_53_build_ext_subclass.run.3",
      "distance": 1.2304012775421143,
      "file_path": "setup.py",
      "start_line": 169,
      "end_line": 211,
      "tokens": 344,
      "context_length": 4396
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/conftest.py_pytest_collection_modifyitems_pytest_collection_modifyitems.24.2.1.1",
      "distance": 1.234207034111023,
      "file_path": "sklearn/conftest.py",
      "start_line": 80,
      "end_line": 184,
      "tokens": 794,
      "context_length": 5190
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/__init__.py_1__IS_32BIT.1",
      "distance": 1.234567403793335,
      "file_path": "sklearn/utils/__init__.py",
      "start_line": 1,
      "end_line": 80,
      "tokens": 513,
      "context_length": 5703
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_EfficiencyWarning_UndefinedMetricWarning.1",
      "distance": 1.2542250156402588,
      "file_path": "sklearn/exceptions.py",
      "start_line": 81,
      "end_line": 118,
      "tokens": 257,
      "context_length": 5960
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/_kmeans.py__BaseKMeans._warn_mkl_vcomp__BaseKMeans._check_mkl_vcomp.8.4.1",
      "distance": 1.2614104747772217,
      "file_path": "sklearn/cluster/_kmeans.py",
      "start_line": 893,
      "end_line": 918,
      "tokens": 304,
      "context_length": 6264
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/sklearn/experimental/enable_hist_gradient_boosting.py_1_",
      "distance": 1.2667903900146484,
      "file_path": "sklearn/experimental/enable_hist_gradient_boosting.py",
      "start_line": 1,
      "end_line": 22,
      "tokens": 171,
      "context_length": 6435
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/deprecation.py_warnings_deprecated.__init__.self.extra.1",
      "distance": 1.2670314311981201,
      "file_path": "sklearn/utils/deprecation.py",
      "start_line": 1,
      "end_line": 35,
      "tokens": 195,
      "context_length": 6630
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_InconsistentVersionWarning.__str___",
      "distance": 1.2701959609985352,
      "file_path": "sklearn/exceptions.py",
      "start_line": 155,
      "end_line": 166,
      "tokens": 121,
      "context_length": 6751
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/_stochastic_gradient.py_np_MAX_INT.1",
      "distance": 1.2710096836090088,
      "file_path": "sklearn/linear_model/_stochastic_gradient.py",
      "start_line": 9,
      "end_line": 58,
      "tokens": 403,
      "context_length": 7154,
      "file_pos": 14
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/_omp.py_1_premature.1",
      "distance": 1.2754396200180054,
      "file_path": "sklearn/linear_model/_omp.py",
      "start_line": 1,
      "end_line": 28,
      "tokens": 161,
      "context_length": 7315,
      "file_pos": 15
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_bagging.py__parallel_predict_proba__parallel_predict_proba.5.1",
      "distance": 1.2794368267059326,
      "file_path": "sklearn/ensemble/_bagging.py",
      "start_line": 154,
      "end_line": 178,
      "tokens": 178,
      "context_length": 7493,
      "file_pos": 15
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_bagging.py__parallel_build_estimators__parallel_build_estimators.16.1",
      "distance": 1.2816100120544434,
      "file_path": "sklearn/ensemble/_bagging.py",
      "start_line": 73,
      "end_line": 151,
      "tokens": 540,
      "context_length": 8033,
      "file_pos": 15
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/doc/conf.py_setup_setup.3",
      "distance": 1.2864898443222046,
      "file_path": "doc/conf.py",
      "start_line": 553,
      "end_line": 562,
      "tokens": 123,
      "context_length": 8156
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/validation.py_31__deprecate_positional_args.4.1",
      "distance": 1.2889938354492188,
      "file_path": "sklearn/utils/validation.py",
      "start_line": 39,
      "end_line": 93,
      "tokens": 417,
      "context_length": 8573
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/metrics/pairwise.py_itertools_DataConversionWarning",
      "distance": 1.2911393642425537,
      "file_path": "sklearn/metrics/pairwise.py",
      "start_line": 10,
      "end_line": 35,
      "tokens": 191,
      "context_length": 8764,
      "file_pos": 18
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/sklearn/exceptions.py_InconsistentVersionWarning_InconsistentVersionWarning.__init__.self.original_sklearn_version.1",
      "distance": 1.2922677993774414,
      "file_path": "sklearn/exceptions.py",
      "start_line": 133,
      "end_line": 153,
      "tokens": 130,
      "context_length": 8894
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/_testing.py__IgnoreWarnings__IgnoreWarnings.__exit__.4",
      "distance": 1.2936737537384033,
      "file_path": "sklearn/utils/_testing.py",
      "start_line": 161,
      "end_line": 215,
      "tokens": 401,
      "context_length": 9295
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/linear_model/_passive_aggressive.py_PassiveAggressiveClassifier._parameter_constraints_PassiveAggressiveClassifier.__init__.self.loss.1",
      "distance": 1.2958650588989258,
      "file_path": "sklearn/linear_model/_passive_aggressive.py",
      "start_line": 177,
      "end_line": 221,
      "tokens": 285,
      "context_length": 9580
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/sklearn/pipeline.py_FeatureUnion._log_message_FeatureUnion._parallel_func.6.1",
      "distance": 1.2977596521377563,
      "file_path": "sklearn/pipeline.py",
      "start_line": 1230,
      "end_line": 1253,
      "tokens": 193,
      "context_length": 9773,
      "file_pos": 20
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_forest.py__accumulate_prediction_ForestClassifier.__init__.1",
      "distance": 1.298403263092041,
      "file_path": "sklearn/ensemble/_forest.py",
      "start_line": 654,
      "end_line": 708,
      "tokens": 316,
      "context_length": 10089,
      "file_pos": 21
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/__init__.py_38_38.4._distributor_init",
      "distance": 1.2985422611236572,
      "file_path": "sklearn/__init__.py",
      "start_line": 68,
      "end_line": 129,
      "tokens": 430,
      "context_length": 10519
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/cluster/_kmeans.py_MiniBatchKMeans._warn_mkl_vcomp_MiniBatchKMeans._warn_mkl_vcomp.2",
      "distance": 1.303354024887085,
      "file_path": "sklearn/cluster/_kmeans.py",
      "start_line": 1912,
      "end_line": 1921,
      "tokens": 120,
      "context_length": 10639
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/fixes.py_1__object_dtype_isnan.1.1",
      "distance": 1.3078349828720093,
      "file_path": "sklearn/utils/fixes.py",
      "start_line": 1,
      "end_line": 46,
      "tokens": 305,
      "context_length": 10944,
      "file_pos": 22
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_bagging.py__parallel_predict_log_proba__parallel_predict_log_proba.7.1",
      "distance": 1.3083631992340088,
      "file_path": "sklearn/ensemble/_bagging.py",
      "start_line": 181,
      "end_line": 203,
      "tokens": 203,
      "context_length": 11147,
      "file_pos": 22
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/deprecation.py_deprecated._decorate_class_deprecated._decorate_class.9.1",
      "distance": 1.3120810985565186,
      "file_path": "sklearn/utils/deprecation.py",
      "start_line": 58,
      "end_line": 75,
      "tokens": 123,
      "context_length": 11270
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_prediction_latency.py_benchmark_benchmark.9",
      "distance": 1.3127784729003906,
      "file_path": "examples/applications/plot_prediction_latency.py",
      "start_line": 177,
      "end_line": 197,
      "tokens": 229,
      "context_length": 11499
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_hist_gradient_boosting_threading.py_max_threads_66.3.1",
      "distance": 1.3135805130004883,
      "file_path": "benchmarks/bench_hist_gradient_boosting_threading.py",
      "start_line": 241,
      "end_line": 289,
      "tokens": 367,
      "context_length": 11866
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/_build_utils/openmp_helpers.py_check_openmp_support_",
      "distance": 1.3140668869018555,
      "file_path": "sklearn/_build_utils/openmp_helpers.py",
      "start_line": 40,
      "end_line": 133,
      "tokens": 698,
      "context_length": 12564
    }
  ],
  "files": [
    {
      "file_path": "sklearn/utils/_joblib.py",
      "position": 1,
      "tokens": 177,
      "context_length": 177
    },
    {
      "file_path": "sklearn/utils/fixes.py",
      "position": 2,
      "tokens": 1831,
      "context_length": 2008
    },
    {
      "file_path": "sklearn/_config.py",
      "position": 3,
      "tokens": 2277,
      "context_length": 4285
    },
    {
      "file_path": "sklearn/linear_model/_coordinate_descent.py",
      "position": 4,
      "tokens": 25016,
      "context_length": 29301
    },
    {
      "file_path": "sklearn/ensemble/_bagging.py",
      "position": 5,
      "tokens": 9361,
      "context_length": 38662
    },
    {
      "file_path": "sklearn/utils/_testing.py",
      "position": 6,
      "tokens": 7822,
      "context_length": 46484
    },
    {
      "file_path": "sklearn/exceptions.py",
      "position": 7,
      "tokens": 1151,
      "context_length": 47635
    },
    {
      "file_path": "setup.py",
      "position": 8,
      "tokens": 5943,
      "context_length": 53578
    },
    {
      "file_path": "sklearn/conftest.py",
      "position": 9,
      "tokens": 1815,
      "context_length": 55393
    },
    {
      "file_path": "sklearn/utils/__init__.py",
      "position": 10,
      "tokens": 9073,
      "context_length": 64466
    },
    {
      "file_path": "sklearn/cluster/_kmeans.py",
      "position": 11,
      "tokens": 18041,
      "context_length": 82507
    },
    {
      "file_path": "sklearn/experimental/enable_hist_gradient_boosting.py",
      "position": 12,
      "tokens": 171,
      "context_length": 82678
    },
    {
      "file_path": "sklearn/utils/deprecation.py",
      "position": 13,
      "tokens": 707,
      "context_length": 83385
    },
    {
      "file_path": "sklearn/linear_model/_stochastic_gradient.py",
      "position": 14,
      "tokens": 19597,
      "context_length": 102982
    },
    {
      "file_path": "sklearn/linear_model/_omp.py",
      "position": 15,
      "tokens": 9299,
      "context_length": 112281
    },
    {
      "file_path": "doc/conf.py",
      "position": 16,
      "tokens": 5474,
      "context_length": 117755
    },
    {
      "file_path": "sklearn/utils/validation.py",
      "position": 17,
      "tokens": 16943,
      "context_length": 134698
    },
    {
      "file_path": "sklearn/metrics/pairwise.py",
      "position": 18,
      "tokens": 18714,
      "context_length": 153412
    },
    {
      "file_path": "sklearn/linear_model/_passive_aggressive.py",
      "position": 19,
      "tokens": 4350,
      "context_length": 157762
    },
    {
      "file_path": "sklearn/pipeline.py",
      "position": 20,
      "tokens": 10394,
      "context_length": 168156
    },
    {
      "file_path": "sklearn/ensemble/_forest.py",
      "position": 21,
      "tokens": 24026,
      "context_length": 192182
    },
    {
      "file_path": "sklearn/__init__.py",
      "position": 22,
      "tokens": 1116,
      "context_length": 193298
    },
    {
      "file_path": "examples/applications/plot_prediction_latency.py",
      "position": 23,
      "tokens": 2639,
      "context_length": 195937
    },
    {
      "file_path": "benchmarks/bench_hist_gradient_boosting_threading.py",
      "position": 24,
      "tokens": 2738,
      "context_length": 198675
    },
    {
      "file_path": "sklearn/_build_utils/openmp_helpers.py",
      "position": 25,
      "tokens": 1039,
      "context_length": 199714
    }
  ]
}