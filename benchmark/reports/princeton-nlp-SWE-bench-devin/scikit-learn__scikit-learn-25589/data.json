{
  "instance_id": "scikit-learn__scikit-learn-25589",
  "model_patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\nindex ec1bbeea6..811f22fcd 100644\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -372,9 +372,9 @@ class OneHotEncoder(_BaseEncoder):\n           retained.\n \n         If infrequent categories are enabled by setting `min_frequency` or\n-        `max_categories` to a non-default value and `drop_idx[i]` corresponds\n-        to a infrequent category, then the entire infrequent category is\n-        dropped.\n+        `max_categories` to a non-default value and `drop_idx_[i]` corresponds\n+        to an infrequent category, then the 'first', i.e., indexed `0`, frequent\n+        category is dropped after `_encode` is applied during `_transform`.\n \n         .. versionchanged:: 0.23\n            Added the possibility to contain `None` values.\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/preprocessing/_encoders.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "53e0d95cb10cba5827751657e487f792afd94329",
  "patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -270,6 +270,10 @@ class OneHotEncoder(_BaseEncoder):\n         - array : ``drop[i]`` is the category in feature ``X[:, i]`` that\n           should be dropped.\n \n+        When `max_categories` or `min_frequency` is configured to group\n+        infrequent categories, the dropping behavior is handled after the\n+        grouping.\n+\n         .. versionadded:: 0.21\n            The parameter `drop` was added in 0.21.\n \n@@ -544,7 +548,7 @@ def _map_drop_idx_to_infrequent(self, feature_idx, drop_idx):\n         \"\"\"Convert `drop_idx` into the index for infrequent categories.\n \n         If there are no infrequent categories, then `drop_idx` is\n-        returned. This method is called in `_compute_drop_idx` when the `drop`\n+        returned. This method is called in `_set_drop_idx` when the `drop`\n         parameter is an array-like.\n         \"\"\"\n         if not self._infrequent_enabled:\n@@ -564,24 +568,35 @@ def _map_drop_idx_to_infrequent(self, feature_idx, drop_idx):\n             )\n         return default_to_infrequent[drop_idx]\n \n-    def _compute_drop_idx(self):\n+    def _set_drop_idx(self):\n         \"\"\"Compute the drop indices associated with `self.categories_`.\n \n         If `self.drop` is:\n-        - `None`, returns `None`.\n-        - `'first'`, returns all zeros to drop the first category.\n-        - `'if_binary'`, returns zero if the category is binary and `None`\n+        - `None`, No categories have been dropped.\n+        - `'first'`, All zeros to drop the first category.\n+        - `'if_binary'`, All zeros if the category is binary and `None`\n           otherwise.\n-        - array-like, returns the indices of the categories that match the\n+        - array-like, The indices of the categories that match the\n           categories in `self.drop`. If the dropped category is an infrequent\n           category, then the index for the infrequent category is used. This\n           means that the entire infrequent category is dropped.\n+\n+        This methods defines a public `drop_idx_` and a private\n+        `_drop_idx_after_grouping`.\n+\n+        - `drop_idx_`: Public facing API that references the drop category in\n+          `self.categories_`.\n+        - `_drop_idx_after_grouping`: Used internally to drop categories *after* the\n+          infrequent categories are grouped together.\n+\n+        If there are no infrequent categories or drop is `None`, then\n+        `drop_idx_=_drop_idx_after_grouping`.\n         \"\"\"\n         if self.drop is None:\n-            return None\n+            drop_idx_after_grouping = None\n         elif isinstance(self.drop, str):\n             if self.drop == \"first\":\n-                return np.zeros(len(self.categories_), dtype=object)\n+                drop_idx_after_grouping = np.zeros(len(self.categories_), dtype=object)\n             elif self.drop == \"if_binary\":\n                 n_features_out_no_drop = [len(cat) for cat in self.categories_]\n                 if self._infrequent_enabled:\n@@ -590,7 +605,7 @@ def _compute_drop_idx(self):\n                             continue\n                         n_features_out_no_drop[i] -= infreq_idx.size - 1\n \n-                return np.array(\n+                drop_idx_after_grouping = np.array(\n                     [\n                         0 if n_features_out == 2 else None\n                         for n_features_out in n_features_out_no_drop\n@@ -647,7 +662,29 @@ def _compute_drop_idx(self):\n                     )\n                 )\n                 raise ValueError(msg)\n-            return np.array(drop_indices, dtype=object)\n+            drop_idx_after_grouping = np.array(drop_indices, dtype=object)\n+\n+        # `_drop_idx_after_grouping` are the categories to drop *after* the infrequent\n+        # categories are grouped together. If needed, we remap `drop_idx` back\n+        # to the categories seen in `self.categories_`.\n+        self._drop_idx_after_grouping = drop_idx_after_grouping\n+\n+        if not self._infrequent_enabled or drop_idx_after_grouping is None:\n+            self.drop_idx_ = self._drop_idx_after_grouping\n+        else:\n+            drop_idx_ = []\n+            for feature_idx, drop_idx in enumerate(drop_idx_after_grouping):\n+                default_to_infrequent = self._default_to_infrequent_mappings[\n+                    feature_idx\n+                ]\n+                if drop_idx is None or default_to_infrequent is None:\n+                    orig_drop_idx = drop_idx\n+                else:\n+                    orig_drop_idx = np.flatnonzero(default_to_infrequent == drop_idx)[0]\n+\n+                drop_idx_.append(orig_drop_idx)\n+\n+            self.drop_idx_ = np.asarray(drop_idx_, dtype=object)\n \n     def _identify_infrequent(self, category_count, n_samples, col_idx):\n         \"\"\"Compute the infrequent indices.\n@@ -809,16 +846,19 @@ def _compute_transformed_categories(self, i, remove_dropped=True):\n \n     def _remove_dropped_categories(self, categories, i):\n         \"\"\"Remove dropped categories.\"\"\"\n-        if self.drop_idx_ is not None and self.drop_idx_[i] is not None:\n-            return np.delete(categories, self.drop_idx_[i])\n+        if (\n+            self._drop_idx_after_grouping is not None\n+            and self._drop_idx_after_grouping[i] is not None\n+        ):\n+            return np.delete(categories, self._drop_idx_after_grouping[i])\n         return categories\n \n     def _compute_n_features_outs(self):\n         \"\"\"Compute the n_features_out for each input feature.\"\"\"\n         output = [len(cats) for cats in self.categories_]\n \n-        if self.drop_idx_ is not None:\n-            for i, drop_idx in enumerate(self.drop_idx_):\n+        if self._drop_idx_after_grouping is not None:\n+            for i, drop_idx in enumerate(self._drop_idx_after_grouping):\n                 if drop_idx is not None:\n                     output[i] -= 1\n \n@@ -875,7 +915,7 @@ def fit(self, X, y=None):\n             self._fit_infrequent_category_mapping(\n                 fit_results[\"n_samples\"], fit_results[\"category_counts\"]\n             )\n-        self.drop_idx_ = self._compute_drop_idx()\n+        self._set_drop_idx()\n         self._n_features_outs = self._compute_n_features_outs()\n         return self\n \n@@ -914,8 +954,8 @@ def transform(self, X):\n \n         n_samples, n_features = X_int.shape\n \n-        if self.drop_idx_ is not None:\n-            to_drop = self.drop_idx_.copy()\n+        if self._drop_idx_after_grouping is not None:\n+            to_drop = self._drop_idx_after_grouping.copy()\n             # We remove all the dropped categories from mask, and decrement all\n             # categories that occur after them to avoid an empty column.\n             keep_cells = X_int != to_drop\n@@ -1014,7 +1054,7 @@ def inverse_transform(self, X):\n             # category. In this case we just fill the column with this\n             # unique category value.\n             if n_categories == 0:\n-                X_tr[:, i] = self.categories_[i][self.drop_idx_[i]]\n+                X_tr[:, i] = self.categories_[i][self._drop_idx_after_grouping[i]]\n                 j += n_categories\n                 continue\n             sub = X[:, j : j + n_categories]\n@@ -1031,14 +1071,19 @@ def inverse_transform(self, X):\n                 if unknown.any():\n                     # if categories were dropped then unknown categories will\n                     # be mapped to the dropped category\n-                    if self.drop_idx_ is None or self.drop_idx_[i] is None:\n+                    if (\n+                        self._drop_idx_after_grouping is None\n+                        or self._drop_idx_after_grouping[i] is None\n+                    ):\n                         found_unknown[i] = unknown\n                     else:\n-                        X_tr[unknown, i] = self.categories_[i][self.drop_idx_[i]]\n+                        X_tr[unknown, i] = self.categories_[i][\n+                            self._drop_idx_after_grouping[i]\n+                        ]\n             else:\n                 dropped = np.asarray(sub.sum(axis=1) == 0).flatten()\n                 if dropped.any():\n-                    if self.drop_idx_ is None:\n+                    if self._drop_idx_after_grouping is None:\n                         all_zero_samples = np.flatnonzero(dropped)\n                         raise ValueError(\n                             f\"Samples {all_zero_samples} can not be inverted \"\n@@ -1047,7 +1092,7 @@ def inverse_transform(self, X):\n                         )\n                     # we can safely assume that all of the nulls in each column\n                     # are the dropped value\n-                    drop_idx = self.drop_idx_[i]\n+                    drop_idx = self._drop_idx_after_grouping[i]\n                     X_tr[dropped, i] = transformed_features[i][drop_idx]\n \n             j += n_categories\n",
  "test_patch": "diff --git a/sklearn/preprocessing/tests/test_encoders.py b/sklearn/preprocessing/tests/test_encoders.py\n--- a/sklearn/preprocessing/tests/test_encoders.py\n+++ b/sklearn/preprocessing/tests/test_encoders.py\n@@ -929,7 +929,7 @@ def test_ohe_infrequent_two_levels_drop_frequent(drop):\n         max_categories=2,\n         drop=drop,\n     ).fit(X_train)\n-    assert_array_equal(ohe.drop_idx_, [0])\n+    assert ohe.categories_[0][ohe.drop_idx_[0]] == \"b\"\n \n     X_test = np.array([[\"b\"], [\"c\"]])\n     X_trans = ohe.transform(X_test)\n@@ -2015,3 +2015,39 @@ def test_ordinal_encoder_missing_unknown_encoding_max():\n     X_test = np.array([[\"snake\"]])\n     X_trans = enc.transform(X_test)\n     assert_allclose(X_trans, [[2]])\n+\n+\n+def test_drop_idx_infrequent_categories():\n+    \"\"\"Check drop_idx is defined correctly with infrequent categories.\n+\n+    Non-regression test for gh-25550.\n+    \"\"\"\n+    X = np.array(\n+        [[\"a\"] * 2 + [\"b\"] * 4 + [\"c\"] * 4 + [\"d\"] * 4 + [\"e\"] * 4], dtype=object\n+    ).T\n+    ohe = OneHotEncoder(min_frequency=4, sparse_output=False, drop=\"first\").fit(X)\n+    assert_array_equal(\n+        ohe.get_feature_names_out(), [\"x0_c\", \"x0_d\", \"x0_e\", \"x0_infrequent_sklearn\"]\n+    )\n+    assert ohe.categories_[0][ohe.drop_idx_[0]] == \"b\"\n+\n+    X = np.array([[\"a\"] * 2 + [\"b\"] * 2 + [\"c\"] * 10], dtype=object).T\n+    ohe = OneHotEncoder(min_frequency=4, sparse_output=False, drop=\"if_binary\").fit(X)\n+    assert_array_equal(ohe.get_feature_names_out(), [\"x0_infrequent_sklearn\"])\n+    assert ohe.categories_[0][ohe.drop_idx_[0]] == \"c\"\n+\n+    X = np.array(\n+        [[\"a\"] * 2 + [\"b\"] * 4 + [\"c\"] * 4 + [\"d\"] * 4 + [\"e\"] * 4], dtype=object\n+    ).T\n+    ohe = OneHotEncoder(min_frequency=4, sparse_output=False, drop=[\"d\"]).fit(X)\n+    assert_array_equal(\n+        ohe.get_feature_names_out(), [\"x0_b\", \"x0_c\", \"x0_e\", \"x0_infrequent_sklearn\"]\n+    )\n+    assert ohe.categories_[0][ohe.drop_idx_[0]] == \"d\"\n+\n+    ohe = OneHotEncoder(min_frequency=4, sparse_output=False, drop=None).fit(X)\n+    assert_array_equal(\n+        ohe.get_feature_names_out(),\n+        [\"x0_b\", \"x0_c\", \"x0_d\", \"x0_e\", \"x0_infrequent_sklearn\"],\n+    )\n+    assert ohe.drop_idx_ is None\n",
  "problem_statement": "OneHotEncoder `drop_idx_` attribute description in presence of infrequent categories\n### Describe the issue linked to the documentation\r\n\r\n### Issue summary\r\n\r\nIn the OneHotEncoder documentation both for [v1.2](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html#sklearn.preprocessing.OneHotEncoder) and [v1.1](https://scikit-learn.org/1.1/modules/generated/sklearn.preprocessing.OneHotEncoder.html?highlight=one+hot+encoder#sklearn.preprocessing.OneHotEncoder), the description of attribute `drop_idx_` in presence of infrequent categories reads as follows:\r\n\r\n> If infrequent categories are enabled by setting `min_frequency` or `max_categories` to a non-default value and `drop_idx[i]` corresponds to a infrequent category, then the entire infrequent category is dropped.`\r\n\r\n### User interpretation\r\n\r\nMy understanding of this description is that when `drop_idx_[i]` corresponds to an infrequent category for column `i`, then the expected encoded column `i_infrequent_sklearn` is dropped. For example, suppose we have the following situation:\r\n```\r\n>>> X = np.array([['a'] * 2 + ['b'] * 4 + ['c'] * 4\r\n...               + ['d'] * 4 + ['e'] * 4], dtype=object).T\r\n>>> enc = preprocessing.OneHotEncoder(min_frequency=4, sparse_output=False, drop='first')\r\n```\r\nHere `X` is a column with five categories where category `a` is considered infrequent. If the above interpretation is correct, then the expected output will consist of four columns, namely, `x0_b`, `x0_c`, `x0_d` and `x0_e`. This is because `a` is both the first category to get dropped due to `drop='first'` as well as an infrequent one. However, the transform output is as follows:\r\n```\r\n>>> Xt = enc.fit_transform(X)\r\n>>> pd.DataFrame(Xt, columns = enc.get_feature_names_out())\r\nent_categories_\r\n    x0_c  x0_d  x0_e  x0_infrequent_sklearn\r\n0    0.0   0.0   0.0                    1.0\r\n1    0.0   0.0   0.0                    1.0\r\n2    0.0   0.0   0.0                    0.0\r\n3    0.0   0.0   0.0                    0.0\r\n4    0.0   0.0   0.0                    0.0\r\n5    0.0   0.0   0.0                    0.0\r\n6    1.0   0.0   0.0                    0.0\r\n7    1.0   0.0   0.0                    0.0\r\n8    1.0   0.0   0.0                    0.0\r\n9    1.0   0.0   0.0                    0.0\r\n10   0.0   1.0   0.0                    0.0\r\n11   0.0   1.0   0.0                    0.0\r\n12   0.0   1.0   0.0                    0.0\r\n13   0.0   1.0   0.0                    0.0\r\n14   0.0   0.0   1.0                    0.0\r\n15   0.0   0.0   1.0                    0.0\r\n16   0.0   0.0   1.0                    0.0\r\n17   0.0   0.0   1.0                    0.0\r\n```\r\nThis means that category `a` is part of the `x0_infrequent_sklearn` column, which takes the value of `1` when `X=='a'`. Category `b` is dropped, this is expected since the `drop='first'` functionality drops the column indexed `0` and after the `_encode` function is applied, categories are remapped based on their sorting order and infrequent ones are mapped last. Meaning that `'a'->4, 'b'->0, 'c'->1, 'd'->2, 'e'->3. This can be verified by the following objects:\r\n```\r\n>>> enc.categories_\r\n[array(['a', 'b', 'c', 'd', 'e'], dtype=object)]\r\n>>> enc._default_to_infrequent_mappings\r\n[array([4, 0, 1, 2, 3])]\r\n```\r\nNotice how at transform the values of the encoded columns are `0` when `X=='b'`. Finally, columns `x0_c`, `x0_d` and `x0_e` are encoded as expected.\r\n\r\n### Suggest a potential alternative/fix\r\n\r\n### Correct suggestive description based on what is actually happening.\r\n\r\n> If infrequent categories are enabled by setting `min_frequency` or `max_categories` to a non-default value and `drop_idx_[i]` corresponds to a infrequent category, then the \"first\", i.e., indexed `0`, frequent category is dropped after `_encode` is applied during `_transform`.\n",
  "hints_text": "Thank you for opening the issue! In this case, API-wise I think `drop_idx` is defined incorrectly and should be `1` point to `b`, because it is the categorical that is actually dropped. \r\n\r\nThere seems to be a bigger issue with how `drop_idx` is defined when there are any infrequent categories. I am looking into a fix.",
  "created_at": "2023-02-10T17:30:04Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/preprocessing/tests/test_encoders.py::test_drop_idx_infrequent_categories\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_drop_frequent[drop2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_drop_frequent[first]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_drop_frequent[if_binary]\"]",
  "PASS_TO_PASS": "[\"sklearn/preprocessing/tests/test_encoders.py::test_X_is_not_1D[X0-fit]\", \"sklearn/preprocessing/tests/test_encoders.py::test_X_is_not_1D[X0-fit_transform]\", \"sklearn/preprocessing/tests/test_encoders.py::test_X_is_not_1D[X1-fit]\", \"sklearn/preprocessing/tests/test_encoders.py::test_X_is_not_1D[X1-fit_transform]\", \"sklearn/preprocessing/tests/test_encoders.py::test_X_is_not_1D_pandas[fit]\", \"sklearn/preprocessing/tests/test_encoders.py::test_X_is_not_1D_pandas[fit_transform]\", \"sklearn/preprocessing/tests/test_encoders.py::test_categories[first-dense]\", \"sklearn/preprocessing/tests/test_encoders.py::test_categories[first-sparse]\", \"sklearn/preprocessing/tests/test_encoders.py::test_categories[manual-dense]\", \"sklearn/preprocessing/tests/test_encoders.py::test_categories[manual-sparse]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoder_dtypes\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoder_dtypes_pandas\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_has_categorical_tags[OneHotEncoder]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_has_categorical_tags[OrdinalEncoder]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[array-O-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[array-O-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[array-S-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[array-S-S]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[array-S-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[array-U-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[array-U-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[dataframe-O-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[dataframe-O-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[dataframe-S-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[dataframe-S-S]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[dataframe-S-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[dataframe-U-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[dataframe-U-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[list-O-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[list-O-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[list-S-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[list-S-S]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[list-S-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[list-U-O]\", \"sklearn/preprocessing/tests/test_encoders.py::test_encoders_string_categories[list-U-U]\", \"sklearn/preprocessing/tests/test_encoders.py::test_invalid_drop_length[drop0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_invalid_drop_length[drop1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_mixed_string_bytes_categoricals\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_drop_first_explicit_categories[ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_drop_first_explicit_categories[infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_drop_first_handle_unknown_ignore_warns[ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_drop_first_handle_unknown_ignore_warns[infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_drop_if_binary_handle_unknown_ignore_warns[ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_drop_if_binary_handle_unknown_ignore_warns[infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_handle_unknown_error\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_mixed\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_multiple_categories\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_multiple_categories_dtypes\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_one_level_errors[kwargs0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels[kwargs0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels[kwargs1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels[kwargs2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels[kwargs3]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels[kwargs4]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels[kwargs5]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels[kwargs6]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels_drop_frequent[drop1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels_drop_frequent[first]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels_drop_infrequent_errors[drop0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels_drop_infrequent_errors[drop1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_three_levels_user_cats\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs3]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[auto-kwargs4]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs3]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels[categories1-kwargs4]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_drop_infrequent_errors[drop0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_drop_infrequent_errors[drop1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_user_cats\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_user_cats_one_frequent[kwargs0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_two_levels_user_cats_one_frequent[kwargs1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_infrequent_user_cats_unknown_training_errors[kwargs0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_missing_value_support_pandas\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_missing_value_support_pandas_categorical[np.nan-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_missing_value_support_pandas_categorical[np.nan-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_missing_value_support_pandas_categorical[pd.NA-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_missing_value_support_pandas_categorical[pd.NA-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_missing_values_get_feature_names[None]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ohe_missing_values_get_feature_names[nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed-None-float-nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed-None-nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed-None]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed-float-nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed-nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[mixed]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[missing-float-nan-object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[missing-float]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[missing-np.nan-object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[mixed]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_categories[string]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_custom_feature_name_combiner\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_equals_if_binary\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_manual[None]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_manual[nan0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_manual[nan1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[None-None]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[None-first]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[None-if_binary]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[first-None]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[first-first]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[first-if_binary]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-None]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-first]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_drop_reset[if_binary-if_binary]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float32-int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[float64-int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype[int32-int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[float32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[float64]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_dtype_pandas[int32]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names_drop[binary]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names_drop[first]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names_drop[manual]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_feature_names_unicode\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_handle_unknown[ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_handle_unknown[infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_handle_unknown_strings[ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_handle_unknown_strings[infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[None-False-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[None-False-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[None-True-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[None-True-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[first-False-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[first-False-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[first-True-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse[first-True-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse_if_binary\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X0-X_trans0-False]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X0-X_trans0-True]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X1-X_trans1-False]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_inverse_transform_raise_error_with_unknown[X1-X_trans1-True]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_not_fitted\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_pandas\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_set_output\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_set_params\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_sparse_dense\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_sparse_deprecated\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[numeric-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[numeric-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-None-and-nan-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-None-and-nan-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-nan-and-None-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-nan-and-None-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-nan-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-nan-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-none-ignore]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories[object-string-none-infrequent_if_exist]\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_specified_categories_mixed_columns\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_unsorted_categories\", \"sklearn/preprocessing/tests/test_encoders.py::test_one_hot_encoder_warning\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[mixed]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_encoded_missing_value_error[False]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_encoded_missing_value_error[True]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_features_names_out_pandas\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_fit_with_unseen_category\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X0-expected_X_trans0-X_test0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X1-expected_X_trans1-X_test1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X2-expected_X_trans2-X_test2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_missing_and_unknown[X3-expected_X_trans3-X_test3]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test0-X_train0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test0-X_train1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test0-X_train2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test1-X_train0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test1-X_train1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test1-X_train2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test2-X_train0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test2-X_train1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknown_string_dtypes[X_test2-X_train2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknowns_nan\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknowns_nan_non_float_dtype\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknowns_numeric[float]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknowns_numeric[int]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_handle_unknowns_string\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_inverse\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_missing_unknown_encoding_max\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[-2-np.nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[-2-pd.NA]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[nan-np.nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_missing_value_support_pandas_categorical[nan-pd.NA]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_passthrough_missing_values_float[-2]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_passthrough_missing_values_float[nan]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_passthrough_missing_values_float_errors_dtype\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_python_integer\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_raise_categories_shape\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_sparse\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories[numeric]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories[object-string-cat]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories[object]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories_missing_passthrough[numeric-missing-value]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories_missing_passthrough[object-None-missing-value]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_specified_categories_missing_passthrough[object-nan-missing_value]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_unknown_missing_interaction\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_unknown_missing_interaction_both_nan[X_train0-X_test_trans_expected0-X_roundtrip_expected0]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_encoder_unknown_missing_interaction_both_nan[X_train1-X_test_trans_expected1-X_roundtrip_expected1]\", \"sklearn/preprocessing/tests/test_encoders.py::test_ordinal_set_output\", \"sklearn/preprocessing/tests/test_encoders.py::test_predefined_categories_dtype\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "patch_files": [
    "sklearn/preprocessing/_encoders.py"
  ],
  "test_patch_files": [
    "sklearn/preprocessing/tests/test_encoders.py"
  ],
  "patch_diff_details": {
    "sklearn/preprocessing/_encoders.py": {
      "diffs": [
        {
          "start_line_old": 273,
          "end_line_old": 273,
          "file_pos": 1,
          "file_context_length": 12137,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 547,
          "end_line_old": 547,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.1_OneHotEncoder.1",
          "closest_snippet_line_distance": 65,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 567,
          "end_line_old": 584,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._map_drop_idx_to_infrequent_OneHotEncoder._map_drop_idx_to_infrequent.8.1",
          "closest_snippet_line_distance": 19,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 593,
          "end_line_old": 593,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._map_drop_idx_to_infrequent_OneHotEncoder._map_drop_idx_to_infrequent.8.1",
          "closest_snippet_line_distance": 28,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 650,
          "end_line_old": 650,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._map_drop_idx_to_infrequent_OneHotEncoder._map_drop_idx_to_infrequent.8.1",
          "closest_snippet_line_distance": 85,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 812,
          "end_line_old": 821,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._parameter_constraints_OneHotEncoder._check_infrequent_enabled.self._infrequent_enabled.1",
          "closest_snippet_line_distance": 280,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 878,
          "end_line_old": 878,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._map_infrequent_categories_OneHotEncoder._map_infrequent_categories.6.2",
          "closest_snippet_line_distance": 93,
          "pos": 23,
          "context_length": 13553
        },
        {
          "start_line_old": 917,
          "end_line_old": 918,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._map_infrequent_categories_OneHotEncoder._map_infrequent_categories.6.2",
          "closest_snippet_line_distance": 133,
          "pos": 12,
          "context_length": 7354
        },
        {
          "start_line_old": 1017,
          "end_line_old": 1017,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._compute_drop_idx_OneHotEncoder._compute_drop_idx.2.3.8.1",
          "closest_snippet_line_distance": 367,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 1034,
          "end_line_old": 1041,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._compute_drop_idx_OneHotEncoder._compute_drop_idx.2.3.8.1",
          "closest_snippet_line_distance": 391,
          "pos": 11,
          "context_length": 6795
        },
        {
          "start_line_old": 1050,
          "end_line_old": 1050,
          "file_pos": 1,
          "file_context_length": 12137,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._compute_drop_idx_OneHotEncoder._compute_drop_idx.2.3.8.1",
          "closest_snippet_line_distance": 400,
          "pos": 11,
          "context_length": 6795
        }
      ]
    }
  },
  "vectors": 3927,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.1_OneHotEncoder.1",
      "distance": 0.5812969207763672,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 216,
      "end_line": 482,
      "tokens": 2722,
      "context_length": 2722,
      "file_pos": 1
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._map_drop_idx_to_infrequent_OneHotEncoder._map_drop_idx_to_infrequent.8.1",
      "distance": 0.6130799055099487,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 543,
      "end_line": 565,
      "tokens": 229,
      "context_length": 2951,
      "file_pos": 1
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._compute_drop_idx_OneHotEncoder._compute_drop_idx.2.3.8.1",
      "distance": 0.6203949451446533,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 567,
      "end_line": 650,
      "tokens": 667,
      "context_length": 3618,
      "file_pos": 1
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.inverse_transform.17_OneHotEncoder.inverse_transform.21.1",
      "distance": 0.7156912088394165,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1007,
      "end_line": 1064,
      "tokens": 539,
      "context_length": 4157,
      "file_pos": 1
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._compute_transformed_categories_OneHotEncoder._compute_transformed_categories.5.1",
      "distance": 0.7259125113487244,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 787,
      "end_line": 808,
      "tokens": 199,
      "context_length": 4356,
      "file_pos": 1
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._parameter_constraints_OneHotEncoder._check_infrequent_enabled.self._infrequent_enabled.1",
      "distance": 0.7341262102127075,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 484,
      "end_line": 541,
      "tokens": 484,
      "context_length": 4840,
      "file_pos": 1
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._remove_dropped_categories_OneHotEncoder._compute_n_features_outs.8.1",
      "distance": 0.7389912009239197,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 810,
      "end_line": 835,
      "tokens": 220,
      "context_length": 5060,
      "file_pos": 1
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._fit_infrequent_category_mapping_OneHotEncoder._fit_infrequent_category_mapping.5.2.12",
      "distance": 0.7506793737411499,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 691,
      "end_line": 747,
      "tokens": 546,
      "context_length": 5606,
      "file_pos": 1
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._identify_infrequent_OneHotEncoder._identify_infrequent.6.1",
      "distance": 0.7518632411956787,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 652,
      "end_line": 689,
      "tokens": 310,
      "context_length": 5916,
      "file_pos": 1
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._map_infrequent_categories_OneHotEncoder._map_infrequent_categories.6.2",
      "distance": 0.7732688188552856,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 749,
      "end_line": 785,
      "tokens": 329,
      "context_length": 6245,
      "file_pos": 1
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder._transform_OneHotEncoder",
      "distance": 0.8262587785720825,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 151,
      "end_line": 1111,
      "tokens": 550,
      "context_length": 6795,
      "file_pos": 1
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.transform_OneHotEncoder.transform.18.2.1.1",
      "distance": 0.8542054295539856,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 882,
      "end_line": 950,
      "tokens": 559,
      "context_length": 7354,
      "file_pos": 1
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.inverse_transform_OneHotEncoder.inverse_transform.16.2.infrequent_indices.1",
      "distance": 0.8592211008071899,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 952,
      "end_line": 1005,
      "tokens": 407,
      "context_length": 7761,
      "file_pos": 1
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder._fit__BaseEncoder._fit.11.1",
      "distance": 0.9210687875747681,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 69,
      "end_line": 149,
      "tokens": 606,
      "context_length": 8367,
      "file_pos": 1
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_1_0.py_log_reg_input_features_np_120",
      "distance": 0.9617476463317871,
      "file_path": "examples/release_highlights/plot_release_highlights_1_1_0.py",
      "start_line": 98,
      "end_line": 177,
      "tokens": 847,
      "context_length": 9214
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_categorical.py_1_one_hot_encoder.1",
      "distance": 0.9745323657989502,
      "file_path": "examples/ensemble/plot_gradient_boosting_categorical.py",
      "start_line": 1,
      "end_line": 104,
      "tokens": 744,
      "context_length": 9958
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OrdinalEncoder._parameter_constraints_OrdinalEncoder.__init__.self.encoded_missing_value.1",
      "distance": 0.9876270294189453,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1235,
      "end_line": 1256,
      "tokens": 175,
      "context_length": 10133,
      "file_pos": 3
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OrdinalEncoder.fit_OrdinalEncoder.fit.12.1",
      "distance": 0.9970685243606567,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1258,
      "end_line": 1360,
      "tokens": 780,
      "context_length": 10913,
      "file_pos": 3
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OrdinalEncoder_OrdinalEncoder.1",
      "distance": 0.9992178678512573,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1114,
      "end_line": 1233,
      "tokens": 1081,
      "context_length": 11994,
      "file_pos": 3
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_categorical.py_82_",
      "distance": 0.9997142553329468,
      "file_path": "examples/ensemble/plot_gradient_boosting_categorical.py",
      "start_line": 218,
      "end_line": 278,
      "tokens": 687,
      "context_length": 12681
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OrdinalEncoder.inverse_transform_",
      "distance": 1.0038542747497559,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1390,
      "end_line": 1450,
      "tokens": 452,
      "context_length": 13133,
      "file_pos": 3
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder._check_get_feature_name_combiner_OneHotEncoder._check_get_feature_name_combiner.1.2.dry_run_combiner.3.1",
      "distance": 1.0106227397918701,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1101,
      "end_line": 1111,
      "tokens": 128,
      "context_length": 13261,
      "file_pos": 3
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.fit_OneHotEncoder.fit.9.1",
      "distance": 1.0314034223556519,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 837,
      "end_line": 880,
      "tokens": 292,
      "context_length": 13553,
      "file_pos": 3
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OrdinalEncoder.transform_OrdinalEncoder.transform.7.1",
      "distance": 1.0328994989395142,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1362,
      "end_line": 1388,
      "tokens": 208,
      "context_length": 13761,
      "file_pos": 3
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder__BaseEncoder._check_X.6.1",
      "distance": 1.0387539863586426,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 25,
      "end_line": 67,
      "tokens": 391,
      "context_length": 14152,
      "file_pos": 3
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_cyclical_feature_engineering.py_280_329",
      "distance": 1.1090710163116455,
      "file_path": "examples/applications/plot_cyclical_feature_engineering.py",
      "start_line": 450,
      "end_line": 523,
      "tokens": 747,
      "context_length": 14899
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/examples/ensemble/plot_gradient_boosting_categorical.py_hist_one_hot_native_result.1",
      "distance": 1.1238360404968262,
      "file_path": "examples/ensemble/plot_gradient_boosting_categorical.py",
      "start_line": 106,
      "end_line": 178,
      "tokens": 592,
      "context_length": 15491
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_discretization.py_KBinsDiscretizer.fit.11_KBinsDiscretizer.fit.15.1",
      "distance": 1.1244347095489502,
      "file_path": "sklearn/preprocessing/_discretization.py",
      "start_line": 258,
      "end_line": 327,
      "tokens": 702,
      "context_length": 16193
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/examples/inspection/plot_partial_dependence.py_categorical_features_95",
      "distance": 1.1262470483779907,
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "start_line": 88,
      "end_line": 174,
      "tokens": 808,
      "context_length": 17001
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_OneHotEncoder.get_feature_names_out_OneHotEncoder.get_feature_names_out.8.1",
      "distance": 1.126630425453186,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 1066,
      "end_line": 1099,
      "tokens": 293,
      "context_length": 17294,
      "file_pos": 6
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_cyclical_feature_engineering.py_147_234",
      "distance": 1.1315979957580566,
      "file_path": "examples/applications/plot_cyclical_feature_engineering.py",
      "start_line": 244,
      "end_line": 357,
      "tokens": 1067,
      "context_length": 18361
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_hist_gradient_boosting/binning.py__BinMapper.transform__BinMapper.transform.8.1",
      "distance": 1.149129867553711,
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/binning.py",
      "start_line": 247,
      "end_line": 280,
      "tokens": 305,
      "context_length": 18666
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py_numbers___all__.1",
      "distance": 1.1500670909881592,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 5,
      "end_line": 22,
      "tokens": 133,
      "context_length": 18799,
      "file_pos": 7
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_cyclical_feature_engineering.py_330_402",
      "distance": 1.1643303632736206,
      "file_path": "examples/applications/plot_cyclical_feature_engineering.py",
      "start_line": 524,
      "end_line": 621,
      "tokens": 899,
      "context_length": 19698
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_discretization.py_KBinsDiscretizer_KBinsDiscretizer.1",
      "distance": 1.1652824878692627,
      "file_path": "sklearn/preprocessing/_discretization.py",
      "start_line": 24,
      "end_line": 155,
      "tokens": 1332,
      "context_length": 21030
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_CategoricalNB._validate_n_categories_CategoricalNB._validate_n_categories.n_categories_X.3.5.1.1",
      "distance": 1.1658506393432617,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 1463,
      "end_line": 1483,
      "tokens": 211,
      "context_length": 21241
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/_dict_learning.py_sparse_encode.2_sparse_encode.5.1",
      "distance": 1.167377233505249,
      "file_path": "sklearn/decomposition/_dict_learning.py",
      "start_line": 339,
      "end_line": 371,
      "tokens": 492,
      "context_length": 21733
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/_dict_learning.py__sparse_encode_precomputed.4__sparse_encode_precomputed.5.1",
      "distance": 1.1679227352142334,
      "file_path": "sklearn/decomposition/_dict_learning.py",
      "start_line": 117,
      "end_line": 199,
      "tokens": 711,
      "context_length": 22444
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/examples/inspection/plot_permutation_importance.py_67_126",
      "distance": 1.1724954843521118,
      "file_path": "examples/inspection/plot_permutation_importance.py",
      "start_line": 116,
      "end_line": 197,
      "tokens": 760,
      "context_length": 23204
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_iterative.py_IterativeImputer.1_IterativeImputer.1",
      "distance": 1.175185203552246,
      "file_path": "sklearn/impute/_iterative.py",
      "start_line": 55,
      "end_line": 281,
      "tokens": 2395,
      "context_length": 25599
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_discretization.py_KBinsDiscretizer.transform_KBinsDiscretizer.transform.12.1",
      "distance": 1.175660490989685,
      "file_path": "sklearn/preprocessing/_discretization.py",
      "start_line": 354,
      "end_line": 391,
      "tokens": 298,
      "context_length": 25897
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_MissingIndicator._validate_input_MissingIndicator._validate_input.6.1",
      "distance": 1.1818979978561401,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 876,
      "end_line": 908,
      "tokens": 279,
      "context_length": 26176
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_0_0.py_63_pd_130",
      "distance": 1.1822863817214966,
      "file_path": "examples/release_highlights/plot_release_highlights_1_0_0.py",
      "start_line": 92,
      "end_line": 165,
      "tokens": 775,
      "context_length": 26951
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_hist_gradient_boosting/binning.py__BinMapper__BinMapper.1",
      "distance": 1.1825315952301025,
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/binning.py",
      "start_line": 70,
      "end_line": 150,
      "tokens": 993,
      "context_length": 27944
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/_fastica.py_FastICA._fit_transform.16_FastICA._fit_transform.27.1",
      "distance": 1.1839669942855835,
      "file_path": "sklearn/decomposition/_fastica.py",
      "start_line": 602,
      "end_line": 695,
      "tokens": 814,
      "context_length": 28758
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_QuantileTransformer._transform_col_QuantileTransformer._transform_col.13.1",
      "distance": 1.184264898300171,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2645,
      "end_line": 2708,
      "tokens": 677,
      "context_length": 29435
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_MissingIndicator_MissingIndicator.1",
      "distance": 1.1857335567474365,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 719,
      "end_line": 800,
      "tokens": 742,
      "context_length": 30177
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_iterative.py_IterativeImputer._impute_one_feature.10_IterativeImputer._impute_one_feature.13.1",
      "distance": 1.1895911693572998,
      "file_path": "sklearn/impute/_iterative.py",
      "start_line": 425,
      "end_line": 461,
      "tokens": 455,
      "context_length": 30632
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py_BaseHistGradientBoosting._check_categories_BaseHistGradientBoosting._check_categories.known_categories.1",
      "distance": 1.1896134614944458,
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "start_line": 182,
      "end_line": 266,
      "tokens": 713,
      "context_length": 31345
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_MissingIndicator.transform_MissingIndicator.transform.8.1",
      "distance": 1.191006064414978,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 973,
      "end_line": 1012,
      "tokens": 332,
      "context_length": 31677
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_SimpleImputer.transform_SimpleImputer.transform.13.1",
      "distance": 1.1936043500900269,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 535,
      "end_line": 621,
      "tokens": 692,
      "context_length": 32369
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/examples/inspection/plot_partial_dependence.py_1_numerical_features.1",
      "distance": 1.1942403316497803,
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "start_line": 1,
      "end_line": 87,
      "tokens": 795,
      "context_length": 33164
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/inspection/_partial_dependence.py__grid_from_X.9__partial_dependence_recursion.3.1",
      "distance": 1.1956841945648193,
      "file_path": "sklearn/inspection/_partial_dependence.py",
      "start_line": 92,
      "end_line": 138,
      "tokens": 443,
      "context_length": 33607
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_0_22_0.py_estimators_131",
      "distance": 1.1957800388336182,
      "file_path": "examples/release_highlights/plot_release_highlights_0_22_0.py",
      "start_line": 90,
      "end_line": 193,
      "tokens": 896,
      "context_length": 34503
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/_dict_vectorizer.py_DictVectorizer._transform_DictVectorizer._transform.5",
      "distance": 1.1964378356933594,
      "file_path": "sklearn/feature_extraction/_dict_vectorizer.py",
      "start_line": 190,
      "end_line": 287,
      "tokens": 729,
      "context_length": 35232
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_column_transformer_mixed_types.py_1_67",
      "distance": 1.197925090789795,
      "file_path": "examples/compose/plot_column_transformer_mixed_types.py",
      "start_line": 1,
      "end_line": 122,
      "tokens": 879,
      "context_length": 36111
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/examples/inspection/plot_partial_dependence.py___214",
      "distance": 1.198805332183838,
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "start_line": 269,
      "end_line": 355,
      "tokens": 849,
      "context_length": 36960
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_1_0.py_1_pd",
      "distance": 1.202722191810608,
      "file_path": "examples/release_highlights/plot_release_highlights_1_1_0.py",
      "start_line": 1,
      "end_line": 96,
      "tokens": 775,
      "context_length": 37735
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/_dict_learning.py__sparse_encode__sparse_encode.15.1",
      "distance": 1.2080214023590088,
      "file_path": "sklearn/decomposition/_dict_learning.py",
      "start_line": 374,
      "end_line": 451,
      "tokens": 494,
      "context_length": 38229
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/model_selection/_split.py_LeaveOneGroupOut_LeaveOneGroupOut.1",
      "distance": 1.2080557346343994,
      "file_path": "sklearn/model_selection/_split.py",
      "start_line": 1157,
      "end_line": 1204,
      "tokens": 481,
      "context_length": 38710
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/sklearn/compose/_column_transformer.py_ColumnTransformer._record_output_indices_ColumnTransformer._log_message.2.1",
      "distance": 1.209218978881836,
      "file_path": "sklearn/compose/_column_transformer.py",
      "start_line": 624,
      "end_line": 649,
      "tokens": 247,
      "context_length": 38957
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_all_scaling.py_44_135",
      "distance": 1.210239052772522,
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "start_line": 250,
      "end_line": 351,
      "tokens": 964,
      "context_length": 39921
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_SimpleImputer_SimpleImputer.1",
      "distance": 1.2110886573791504,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 142,
      "end_line": 270,
      "tokens": 1272,
      "context_length": 41193
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/_dict_learning.py__BaseSparseCoding.transform__BaseSparseCoding.transform.3.1",
      "distance": 1.2173011302947998,
      "file_path": "sklearn/decomposition/_dict_learning.py",
      "start_line": 1288,
      "end_line": 1306,
      "tokens": 137,
      "context_length": 41330
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_2_0.py___48_",
      "distance": 1.2175004482269287,
      "file_path": "examples/release_highlights/plot_release_highlights_1_2_0.py",
      "start_line": 92,
      "end_line": 167,
      "tokens": 718,
      "context_length": 42048
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_QuantileTransformer.transform_QuantileTransformer.transform.4.1",
      "distance": 1.2176077365875244,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2765,
      "end_line": 2784,
      "tokens": 179,
      "context_length": 42227
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/naive_bayes.py_CategoricalNB._count_CategoricalNB._count",
      "distance": 1.2205697298049927,
      "file_path": "sklearn/naive_bayes.py",
      "start_line": 1485,
      "end_line": 1513,
      "tokens": 302,
      "context_length": 42529
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/examples/text/plot_hashing_vs_dict_vectorizer.py_54_t0_118.1",
      "distance": 1.2215148210525513,
      "file_path": "examples/text/plot_hashing_vs_dict_vectorizer.py",
      "start_line": 121,
      "end_line": 210,
      "tokens": 775,
      "context_length": 43304
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_iterative.py_IterativeImputer.transform_IterativeImputer.transform.12.1",
      "distance": 1.2216439247131348,
      "file_path": "sklearn/impute/_iterative.py",
      "start_line": 806,
      "end_line": 858,
      "tokens": 429,
      "context_length": 43733
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/decomposition/_dict_learning.py_sparse_encode_sparse_encode.1",
      "distance": 1.222684383392334,
      "file_path": "sklearn/decomposition/_dict_learning.py",
      "start_line": 202,
      "end_line": 338,
      "tokens": 1186,
      "context_length": 44919
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/examples/inspection/plot_permutation_importance.py_1_66",
      "distance": 1.2233511209487915,
      "file_path": "examples/inspection/plot_permutation_importance.py",
      "start_line": 1,
      "end_line": 115,
      "tokens": 984,
      "context_length": 45903
    },
    {
      "position": 72,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/_encode.py__unique_python__unique_python.2.10.1",
      "distance": 1.223912239074707,
      "file_path": "sklearn/utils/_encode.py",
      "start_line": 167,
      "end_line": 190,
      "tokens": 198,
      "context_length": 46101
    },
    {
      "position": 73,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer._fit_PowerTransformer._fit.7.1",
      "distance": 1.2245113849639893,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3105,
      "end_line": 3134,
      "tokens": 303,
      "context_length": 46404
    },
    {
      "position": 74,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_iterative.py_IterativeImputer.fit_transform.27_IterativeImputer.fit_transform.29.1",
      "distance": 1.2250380516052246,
      "file_path": "sklearn/impute/_iterative.py",
      "start_line": 755,
      "end_line": 804,
      "tokens": 401,
      "context_length": 46805
    },
    {
      "position": 75,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/text.py_CountVectorizer._limit_features_CountVectorizer._limit_features.15.1",
      "distance": 1.2272156476974487,
      "file_path": "sklearn/feature_extraction/text.py",
      "start_line": 1217,
      "end_line": 1256,
      "tokens": 374,
      "context_length": 47179
    }
  ],
  "files": [
    {
      "file_path": "sklearn/preprocessing/_encoders.py",
      "position": 1,
      "tokens": 12137,
      "context_length": 12137
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_1_1_0.py",
      "position": 2,
      "tokens": 2137,
      "context_length": 14274
    },
    {
      "file_path": "examples/ensemble/plot_gradient_boosting_categorical.py",
      "position": 3,
      "tokens": 2287,
      "context_length": 16561
    },
    {
      "file_path": "examples/applications/plot_cyclical_feature_engineering.py",
      "position": 4,
      "tokens": 7142,
      "context_length": 23703
    },
    {
      "file_path": "sklearn/preprocessing/_discretization.py",
      "position": 5,
      "tokens": 3909,
      "context_length": 27612
    },
    {
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "position": 6,
      "tokens": 4949,
      "context_length": 32561
    },
    {
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/binning.py",
      "position": 7,
      "tokens": 2945,
      "context_length": 35506
    },
    {
      "file_path": "sklearn/naive_bayes.py",
      "position": 8,
      "tokens": 13056,
      "context_length": 48562
    },
    {
      "file_path": "sklearn/decomposition/_dict_learning.py",
      "position": 9,
      "tokens": 18960,
      "context_length": 67522
    },
    {
      "file_path": "examples/inspection/plot_permutation_importance.py",
      "position": 10,
      "tokens": 2194,
      "context_length": 69716
    },
    {
      "file_path": "sklearn/impute/_iterative.py",
      "position": 11,
      "tokens": 7829,
      "context_length": 77545
    },
    {
      "file_path": "sklearn/impute/_base.py",
      "position": 12,
      "tokens": 8561,
      "context_length": 86106
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_1_0_0.py",
      "position": 13,
      "tokens": 2335,
      "context_length": 88441
    },
    {
      "file_path": "sklearn/decomposition/_fastica.py",
      "position": 14,
      "tokens": 6514,
      "context_length": 94955
    },
    {
      "file_path": "sklearn/preprocessing/_data.py",
      "position": 15,
      "tokens": 27559,
      "context_length": 122514
    },
    {
      "file_path": "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py",
      "position": 16,
      "tokens": 17203,
      "context_length": 139717
    },
    {
      "file_path": "sklearn/inspection/_partial_dependence.py",
      "position": 17,
      "tokens": 5253,
      "context_length": 144970
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_0_22_0.py",
      "position": 18,
      "tokens": 2410,
      "context_length": 147380
    },
    {
      "file_path": "sklearn/feature_extraction/_dict_vectorizer.py",
      "position": 19,
      "tokens": 3203,
      "context_length": 150583
    },
    {
      "file_path": "examples/compose/plot_column_transformer_mixed_types.py",
      "position": 20,
      "tokens": 1797,
      "context_length": 152380
    },
    {
      "file_path": "sklearn/model_selection/_split.py",
      "position": 21,
      "tokens": 23103,
      "context_length": 175483
    },
    {
      "file_path": "sklearn/compose/_column_transformer.py",
      "position": 22,
      "tokens": 9306,
      "context_length": 184789
    },
    {
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "position": 23,
      "tokens": 3451,
      "context_length": 188240
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_1_2_0.py",
      "position": 24,
      "tokens": 1485,
      "context_length": 189725
    },
    {
      "file_path": "examples/text/plot_hashing_vs_dict_vectorizer.py",
      "position": 25,
      "tokens": 3498,
      "context_length": 193223
    },
    {
      "file_path": "sklearn/utils/_encode.py",
      "position": 26,
      "tokens": 2524,
      "context_length": 195747
    },
    {
      "file_path": "sklearn/feature_extraction/text.py",
      "position": 27,
      "tokens": 17011,
      "context_length": 212758
    }
  ]
}