{
  "instance_id": "scikit-learn__scikit-learn-26400",
  "model_patch": "diff --git a/sklearn/preprocessing/_data.py b/sklearn/preprocessing/_data.py\nindex deaf14227..0a29900ad 100644\n--- a/sklearn/preprocessing/_data.py\n+++ b/sklearn/preprocessing/_data.py\n@@ -3155,7 +3155,10 @@ class PowerTransformer(OneToOneFeatureMixin, TransformerMixin, BaseEstimator):\n             \"yeo-johnson\": self._yeo_johnson_optimize,\n         }[self.method]\n         with np.errstate(invalid=\"ignore\"):  # hide NaN warnings\n-            self.lambdas_ = np.array([optim_function(col) for col in X.T])\n+            self.lambdas_ = np.array([\n+                np.nan if np.isnan(col).all() else optim_function(col)\n+                for col in X.T\n+            ])\n \n         if self.standardize or force_transform:\n             transform_function = {\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sklearn/preprocessing/_data.py"
  ],
  "repo": "scikit-learn/scikit-learn",
  "base_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "patch": "diff --git a/sklearn/preprocessing/_data.py b/sklearn/preprocessing/_data.py\n--- a/sklearn/preprocessing/_data.py\n+++ b/sklearn/preprocessing/_data.py\n@@ -3311,9 +3311,13 @@ def _box_cox_optimize(self, x):\n \n         We here use scipy builtins which uses the brent optimizer.\n         \"\"\"\n+        mask = np.isnan(x)\n+        if np.all(mask):\n+            raise ValueError(\"Column must not be all nan.\")\n+\n         # the computation of lambda is influenced by NaNs so we need to\n         # get rid of them\n-        _, lmbda = stats.boxcox(x[~np.isnan(x)], lmbda=None)\n+        _, lmbda = stats.boxcox(x[~mask], lmbda=None)\n \n         return lmbda\n \n",
  "test_patch": "diff --git a/sklearn/preprocessing/tests/test_data.py b/sklearn/preprocessing/tests/test_data.py\n--- a/sklearn/preprocessing/tests/test_data.py\n+++ b/sklearn/preprocessing/tests/test_data.py\n@@ -2527,6 +2527,21 @@ def test_power_transformer_copy_False(method, standardize):\n     assert X_trans is X_inv_trans\n \n \n+def test_power_transformer_box_cox_raise_all_nans_col():\n+    \"\"\"Check that box-cox raises informative when a column contains all nans.\n+\n+    Non-regression test for gh-26303\n+    \"\"\"\n+    X = rng.random_sample((4, 5))\n+    X[:, 0] = np.nan\n+\n+    err_msg = \"Column must not be all nan.\"\n+\n+    pt = PowerTransformer(method=\"box-cox\")\n+    with pytest.raises(ValueError, match=err_msg):\n+        pt.fit_transform(X)\n+\n+\n @pytest.mark.parametrize(\n     \"X_2\",\n     [\n",
  "problem_statement": "PowerTransformer fails with unhelpful stack trace with all-nan feature and method='box-cox'\n### Describe the bug\r\n\r\n`PowerTransformer(\"box-cox\").fit(x)` throws a difficult-to-debug error if x contains an all-nan column. \r\n\r\n### Steps/Code to Reproduce\r\n\r\n```python\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nfrom sklearn.preprocessing import PowerTransformer, StandardScaler\r\n\r\nx = np.ones((20, 5))\r\ny = np.ones((20, 1))\r\n\r\nx[:, 0] = np.nan\r\n\r\nPowerTransformer().fit_transform(x)  # preserves all-nan column\r\nPowerTransformer('box-cox').fit_transform(x)  # Throws an error when calling stats.boxcox\r\n```\r\n\r\n### Expected Results\r\n\r\nEither no error is thrown and the all-nan column is preserved, or a descriptive error is thrown indicating that there is an unfittable column \r\n\r\n### Actual Results\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n\r\n[<ipython-input-12-563273596add>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 PowerTransformer('box-cox').fit_transform(x)\r\n\r\n4 frames\r\n\r\n[/usr/local/lib/python3.10/dist-packages/sklearn/utils/_set_output.py](https://localhost:8080/#) in wrapped(self, X, *args, **kwargs)\r\n    138     @wraps(f)\r\n    139     def wrapped(self, X, *args, **kwargs):\r\n--> 140         data_to_wrap = f(self, X, *args, **kwargs)\r\n    141         if isinstance(data_to_wrap, tuple):\r\n    142             # only wrap the first output for cross decomposition\r\n\r\n[/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_data.py](https://localhost:8080/#) in fit_transform(self, X, y)\r\n   3101         \"\"\"\r\n   3102         self._validate_params()\r\n-> 3103         return self._fit(X, y, force_transform=True)\r\n   3104 \r\n   3105     def _fit(self, X, y=None, force_transform=False):\r\n\r\n[/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_data.py](https://localhost:8080/#) in _fit(self, X, y, force_transform)\r\n   3114         }[self.method]\r\n   3115         with np.errstate(invalid=\"ignore\"):  # hide NaN warnings\r\n-> 3116             self.lambdas_ = np.array([optim_function(col) for col in X.T])\r\n   3117 \r\n   3118         if self.standardize or force_transform:\r\n\r\n[/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_data.py](https://localhost:8080/#) in <listcomp>(.0)\r\n   3114         }[self.method]\r\n   3115         with np.errstate(invalid=\"ignore\"):  # hide NaN warnings\r\n-> 3116             self.lambdas_ = np.array([optim_function(col) for col in X.T])\r\n   3117 \r\n   3118         if self.standardize or force_transform:\r\n\r\n[/usr/local/lib/python3.10/dist-packages/sklearn/preprocessing/_data.py](https://localhost:8080/#) in _box_cox_optimize(self, x)\r\n   3272         # the computation of lambda is influenced by NaNs so we need to\r\n   3273         # get rid of them\r\n-> 3274         _, lmbda = stats.boxcox(x[~np.isnan(x)], lmbda=None)\r\n   3275 \r\n   3276         return lmbda\r\n\r\nValueError: not enough values to unpack (expected 2, got 0)\r\n```\r\n\r\n### Versions\r\n\r\n```shell\r\nSystem:\r\n    python: 3.10.11 (main, Apr  5 2023, 14:15:10) [GCC 9.4.0]\r\nexecutable: /usr/bin/python3\r\n   machine: Linux-5.10.147+-x86_64-with-glibc2.31\r\n\r\nPython dependencies:\r\n      sklearn: 1.2.2\r\n          pip: 23.0.1\r\n   setuptools: 67.7.2\r\n        numpy: 1.22.4\r\n        scipy: 1.10.1\r\n       Cython: 0.29.34\r\n       pandas: 1.5.3\r\n   matplotlib: 3.7.1\r\n       joblib: 1.2.0\r\nthreadpoolctl: 3.1.0\r\n```\r\n```\r\n\n",
  "hints_text": "Thank you for opening the issue. I agree this is a bug. It is reasonable to return all nans to be consistent with `yeo-johnson`.\nWould the following approach be neat enough?\r\n\r\n```python\r\ndef _box_cox_optimize(self, x):\r\n\u00a0 \u00a0 # The computation of lambda is influenced by NaNs so we need to\r\n\u00a0 \u00a0 # get rid of them\r\n\u00a0 \u00a0 x = x[~np.isnan(x)]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \r\n\u00a0 \u00a0 # if the whole column is nan, we do not care about lambda\r\n\u00a0 \u00a0 if len(x) == 0:\r\n\u00a0 \u00a0 \u00a0 \u00a0 return 0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \r\n\u00a0 \u00a0 _, lmbda = stats.boxcox(x, lmbda=None)\r\n\u00a0 \u00a0 return lmbda\r\n\r\n```\r\nIf this is okay, I can open a PR for this.\nOn second thought, `box-cox` does not work when the data is constant:\r\n\r\n```python\r\nfrom sklearn.preprocessing import PowerTransformer\r\n\r\nx = [[1], [1], [1], [1]]\r\n\r\npt = PowerTransformer(method=\"box-cox\")\r\npt.fit_transform(x)\r\n# ValueError: Data must not be constant.\r\n```\r\n\r\nA feature that is all `np.nan` can be considered constant. If we want to stay consistent, then we raise a similar error for all `np.nan`.\r\n\r\nWith that in mind, I'm in favor of raising an informative error.\n@thomasjpfan That's indeed reasonable. I have two proposed solutions:\r\n\r\n1. Let scipy raise the error, so that the message will be consistent with scipy:\r\n\r\n```python\r\ndef _box_cox_optimize(self, x):\r\n    if not np.all(np.isnan(x)):\r\n        x = x[~np.isnan(x)]\r\n\r\n    _, lmbda = stats.boxcox(x, lmbda=None)\r\n    return lmbda\r\n```\r\n\r\n2. Raise our own error, specifically claiming that column cannot be all nan (rather than cannot be constant):\r\n\r\n```python\r\ndef _box_cox_optimize(self, x):\r\n    if np.all(np.isnan(x)):\r\n        raise ValueError(\"Column must not be all nan.\")\r\n\r\n    _, lmbda = stats.boxcox(x[~np.isnan(x)], lmbda=None)\r\n    return lmbda\r\n```\r\n\r\nWhich one would you prefer, our do you have any other recommended solution? (I'm thinking that maybe my proposed solutions are not efficient enough.)\nSince there is no reply, I'm going to open a PR that takes the second approach. The reason is that the second approach is clearer IMO and the first approach seems to trigger some unexpected behavior.\nI like the second approach in https://github.com/scikit-learn/scikit-learn/issues/26303#issuecomment-1536899848, but store the `np.isnan(x)` as a variable so it is not computed twice.\nI see, thanks for the comment!",
  "created_at": "2023-05-19T00:35:48Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/preprocessing/tests/test_data.py::test_power_transformer_box_cox_raise_all_nans_col\"]",
  "PASS_TO_PASS": "[\"sklearn/preprocessing/tests/test_data.py::test_add_dummy_feature\", \"sklearn/preprocessing/tests/test_data.py::test_add_dummy_feature_coo\", \"sklearn/preprocessing/tests/test_data.py::test_add_dummy_feature_csc\", \"sklearn/preprocessing/tests/test_data.py::test_add_dummy_feature_csr\", \"sklearn/preprocessing/tests/test_data.py::test_binarizer\", \"sklearn/preprocessing/tests/test_data.py::test_center_kernel\", \"sklearn/preprocessing/tests/test_data.py::test_cv_pipeline_precomputed\", \"sklearn/preprocessing/tests/test_data.py::test_fit_cold_start\", \"sklearn/preprocessing/tests/test_data.py::test_fit_transform\", \"sklearn/preprocessing/tests/test_data.py::test_handle_zeros_in_scale\", \"sklearn/preprocessing/tests/test_data.py::test_kernel_centerer_feature_names_out\", \"sklearn/preprocessing/tests/test_data.py::test_kernelcenterer_non_linear_kernel\", \"sklearn/preprocessing/tests/test_data.py::test_maxabs_scaler_1d\", \"sklearn/preprocessing/tests/test_data.py::test_maxabs_scaler_large_negative_value\", \"sklearn/preprocessing/tests/test_data.py::test_maxabs_scaler_partial_fit\", \"sklearn/preprocessing/tests/test_data.py::test_maxabs_scaler_transform_one_row_csr\", \"sklearn/preprocessing/tests/test_data.py::test_maxabs_scaler_zero_variance_features\", \"sklearn/preprocessing/tests/test_data.py::test_min_max_scaler_1d\", \"sklearn/preprocessing/tests/test_data.py::test_min_max_scaler_iris\", \"sklearn/preprocessing/tests/test_data.py::test_min_max_scaler_zero_variance_features\", \"sklearn/preprocessing/tests/test_data.py::test_minmax_scale_axis1\", \"sklearn/preprocessing/tests/test_data.py::test_minmax_scaler_clip[feature_range0]\", \"sklearn/preprocessing/tests/test_data.py::test_minmax_scaler_clip[feature_range1]\", \"sklearn/preprocessing/tests/test_data.py::test_minmax_scaler_partial_fit\", \"sklearn/preprocessing/tests/test_data.py::test_normalize\", \"sklearn/preprocessing/tests/test_data.py::test_normalizer_l1\", \"sklearn/preprocessing/tests/test_data.py::test_normalizer_l2\", \"sklearn/preprocessing/tests/test_data.py::test_normalizer_max\", \"sklearn/preprocessing/tests/test_data.py::test_normalizer_max_sign\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features[MaxAbsScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features[MinMaxScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features[PowerTransformer]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features[QuantileTransformer]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features[RobustScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features[StandardScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[Binarizer]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[MaxAbsScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[MinMaxScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[Normalizer]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[PowerTransformer]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[QuantileTransformer]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[RobustScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_one_to_one_features_pandas[StandardScaler]\", \"sklearn/preprocessing/tests/test_data.py::test_optimization_power_transformer[box-cox-0.1]\", \"sklearn/preprocessing/tests/test_data.py::test_optimization_power_transformer[box-cox-0.5]\", \"sklearn/preprocessing/tests/test_data.py::test_optimization_power_transformer[yeo-johnson-0.1]\", \"sklearn/preprocessing/tests/test_data.py::test_optimization_power_transformer[yeo-johnson-0.5]\", \"sklearn/preprocessing/tests/test_data.py::test_optimization_power_transformer[yeo-johnson-1.0]\", \"sklearn/preprocessing/tests/test_data.py::test_partial_fit_sparse_input[None]\", \"sklearn/preprocessing/tests/test_data.py::test_partial_fit_sparse_input[True]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_1d\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_2d\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_boxcox_strictly_positive_exception\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_False[False-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_False[False-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_False[True-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_False[True-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_True[False-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_True[False-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_True[True-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_copy_True[True-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_fit_transform[False-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_fit_transform[False-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_fit_transform[True-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_fit_transform[True-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X0-False-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X0-False-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X0-True-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X0-True-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X1-False-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X1-False-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X1-True-box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_inverse[X1-True-yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_lambda_one\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_lambda_zero\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_notfitted[box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_notfitted[yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_shape_exception[box-cox]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_shape_exception[yeo-johnson]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_significantly_non_gaussian\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_yeojohnson_any_input[X0]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_yeojohnson_any_input[X1]\", \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_yeojohnson_any_input[X2]\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_and_inverse\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_axis1\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_check_error\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_dense_toy\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_iris\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_nan\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_sparse_ignore_zeros\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_sparse_toy\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_subsampling\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transformer_sorted_quantiles[array]\", \"sklearn/preprocessing/tests/test_data.py::test_quantile_transformer_sorted_quantiles[sparse]\", \"sklearn/preprocessing/tests/test_data.py::test_raises_value_error_if_sample_weights_greater_than_1d\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scale_1d_array\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scale_axis1\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_2d_arrays\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_attributes[X0-False-False]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_attributes[X0-False-True]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_attributes[X0-True-False]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_attributes[X0-True-True]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_attributes[X1-False-False]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_attributes[X1-True-False]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_col_zero_sparse\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0.05]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0.1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0.5]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[None-0]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[None-1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0.05]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0.1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0.5]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-0]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[negative-1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0.05]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0.1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0.5]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-0]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[positive-1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0.05]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0.1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0.5]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-0]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_equivalence_dense_sparse[zeros-1]\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_error_sparse\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_invalid_range\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_iris\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_iris_quantiles\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_transform_one_row_csr\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_unit_variance\", \"sklearn/preprocessing/tests/test_data.py::test_robust_scaler_zero_variance_features\", \"sklearn/preprocessing/tests/test_data.py::test_scale_1d\", \"sklearn/preprocessing/tests/test_data.py::test_scale_function_without_centering\", \"sklearn/preprocessing/tests/test_data.py::test_scale_input_finiteness_validation\", \"sklearn/preprocessing/tests/test_data.py::test_scale_sparse_with_mean_raise_exception\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_2d_arrays\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_float16_overflow\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_int\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[asarray-False-False]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[asarray-False-True]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[asarray-True-False]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[asarray-True-True]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[csc_matrix-False-False]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[csc_matrix-True-False]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[csr_matrix-False-False]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_n_samples_seen_with_nan[csr_matrix-True-False]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_return_identity\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_without_centering[None]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_without_centering[True]\", \"sklearn/preprocessing/tests/test_data.py::test_scaler_without_copy\", \"sklearn/preprocessing/tests/test_data.py::test_standard_check_array_of_inverse_transform\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_1d\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-False-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-False-asarray-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-False-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-False-csc_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-False-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-False-csr_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-True-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-True-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float32-True-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-False-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-False-asarray-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-False-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-False-csc_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-False-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-False-csr_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-True-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-True-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[0-float64-True-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-False-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-False-asarray-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csc_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-False-csr_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-True-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-True-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float32-True-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-False-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-False-asarray-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csc_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-False-csr_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-True-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-True-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[1.0-float64-True-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-False-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-False-asarray-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csc_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-False-csr_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-True-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-True-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float32-True-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-False-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-False-asarray-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csc_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-False-csr_matrix-scaler1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-True-asarray-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-True-csc_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_constant_features[100.0-float64-True-csr_matrix-scaler0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_dtype[False-None]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_dtype[False-csc_matrix]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_dtype[False-csr_matrix]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_dtype[True-None]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_dtype[True-csc_matrix]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_dtype[True-csr_matrix]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-10000000000.0-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-10000000000.0-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-10000000000.0-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1e-10-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1e-10-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float32-1e-10-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-10000000000.0-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-10000000000.0-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-10000000000.0-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1e-10-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1e-10-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[asarray-float64-1e-10-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-10000000000.0-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-10000000000.0-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-10000000000.0-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1e-10-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1e-10-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float32-1e-10-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-10000000000.0-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-10000000000.0-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-10000000000.0-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1e-10-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1e-10-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csc_matrix-float64-1e-10-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-10000000000.0-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-10000000000.0-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-10000000000.0-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1e-10-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1e-10-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float32-1e-10-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-10000000000.0-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-10000000000.0-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-10000000000.0-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1e-10-10000]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1e-10-100]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_near_constant_features[csr_matrix-float64-1e-10-10]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_numerical_stability\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_partial_fit\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_partial_fit_numerical_stability\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_raise_error_for_1d_input\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[array-Xw0-X0-sample_weight0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[array-Xw1-X1-sample_weight1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[array-Xw2-X2-sample_weight2]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[sparse_csc-Xw0-X0-sample_weight0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[sparse_csc-Xw1-X1-sample_weight1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[sparse_csc-Xw2-X2-sample_weight2]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[sparse_csr-Xw0-X0-sample_weight0]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[sparse_csr-Xw1-X1-sample_weight1]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sample_weight[sparse_csr-Xw2-X2-sample_weight2]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sparse_partial_fit_finite_variance[X_20]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_sparse_partial_fit_finite_variance[X_21]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_trasform_with_partial_fit[None]\", \"sklearn/preprocessing/tests/test_data.py::test_standard_scaler_trasform_with_partial_fit[True]\", \"sklearn/preprocessing/tests/test_data.py::test_yeo_johnson_darwin_example\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "patch_files": [
    "sklearn/preprocessing/_data.py"
  ],
  "test_patch_files": [
    "sklearn/preprocessing/tests/test_data.py"
  ],
  "patch_diff_details": {
    "sklearn/preprocessing/_data.py": {
      "diffs": [
        {
          "start_line_old": 3314,
          "end_line_old": 3314,
          "file_pos": 1,
          "file_context_length": 27877,
          "closest_snippet_id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer.fit_transform_PowerTransformer.fit_transform.3.1",
          "closest_snippet_line_distance": 169,
          "pos": 8,
          "context_length": 4077
        }
      ]
    }
  },
  "vectors": 3996,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer_PowerTransformer.1",
      "distance": 0.7680109143257141,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2998,
      "end_line": 3091,
      "tokens": 788,
      "context_length": 788,
      "file_pos": 1
    },
    {
      "position": 2,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer._fit_PowerTransformer._fit.7.1",
      "distance": 0.7819757461547852,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3147,
      "end_line": 3176,
      "tokens": 303,
      "context_length": 1091,
      "file_pos": 1
    },
    {
      "position": 3,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_power_transform_",
      "distance": 0.8381465673446655,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3400,
      "end_line": 3500,
      "tokens": 926,
      "context_length": 2017,
      "file_pos": 1
    },
    {
      "position": 4,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer._check_input_PowerTransformer._more_tags.1.1",
      "distance": 0.8472578525543213,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3351,
      "end_line": 3397,
      "tokens": 376,
      "context_length": 2393,
      "file_pos": 1
    },
    {
      "position": 5,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_all_scaling.py_43_134",
      "distance": 0.8537558913230896,
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "start_line": 249,
      "end_line": 350,
      "tokens": 964,
      "context_length": 3357
    },
    {
      "position": 6,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer._parameter_constraints_PowerTransformer.fit.4.1",
      "distance": 0.8846242427825928,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3093,
      "end_line": 3125,
      "tokens": 225,
      "context_length": 3582,
      "file_pos": 2
    },
    {
      "position": 7,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer.fit_transform_PowerTransformer.fit_transform.3.1",
      "distance": 0.8848659992218018,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3127,
      "end_line": 3145,
      "tokens": 145,
      "context_length": 3727,
      "file_pos": 2
    },
    {
      "position": 8,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer._yeo_johnson_transform_PowerTransformer._box_cox_optimize.5.1",
      "distance": 0.8916252851486206,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3286,
      "end_line": 3318,
      "tokens": 350,
      "context_length": 4077,
      "file_pos": 2
    },
    {
      "position": 9,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_estimator_sparse_data_check_transformers_unfitted_stateless.7",
      "distance": 0.9063526391983032,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 834,
      "end_line": 1553,
      "tokens": 6001,
      "context_length": 10078
    },
    {
      "position": 10,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_polynomial.py_SplineTransformer.transform.20_",
      "distance": 0.9079811573028564,
      "file_path": "sklearn/preprocessing/_polynomial.py",
      "start_line": 1125,
      "end_line": 1170,
      "tokens": 470,
      "context_length": 10548
    },
    {
      "position": 11,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer.transform_PowerTransformer.transform.7.1",
      "distance": 0.90841144323349,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3178,
      "end_line": 3205,
      "tokens": 225,
      "context_length": 10773,
      "file_pos": 4
    },
    {
      "position": 12,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer._box_cox_inverse_tranform_PowerTransformer._yeo_johnson_inverse_transform.8.1",
      "distance": 0.9207191467285156,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3254,
      "end_line": 3284,
      "tokens": 342,
      "context_length": 11115,
      "file_pos": 4
    },
    {
      "position": 13,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_map_data_to_normal.py_1_axes.1",
      "distance": 0.9219440221786499,
      "file_path": "examples/preprocessing/plot_map_data_to_normal.py",
      "start_line": 1,
      "end_line": 102,
      "tokens": 760,
      "context_length": 11875
    },
    {
      "position": 14,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_transformer_get_feature_names_out_",
      "distance": 0.9241240620613098,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 4002,
      "end_line": 4409,
      "tokens": 3326,
      "context_length": 15201
    },
    {
      "position": 15,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer.inverse_transform_PowerTransformer.inverse_transform.7.1",
      "distance": 0.9455122947692871,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3207,
      "end_line": 3252,
      "tokens": 413,
      "context_length": 15614,
      "file_pos": 5
    },
    {
      "position": 16,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_column_transformer_mixed_types.py_1_67",
      "distance": 0.9618655443191528,
      "file_path": "examples/compose/plot_column_transformer_mixed_types.py",
      "start_line": 1,
      "end_line": 122,
      "tokens": 879,
      "context_length": 16493
    },
    {
      "position": 17,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_PowerTransformer._yeo_johnson_optimize_PowerTransformer._yeo_johnson_optimize.8.1",
      "distance": 0.968530535697937,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 3320,
      "end_line": 3349,
      "tokens": 310,
      "context_length": 16803,
      "file_pos": 6
    },
    {
      "position": 18,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_warnings___all__.1",
      "distance": 0.9700244665145874,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 11,
      "end_line": 71,
      "tokens": 322,
      "context_length": 17125,
      "file_pos": 6
    },
    {
      "position": 19,
      "id": "/tmp/repos/scikit-learn/examples/miscellaneous/plot_set_output.py_ct_",
      "distance": 0.9773294925689697,
      "file_path": "examples/miscellaneous/plot_set_output.py",
      "start_line": 88,
      "end_line": 139,
      "tokens": 367,
      "context_length": 17492
    },
    {
      "position": 20,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_all_scaling.py_135_",
      "distance": 0.9808406829833984,
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "start_line": 352,
      "end_line": 401,
      "tokens": 389,
      "context_length": 17881
    },
    {
      "position": 21,
      "id": "/tmp/repos/scikit-learn/sklearn/compose/_column_transformer.py_1_ColumnTransformer",
      "distance": 0.984266459941864,
      "file_path": "sklearn/compose/_column_transformer.py",
      "start_line": 1,
      "end_line": 912,
      "tokens": 302,
      "context_length": 18183
    },
    {
      "position": 22,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_0_0.py_63_pd_130",
      "distance": 0.9844388365745544,
      "file_path": "examples/release_highlights/plot_release_highlights_1_0_0.py",
      "start_line": 92,
      "end_line": 165,
      "tokens": 775,
      "context_length": 18958
    },
    {
      "position": 23,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_all_scaling.py_1_X.1",
      "distance": 0.9857710003852844,
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "start_line": 1,
      "end_line": 85,
      "tokens": 632,
      "context_length": 19590
    },
    {
      "position": 24,
      "id": "/tmp/repos/scikit-learn/examples/neighbors/approximate_nearest_neighbors.py_load_mnist_plt",
      "distance": 0.9969770312309265,
      "file_path": "examples/neighbors/approximate_nearest_neighbors.py",
      "start_line": 103,
      "end_line": 212,
      "tokens": 983,
      "context_length": 20573
    },
    {
      "position": 25,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_all_scaling.py_distributions_cmap.1",
      "distance": 1.0020420551300049,
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "start_line": 86,
      "end_line": 118,
      "tokens": 274,
      "context_length": 20847
    },
    {
      "position": 26,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_1_0.py_1_pd",
      "distance": 1.0044300556182861,
      "file_path": "examples/release_highlights/plot_release_highlights_1_1_0.py",
      "start_line": 1,
      "end_line": 96,
      "tokens": 775,
      "context_length": 21622
    },
    {
      "position": 27,
      "id": "/tmp/repos/scikit-learn/sklearn/compose/_column_transformer.py_ColumnTransformer.1_ColumnTransformer.1",
      "distance": 1.0095046758651733,
      "file_path": "sklearn/compose/_column_transformer.py",
      "start_line": 43,
      "end_line": 215,
      "tokens": 1827,
      "context_length": 23449
    },
    {
      "position": 28,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_random_projections.py_19_",
      "distance": 1.019537329673767,
      "file_path": "benchmarks/bench_random_projections.py",
      "start_line": 96,
      "end_line": 304,
      "tokens": 1338,
      "context_length": 24787
    },
    {
      "position": 29,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_column_transformer.py_1_30",
      "distance": 1.0199633836746216,
      "file_path": "examples/compose/plot_column_transformer.py",
      "start_line": 1,
      "end_line": 67,
      "tokens": 430,
      "context_length": 25217
    },
    {
      "position": 30,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_column_transformer_mixed_types.py_subset_feature_cv_results_128.1",
      "distance": 1.021766185760498,
      "file_path": "examples/compose/plot_column_transformer_mixed_types.py",
      "start_line": 124,
      "end_line": 215,
      "tokens": 758,
      "context_length": 25975
    },
    {
      "position": 31,
      "id": "/tmp/repos/scikit-learn/sklearn/utils/estimator_checks.py_check_parameters_default_constructible_check_dataframe_column_names_consistency.30.9.1",
      "distance": 1.0269436836242676,
      "file_path": "sklearn/utils/estimator_checks.py",
      "start_line": 3225,
      "end_line": 3999,
      "tokens": 6285,
      "context_length": 32260
    },
    {
      "position": 32,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_polynomial.py_PolynomialFeatures.transform.6_PolynomialFeatures.transform.7.1",
      "distance": 1.0289452075958252,
      "file_path": "sklearn/preprocessing/_polynomial.py",
      "start_line": 436,
      "end_line": 574,
      "tokens": 1334,
      "context_length": 33594
    },
    {
      "position": 33,
      "id": "/tmp/repos/scikit-learn/sklearn/cross_decomposition/_pls.py_PLSCanonical_PLSCanonical.1",
      "distance": 1.0322301387786865,
      "file_path": "sklearn/cross_decomposition/_pls.py",
      "start_line": 645,
      "end_line": 739,
      "tokens": 852,
      "context_length": 34446
    },
    {
      "position": 34,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/__init__.py_1_",
      "distance": 1.0328247547149658,
      "file_path": "sklearn/preprocessing/__init__.py",
      "start_line": 1,
      "end_line": 73,
      "tokens": 432,
      "context_length": 34878
    },
    {
      "position": 35,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_SimpleImputer._dense_fit_SimpleImputer._dense_fit.6.11.3.1",
      "distance": 1.0395185947418213,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 457,
      "end_line": 513,
      "tokens": 497,
      "context_length": 35375
    },
    {
      "position": 36,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_target_encoder.py_41_",
      "distance": 1.043107509613037,
      "file_path": "examples/preprocessing/plot_target_encoder.py",
      "start_line": 105,
      "end_line": 228,
      "tokens": 1113,
      "context_length": 36488
    },
    {
      "position": 37,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_QuantileTransformer._check_inputs_QuantileTransformer._check_inputs.6.1",
      "distance": 1.0477557182312012,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2752,
      "end_line": 2774,
      "tokens": 195,
      "context_length": 36683,
      "file_pos": 17
    },
    {
      "position": 38,
      "id": "/tmp/repos/scikit-learn/examples/linear_model/plot_poisson_regression_non_normal_loss.py_45_72",
      "distance": 1.0510435104370117,
      "file_path": "examples/linear_model/plot_poisson_regression_non_normal_loss.py",
      "start_line": 101,
      "end_line": 161,
      "tokens": 441,
      "context_length": 37124
    },
    {
      "position": 39,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_function_transformer.py_FunctionTransformer._parameter_constraints_FunctionTransformer._check_input.2.1",
      "distance": 1.0528042316436768,
      "file_path": "sklearn/preprocessing/_function_transformer.py",
      "start_line": 129,
      "end_line": 170,
      "tokens": 329,
      "context_length": 37453
    },
    {
      "position": 40,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder._fit__BaseEncoder._fit.16.1",
      "distance": 1.0575063228607178,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 70,
      "end_line": 173,
      "tokens": 744,
      "context_length": 38197
    },
    {
      "position": 41,
      "id": "/tmp/repos/scikit-learn/examples/inspection/plot_partial_dependence.py_numerical_features_98",
      "distance": 1.0595953464508057,
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "start_line": 86,
      "end_line": 178,
      "tokens": 833,
      "context_length": 39030
    },
    {
      "position": 42,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_0_22_0.py_estimators_131",
      "distance": 1.0646228790283203,
      "file_path": "examples/release_highlights/plot_release_highlights_0_22_0.py",
      "start_line": 90,
      "end_line": 193,
      "tokens": 896,
      "context_length": 39926
    },
    {
      "position": 43,
      "id": "/tmp/repos/scikit-learn/examples/miscellaneous/plot_set_output.py_1_num_cols.1",
      "distance": 1.0702706575393677,
      "file_path": "examples/miscellaneous/plot_set_output.py",
      "start_line": 1,
      "end_line": 87,
      "tokens": 700,
      "context_length": 40626
    },
    {
      "position": 44,
      "id": "/tmp/repos/scikit-learn/examples/preprocessing/plot_all_scaling.py_36_make_plot.12",
      "distance": 1.0718352794647217,
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "start_line": 199,
      "end_line": 246,
      "tokens": 416,
      "context_length": 41042
    },
    {
      "position": 45,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_encoders.py__BaseEncoder._transform__BaseEncoder._transform.10.1",
      "distance": 1.0720638036727905,
      "file_path": "sklearn/preprocessing/_encoders.py",
      "start_line": 175,
      "end_line": 241,
      "tokens": 554,
      "context_length": 41596
    },
    {
      "position": 46,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_quantile_transform_quantile_transform.4.1",
      "distance": 1.0730162858963013,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2855,
      "end_line": 2995,
      "tokens": 1271,
      "context_length": 42867,
      "file_pos": 22
    },
    {
      "position": 47,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_StandardScaler.partial_fit.15_StandardScaler.partial_fit.21.1",
      "distance": 1.0736334323883057,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 902,
      "end_line": 987,
      "tokens": 706,
      "context_length": 43573,
      "file_pos": 22
    },
    {
      "position": 48,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_SimpleImputer._sparse_fit_SimpleImputer._sparse_fit.8.1",
      "distance": 1.0737457275390625,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 415,
      "end_line": 455,
      "tokens": 366,
      "context_length": 43939
    },
    {
      "position": 49,
      "id": "/tmp/repos/scikit-learn/examples/compose/plot_compare_reduction.py_1_location.1",
      "distance": 1.0754494667053223,
      "file_path": "examples/compose/plot_compare_reduction.py",
      "start_line": 1,
      "end_line": 110,
      "tokens": 778,
      "context_length": 44717
    },
    {
      "position": 50,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_1_0.py_log_reg_input_features_np_120",
      "distance": 1.0809046030044556,
      "file_path": "examples/release_highlights/plot_release_highlights_1_1_0.py",
      "start_line": 98,
      "end_line": 177,
      "tokens": 845,
      "context_length": 45562
    },
    {
      "position": 51,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_2_0.py___48_",
      "distance": 1.082017421722412,
      "file_path": "examples/release_highlights/plot_release_highlights_1_2_0.py",
      "start_line": 92,
      "end_line": 167,
      "tokens": 718,
      "context_length": 46280
    },
    {
      "position": 52,
      "id": "/tmp/repos/scikit-learn/sklearn/compose/_column_transformer.py_ColumnTransformer.fit_transform_ColumnTransformer.fit_transform.18.1",
      "distance": 1.0849823951721191,
      "file_path": "sklearn/compose/_column_transformer.py",
      "start_line": 710,
      "end_line": 765,
      "tokens": 456,
      "context_length": 46736
    },
    {
      "position": 53,
      "id": "/tmp/repos/scikit-learn/sklearn/compose/_column_transformer.py_ColumnTransformer.fit_ColumnTransformer.fit.6.1",
      "distance": 1.0851447582244873,
      "file_path": "sklearn/compose/_column_transformer.py",
      "start_line": 687,
      "end_line": 708,
      "tokens": 159,
      "context_length": 46895
    },
    {
      "position": 54,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_polynomial.py_SplineTransformer.transform.19_SplineTransformer.transform.19.6.2",
      "distance": 1.0880358219146729,
      "file_path": "sklearn/preprocessing/_polynomial.py",
      "start_line": 987,
      "end_line": 1123,
      "tokens": 1449,
      "context_length": 48344
    },
    {
      "position": 55,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_0_24_0.py_83_149",
      "distance": 1.0913231372833252,
      "file_path": "examples/release_highlights/plot_release_highlights_0_24_0.py",
      "start_line": 121,
      "end_line": 210,
      "tokens": 777,
      "context_length": 49121
    },
    {
      "position": 56,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_cyclical_feature_engineering.py_75_gbrt_pipeline.1",
      "distance": 1.0924646854400635,
      "file_path": "examples/applications/plot_cyclical_feature_engineering.py",
      "start_line": 110,
      "end_line": 221,
      "tokens": 759,
      "context_length": 49880
    },
    {
      "position": 57,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_QuantileTransformer.transform_QuantileTransformer.transform.4.1",
      "distance": 1.0932438373565674,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2807,
      "end_line": 2826,
      "tokens": 179,
      "context_length": 50059,
      "file_pos": 26
    },
    {
      "position": 58,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_function_transformer.py_warnings_FunctionTransformer.1",
      "distance": 1.0948805809020996,
      "file_path": "sklearn/preprocessing/_function_transformer.py",
      "start_line": 1,
      "end_line": 127,
      "tokens": 1012,
      "context_length": 51071
    },
    {
      "position": 59,
      "id": "/tmp/repos/scikit-learn/sklearn/compose/_column_transformer.py_ColumnTransformer._validate_output_ColumnTransformer._validate_output.3.1.1",
      "distance": 1.0948952436447144,
      "file_path": "sklearn/compose/_column_transformer.py",
      "start_line": 614,
      "end_line": 627,
      "tokens": 146,
      "context_length": 51217
    },
    {
      "position": 60,
      "id": "/tmp/repos/scikit-learn/sklearn/inspection/_partial_dependence.py__grid_from_X.9__grid_from_X.10.1",
      "distance": 1.099532961845398,
      "file_path": "sklearn/inspection/_partial_dependence.py",
      "start_line": 100,
      "end_line": 136,
      "tokens": 364,
      "context_length": 51581
    },
    {
      "position": 61,
      "id": "/tmp/repos/scikit-learn/sklearn/impute/_base.py_numbers_is_scalar_nan",
      "distance": 1.100771427154541,
      "file_path": "sklearn/impute/_base.py",
      "start_line": 5,
      "end_line": 22,
      "tokens": 129,
      "context_length": 51710
    },
    {
      "position": 62,
      "id": "/tmp/repos/scikit-learn/sklearn/pipeline.py__transform_one__fit_one.2.1.1",
      "distance": 1.1012117862701416,
      "file_path": "sklearn/pipeline.py",
      "start_line": 926,
      "end_line": 958,
      "tokens": 275,
      "context_length": 51985
    },
    {
      "position": 63,
      "id": "/tmp/repos/scikit-learn/sklearn/manifold/_t_sne.py_9_MACHINE_EPSILON.1",
      "distance": 1.1020808219909668,
      "file_path": "sklearn/manifold/_t_sne.py",
      "start_line": 11,
      "end_line": 33,
      "tokens": 222,
      "context_length": 52207
    },
    {
      "position": 64,
      "id": "/tmp/repos/scikit-learn/examples/release_highlights/plot_release_highlights_1_2_0.py_1_47",
      "distance": 1.1021544933319092,
      "file_path": "examples/release_highlights/plot_release_highlights_1_2_0.py",
      "start_line": 1,
      "end_line": 90,
      "tokens": 766,
      "context_length": 52973
    },
    {
      "position": 65,
      "id": "/tmp/repos/scikit-learn/sklearn/feature_extraction/_dict_vectorizer.py_DictVectorizer._transform_DictVectorizer._transform.5",
      "distance": 1.1023788452148438,
      "file_path": "sklearn/feature_extraction/_dict_vectorizer.py",
      "start_line": 190,
      "end_line": 287,
      "tokens": 729,
      "context_length": 53702
    },
    {
      "position": 66,
      "id": "/tmp/repos/scikit-learn/examples/applications/plot_cyclical_feature_engineering.py_280_329",
      "distance": 1.1035534143447876,
      "file_path": "examples/applications/plot_cyclical_feature_engineering.py",
      "start_line": 451,
      "end_line": 524,
      "tokens": 747,
      "context_length": 54449
    },
    {
      "position": 67,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_QuantileTransformer._sparse_fit_QuantileTransformer._sparse_fit.self.quantiles__11.1",
      "distance": 1.1041138172149658,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2592,
      "end_line": 2635,
      "tokens": 474,
      "context_length": 54923,
      "file_pos": 30
    },
    {
      "position": 68,
      "id": "/tmp/repos/scikit-learn/examples/impute/plot_iterative_imputer_variants_comparison.py_1_score_simple_imputer.1",
      "distance": 1.1049706935882568,
      "file_path": "examples/impute/plot_iterative_imputer_variants_comparison.py",
      "start_line": 1,
      "end_line": 91,
      "tokens": 780,
      "context_length": 55703
    },
    {
      "position": 69,
      "id": "/tmp/repos/scikit-learn/sklearn/preprocessing/_data.py_QuantileTransformer._parameter_constraints_QuantileTransformer.__init__.self.copy.1",
      "distance": 1.1057732105255127,
      "file_path": "sklearn/preprocessing/_data.py",
      "start_line": 2534,
      "end_line": 2558,
      "tokens": 210,
      "context_length": 55913,
      "file_pos": 31
    },
    {
      "position": 70,
      "id": "/tmp/repos/scikit-learn/sklearn/inspection/_partial_dependence.py_partial_dependence.18_",
      "distance": 1.1060489416122437,
      "file_path": "sklearn/inspection/_partial_dependence.py",
      "start_line": 668,
      "end_line": 743,
      "tokens": 876,
      "context_length": 56789
    },
    {
      "position": 71,
      "id": "/tmp/repos/scikit-learn/benchmarks/bench_plot_randomized_svd.py_1_27",
      "distance": 1.1064085960388184,
      "file_path": "benchmarks/bench_plot_randomized_svd.py",
      "start_line": 1,
      "end_line": 109,
      "tokens": 889,
      "context_length": 57678
    }
  ],
  "files": [
    {
      "file_path": "sklearn/preprocessing/_data.py",
      "position": 1,
      "tokens": 27877,
      "context_length": 27877
    },
    {
      "file_path": "examples/preprocessing/plot_all_scaling.py",
      "position": 2,
      "tokens": 3442,
      "context_length": 31319
    },
    {
      "file_path": "sklearn/utils/estimator_checks.py",
      "position": 3,
      "tokens": 36450,
      "context_length": 67769
    },
    {
      "file_path": "sklearn/preprocessing/_polynomial.py",
      "position": 4,
      "tokens": 10707,
      "context_length": 78476
    },
    {
      "file_path": "examples/preprocessing/plot_map_data_to_normal.py",
      "position": 5,
      "tokens": 1286,
      "context_length": 79762
    },
    {
      "file_path": "examples/compose/plot_column_transformer_mixed_types.py",
      "position": 6,
      "tokens": 1797,
      "context_length": 81559
    },
    {
      "file_path": "examples/miscellaneous/plot_set_output.py",
      "position": 7,
      "tokens": 1067,
      "context_length": 82626
    },
    {
      "file_path": "sklearn/compose/_column_transformer.py",
      "position": 8,
      "tokens": 9437,
      "context_length": 92063
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_1_0_0.py",
      "position": 9,
      "tokens": 2335,
      "context_length": 94398
    },
    {
      "file_path": "examples/neighbors/approximate_nearest_neighbors.py",
      "position": 10,
      "tokens": 2734,
      "context_length": 97132
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_1_1_0.py",
      "position": 11,
      "tokens": 2135,
      "context_length": 99267
    },
    {
      "file_path": "benchmarks/bench_random_projections.py",
      "position": 12,
      "tokens": 1821,
      "context_length": 101088
    },
    {
      "file_path": "examples/compose/plot_column_transformer.py",
      "position": 13,
      "tokens": 1236,
      "context_length": 102324
    },
    {
      "file_path": "sklearn/cross_decomposition/_pls.py",
      "position": 14,
      "tokens": 9083,
      "context_length": 111407
    },
    {
      "file_path": "sklearn/preprocessing/__init__.py",
      "position": 15,
      "tokens": 432,
      "context_length": 111839
    },
    {
      "file_path": "sklearn/impute/_base.py",
      "position": 16,
      "tokens": 8376,
      "context_length": 120215
    },
    {
      "file_path": "examples/preprocessing/plot_target_encoder.py",
      "position": 17,
      "tokens": 1804,
      "context_length": 122019
    },
    {
      "file_path": "examples/linear_model/plot_poisson_regression_non_normal_loss.py",
      "position": 18,
      "tokens": 5333,
      "context_length": 127352
    },
    {
      "file_path": "sklearn/preprocessing/_function_transformer.py",
      "position": 19,
      "tokens": 2728,
      "context_length": 130080
    },
    {
      "file_path": "sklearn/preprocessing/_encoders.py",
      "position": 20,
      "tokens": 14100,
      "context_length": 144180
    },
    {
      "file_path": "examples/inspection/plot_partial_dependence.py",
      "position": 21,
      "tokens": 4973,
      "context_length": 149153
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_0_22_0.py",
      "position": 22,
      "tokens": 2410,
      "context_length": 151563
    },
    {
      "file_path": "examples/compose/plot_compare_reduction.py",
      "position": 23,
      "tokens": 986,
      "context_length": 152549
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_1_2_0.py",
      "position": 24,
      "tokens": 1485,
      "context_length": 154034
    },
    {
      "file_path": "examples/release_highlights/plot_release_highlights_0_24_0.py",
      "position": 25,
      "tokens": 2438,
      "context_length": 156472
    },
    {
      "file_path": "examples/applications/plot_cyclical_feature_engineering.py",
      "position": 26,
      "tokens": 7260,
      "context_length": 163732
    },
    {
      "file_path": "sklearn/inspection/_partial_dependence.py",
      "position": 27,
      "tokens": 6942,
      "context_length": 170674
    },
    {
      "file_path": "sklearn/pipeline.py",
      "position": 28,
      "tokens": 10647,
      "context_length": 181321
    },
    {
      "file_path": "sklearn/manifold/_t_sne.py",
      "position": 29,
      "tokens": 10017,
      "context_length": 191338
    },
    {
      "file_path": "sklearn/feature_extraction/_dict_vectorizer.py",
      "position": 30,
      "tokens": 3203,
      "context_length": 194541
    },
    {
      "file_path": "examples/impute/plot_iterative_imputer_variants_comparison.py",
      "position": 31,
      "tokens": 1335,
      "context_length": 195876
    },
    {
      "file_path": "benchmarks/bench_plot_randomized_svd.py",
      "position": 32,
      "tokens": 4610,
      "context_length": 200486
    }
  ]
}