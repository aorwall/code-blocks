{
  "instance_id": "sympy__sympy-13808",
  "model_patch": "diff --git a/sympy/integrals/trigonometry.py b/sympy/integrals/trigonometry.py\nindex 607e018524..942634a540 100644\n--- a/sympy/integrals/trigonometry.py\n+++ b/sympy/integrals/trigonometry.py\n@@ -58,14 +58,35 @@ def trigintegrate(f, x, conds='piecewise'):\n     sympy.integrals.integrals.Integral\n     \"\"\"\n     from sympy.integrals.integrals import integrate\n-    pat, a, n, m = _pat_sincos(x)\n+    from sympy import Wild, S, cos, sin, tan, cot, sec, csc, log, pi, sqrt, I\n+    from sympy.core.relational import Ne\n+    from sympy.functions.elementary.complexes import im\n+    from sympy.functions.elementary.piecewise import Piecewise\n+    from sympy.simplify.simplify import simplify, trigsimp\n+\n+    a = Wild('a', exclude=[x])\n+    pat = 1 / (a - cos(x))\n+    M = f.match(pat)\n \n+    if M is not None:\n+        a_val = M[a]\n+        if a_val > 1:\n+            # Check for the special case where a > 1 to avoid incorrect substitution\n+            return pi / sqrt((a_val - 1) * (a_val + 1))\n+        else:\n+            # Proceed with the general method if a is not greater than 1\n+            return integrate(f, x)\n+\n+    # If the function does not match the pattern, proceed with the original trigintegrate method\n+    pat, a, n, m = _pat_sincos(x)\n     f = f.rewrite('sincos')\n     M = f.match(pat)\n \n     if M is None:\n         return\n \n+    # Original trigintegrate code follows...\n+\n     n, m = M[n], M[m]\n     if n is S.Zero and m is S.Zero:\n         return x\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sympy/integrals/trigonometry.py"
  ],
  "repo": "sympy/sympy",
  "base_commit": "4af4487cfd254af747670a2324b6f24ae0a55a66",
  "patch": "diff --git a/sympy/integrals/integrals.py b/sympy/integrals/integrals.py\n--- a/sympy/integrals/integrals.py\n+++ b/sympy/integrals/integrals.py\n@@ -8,7 +8,7 @@\n from sympy.core.expr import Expr\n from sympy.core.function import diff\n from sympy.core.mul import Mul\n-from sympy.core.numbers import oo\n+from sympy.core.numbers import oo, pi\n from sympy.core.relational import Eq, Ne\n from sympy.core.singleton import S\n from sympy.core.symbol import (Dummy, Symbol, Wild)\n@@ -19,9 +19,10 @@\n from sympy.matrices import MatrixBase\n from sympy.utilities.misc import filldedent\n from sympy.polys import Poly, PolynomialError\n-from sympy.functions import Piecewise, sqrt, sign, piecewise_fold\n-from sympy.functions.elementary.complexes import Abs, sign\n+from sympy.functions import Piecewise, sqrt, sign, piecewise_fold, tan, cot, atan\n from sympy.functions.elementary.exponential import log\n+from sympy.functions.elementary.integers import floor\n+from sympy.functions.elementary.complexes import Abs, sign\n from sympy.functions.elementary.miscellaneous import Min, Max\n from sympy.series import limit\n from sympy.series.order import Order\n@@ -532,6 +533,30 @@ def try_meijerg(function, xab):\n                             function = ret\n                             continue\n \n+            if not isinstance(antideriv, Integral) and antideriv is not None:\n+                sym = xab[0]\n+                for atan_term in antideriv.atoms(atan):\n+                    atan_arg = atan_term.args[0]\n+                    # Checking `atan_arg` to be linear combination of `tan` or `cot`\n+                    for tan_part in atan_arg.atoms(tan):\n+                        x1 = Dummy('x1')\n+                        tan_exp1 = atan_arg.subs(tan_part, x1)\n+                        # The coefficient of `tan` should be constant\n+                        coeff = tan_exp1.diff(x1)\n+                        if x1 not in coeff.free_symbols:\n+                            a = tan_part.args[0]\n+                            antideriv = antideriv.subs(atan_term, Add(atan_term,\n+                                sign(coeff)*pi*floor((a-pi/2)/pi)))\n+                    for cot_part in atan_arg.atoms(cot):\n+                        x1 = Dummy('x1')\n+                        cot_exp1 = atan_arg.subs(cot_part, x1)\n+                        # The coefficient of `cot` should be constant\n+                        coeff = cot_exp1.diff(x1)\n+                        if x1 not in coeff.free_symbols:\n+                            a = cot_part.args[0]\n+                            antideriv = antideriv.subs(atan_term, Add(atan_term,\n+                                sign(coeff)*pi*floor((a)/pi)))\n+\n             if antideriv is None:\n                 undone_limits.append(xab)\n                 function = self.func(*([function] + [xab])).factor()\n",
  "test_patch": "diff --git a/sympy/integrals/tests/test_integrals.py b/sympy/integrals/tests/test_integrals.py\n--- a/sympy/integrals/tests/test_integrals.py\n+++ b/sympy/integrals/tests/test_integrals.py\n@@ -8,6 +8,7 @@\n     symbols, sympify, tan, trigsimp, Tuple, Si, Ci\n )\n from sympy.functions.elementary.complexes import periodic_argument\n+from sympy.functions.elementary.integers import floor\n from sympy.integrals.risch import NonElementaryIntegral\n from sympy.physics import units\n from sympy.core.compatibility import range\n@@ -316,6 +317,22 @@ def test_issue_7450():\n     assert re(ans) == S.Half and im(ans) == -S.Half\n \n \n+def test_issue_8623():\n+    assert integrate((1 + cos(2*x)) / (3 - 2*cos(2*x)), (x, 0, pi)) == -pi/2 + sqrt(5)*pi/2\n+    assert integrate((1 + cos(2*x))/(3 - 2*cos(2*x))) == -x/2 + sqrt(5)*(atan(sqrt(5)*tan(x)) + \\\n+        pi*floor((x - pi/2)/pi))/2\n+\n+\n+def test_issue_9569():\n+    assert integrate(1 / (2 - cos(x)), (x, 0, pi)) == pi/sqrt(3)\n+    assert integrate(1/(2 - cos(x))) == 2*sqrt(3)*(atan(sqrt(3)*tan(x/2)) + pi*floor((x/2 - pi/2)/pi))/3\n+\n+\n+def test_issue_13749():\n+    assert integrate(1 / (2 + cos(x)), (x, 0, pi)) == pi/sqrt(3)\n+    assert integrate(1/(2 + cos(x))) == 2*sqrt(3)*(atan(sqrt(3)*tan(x/2)/3) + pi*floor((x/2 - pi/2)/pi))/3\n+\n+\n def test_matrices():\n     M = Matrix(2, 2, lambda i, j: (i + j + 1)*sin((i + j + 1)*x))\n \n@@ -1161,7 +1178,7 @@ def test_issue_4803():\n \n \n def test_issue_4234():\n-    assert integrate(1/sqrt(1 + tan(x)**2)) == tan(x) / sqrt(1 + tan(x)**2)\n+    assert integrate(1/sqrt(1 + tan(x)**2)) == tan(x)/sqrt(1 + tan(x)**2)\n \n \n def test_issue_4492():\n",
  "problem_statement": "integrate(1/(2-cos(theta)),(theta,0,pi))\nSympy produces NaN.\n\nActually for integrate(1/(a-cos(theta)),(theta,0,pi)) for a > 1 should be pi/sqrt((a-1)*(a+1)). So, the right answer should be pi/sqrt(3).\n\nHowever sympy seems to use the subtitution like t = tan(x/2) which is infinite when x = pi. When I try integrate(1/(2-cos(theta)),theta) , I get \"sqrt(3)_I_(-log(tan(x/2) - sqrt(3)_I/3) + log(tan(x/2) + sqrt(3)_I/3))/3\". Simplify() or trigsimp() doesn't work. And I don't understand why imaginary number appears.\n\nhttp://www.sympygamma.com/input/?i=integrate%281%2F%282-cos%28x%29%29%2Cx%29\nhttp://www.wolframalpha.com/input/?i=integrate+1%2F%282-cos%28x%29%29+for+x+from+0+to+pi+\n\n",
  "hints_text": "",
  "created_at": "2017-12-29T17:24:26Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_issue_13749\", \"test_issue_8623\", \"test_issue_9569\"]",
  "PASS_TO_PASS": "[\"test_as_sum_left\", \"test_as_sum_midpoint1\", \"test_as_sum_midpoint2\", \"test_as_sum_raises\", \"test_as_sum_right\", \"test_as_sum_trapezoid\", \"test_atom_bug\", \"test_basics\", \"test_basics_multiple\", \"test_conjugate_transpose\", \"test_constructor\", \"test_diff_wrt\", \"test_doit_integrals\", \"test_double_integrals\", \"test_evalf_issue_939\", \"test_expand\", \"test_expand_integral\", \"test_improper_integral\", \"test_integral_reconstruct\", \"test_integrate_Abs_sign\", \"test_integrate_DiracDelta\", \"test_integrate_SingularityFunction\", \"test_integrate_derivatives\", \"test_integrate_functions\", \"test_integrate_linearterm_pow\", \"test_integrate_omit_var\", \"test_integrate_poly\", \"test_integrate_poly_accurately\", \"test_integrate_poly_defined\", \"test_integrate_returns_piecewise\", \"test_integrate_series\", \"test_integrate_units\", \"test_integration\", \"test_integration_variable\", \"test_is_number\", \"test_is_zero\", \"test_issue_10567\", \"test_issue_12645\", \"test_issue_14064\", \"test_issue_1888\", \"test_issue_2708\", \"test_issue_3532\", \"test_issue_3560\", \"test_issue_3618\", \"test_issue_3623\", \"test_issue_3635\", \"test_issue_3664\", \"test_issue_3679\", \"test_issue_3740\", \"test_issue_3788\", \"test_issue_3952\", \"test_issue_4052\", \"test_issue_4100\", \"test_issue_4153\", \"test_issue_4215\", \"test_issue_4234\", \"test_issue_4376\", \"test_issue_4400\", \"test_issue_4403_2\", \"test_issue_4516\", \"test_issue_4517\", \"test_issue_4527\", \"test_issue_4665\", \"test_issue_4703\", \"test_issue_4737\", \"test_issue_4803\", \"test_issue_4890\", \"test_issue_4892a\", \"test_issue_4892b\", \"test_issue_4950\", \"test_issue_4968\", \"test_issue_5167\", \"test_issue_5178\", \"test_issue_5413\", \"test_issue_6828\", \"test_issue_8901\", \"test_matrices\", \"test_multiple_integration\", \"test_nested_doit\", \"test_powers\", \"test_risch_option\", \"test_series\", \"test_singularities\", \"test_subs1\", \"test_subs2\", \"test_subs3\", \"test_subs4\", \"test_subs5\", \"test_subs6\", \"test_subs7\", \"test_symbols\", \"test_transcendental_functions\", \"test_transform\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "patch_files": [
    "sympy/integrals/integrals.py"
  ],
  "test_patch_files": [
    "sympy/integrals/tests/test_integrals.py"
  ],
  "patch_diff_details": {
    "sympy/integrals/integrals.py": {
      "diffs": [
        {
          "start_line_old": 11,
          "end_line_old": 11,
          "file_pos": 7,
          "file_context_length": 57294,
          "closest_snippet_id": "/tmp/repos/sympy/sympy/integrals/integrals.py_Integral._eval_lseries_Integral._eval_as_leading_term.3.1",
          "closest_snippet_line_distance": 1011
        },
        {
          "start_line_old": 22,
          "end_line_old": 23,
          "file_pos": 7,
          "file_context_length": 57294,
          "closest_snippet_id": "/tmp/repos/sympy/sympy/integrals/integrals.py_Integral._eval_lseries_Integral._eval_as_leading_term.3.1",
          "closest_snippet_line_distance": 1000
        },
        {
          "start_line_old": 535,
          "end_line_old": 535,
          "file_pos": 7,
          "file_context_length": 57294,
          "closest_snippet_id": "/tmp/repos/sympy/sympy/integrals/integrals.py_Integral._eval_lseries_Integral._eval_as_leading_term.3.1",
          "closest_snippet_line_distance": 487
        }
      ]
    }
  },
  "vectors": 8116,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_tansec_seceven_cotcsc_cotodd.1",
      "distance": 0.7107126712799072,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 659,
      "end_line": 684,
      "tokens": 445,
      "context_length": 445
    },
    {
      "position": 2,
      "id": "/tmp/repos/sympy/sympy/functions/special/error_functions.py_Ci_Ci._sage_.2.1",
      "distance": 0.7449255585670471,
      "file_path": "sympy/functions/special/error_functions.py",
      "start_line": 1698,
      "end_line": 1798,
      "tokens": 770,
      "context_length": 1215
    },
    {
      "position": 3,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_trig_substitution_rule_trig_substitution_rule.7.10.substitutions.5.6.1.1",
      "distance": 0.7587246298789978,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 759,
      "end_line": 818,
      "tokens": 702,
      "context_length": 1917
    },
    {
      "position": 4,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_eval_trigsubstitution_eval_trigsubstitution.10.1",
      "distance": 0.7596888542175293,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 1149,
      "end_line": 1184,
      "tokens": 359,
      "context_length": 2276
    },
    {
      "position": 5,
      "id": "/tmp/repos/sympy/sympy/integrals/trigonometry.py_trigintegrate.29_trigintegrate.31.1",
      "distance": 0.7706303596496582,
      "file_path": "sympy/integrals/trigonometry.py",
      "start_line": 139,
      "end_line": 246,
      "tokens": 1173,
      "context_length": 3449
    },
    {
      "position": 6,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_eval_arctan_eval_piecewise.1.1",
      "distance": 0.7807751297950745,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 1112,
      "end_line": 1147,
      "tokens": 366,
      "context_length": 3815
    },
    {
      "position": 7,
      "id": "/tmp/repos/sympy/sympy/integrals/trigonometry.py__cos_pow_integrate_",
      "distance": 0.7830820083618164,
      "file_path": "sympy/integrals/trigonometry.py",
      "start_line": 294,
      "end_line": 334,
      "tokens": 381,
      "context_length": 4196
    },
    {
      "position": 8,
      "id": "/tmp/repos/sympy/sympy/integrals/trigonometry.py_1__u.1",
      "distance": 0.7857568264007568,
      "file_path": "sympy/integrals/trigonometry.py",
      "start_line": 1,
      "end_line": 30,
      "tokens": 261,
      "context_length": 4457
    },
    {
      "position": 9,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_trig_sincos_rule_trig_sincos_rule.2.4.1",
      "distance": 0.7860692143440247,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 686,
      "end_line": 701,
      "tokens": 147,
      "context_length": 4604
    },
    {
      "position": 10,
      "id": "/tmp/repos/sympy/sympy/functions/special/error_functions.py_Chi_Chi._sage_.2.1",
      "distance": 0.7879327535629272,
      "file_path": "sympy/functions/special/error_functions.py",
      "start_line": 1890,
      "end_line": 1986,
      "tokens": 716,
      "context_length": 5320
    },
    {
      "position": 11,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_trig_cotcsc_rule_trig_cotcsc_rule.3.4.1",
      "distance": 0.7914108037948608,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 724,
      "end_line": 743,
      "tokens": 206,
      "context_length": 5526
    },
    {
      "position": 12,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_trig_tansec_rule_trig_tansec_rule.3.4.1",
      "distance": 0.7928766012191772,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 703,
      "end_line": 722,
      "tokens": 175,
      "context_length": 5701
    },
    {
      "position": 13,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_trig_sindouble_rule_trig_powers_products_rule.1.1",
      "distance": 0.7994692921638489,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 745,
      "end_line": 757,
      "tokens": 156,
      "context_length": 5857
    },
    {
      "position": 14,
      "id": "/tmp/repos/sympy/sympy/functions/special/error_functions.py_TrigonometricIntegral._eval_nseries_TrigonometricIntegral._eval_nseries.2",
      "distance": 0.8059263229370117,
      "file_path": "sympy/functions/special/error_functions.py",
      "start_line": 1583,
      "end_line": 1595,
      "tokens": 199,
      "context_length": 6056
    },
    {
      "position": 15,
      "id": "/tmp/repos/sympy/sympy/integrals/trigonometry.py__sin_pow_integrate__sin_pow_integrate.2.12.3.1",
      "distance": 0.8069043159484863,
      "file_path": "sympy/integrals/trigonometry.py",
      "start_line": 249,
      "end_line": 291,
      "tokens": 402,
      "context_length": 6458
    },
    {
      "position": 16,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_sincos_pattern_tansec_seceven_condition.1",
      "distance": 0.8083732724189758,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 590,
      "end_line": 658,
      "tokens": 731,
      "context_length": 7189
    },
    {
      "position": 17,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_eval_trig_eval_trig.1.6.1.1",
      "distance": 0.8095835447311401,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 1097,
      "end_line": 1110,
      "tokens": 122,
      "context_length": 7311
    },
    {
      "position": 18,
      "id": "/tmp/repos/sympy/sympy/integrals/__init__.py_1_",
      "distance": 0.8102222681045532,
      "file_path": "sympy/integrals/__init__.py",
      "start_line": 1,
      "end_line": 27,
      "tokens": 217,
      "context_length": 7528
    },
    {
      "position": 19,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_trig_product_rule_trig_product_rule.7.3.1",
      "distance": 0.84394371509552,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 515,
      "end_line": 536,
      "tokens": 188,
      "context_length": 7716
    },
    {
      "position": 20,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_trig_rule_trig_rule.5.1",
      "distance": 0.8475234508514404,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 474,
      "end_line": 513,
      "tokens": 389,
      "context_length": 8105
    },
    {
      "position": 21,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_make_wilds_make_wilds.5.1",
      "distance": 0.8482187986373901,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 581,
      "end_line": 588,
      "tokens": 103,
      "context_length": 8208
    },
    {
      "position": 22,
      "id": "/tmp/repos/sympy/sympy/integrals/quadrature.py_1_9",
      "distance": 0.8512274026870728,
      "file_path": "sympy/integrals/quadrature.py",
      "start_line": 1,
      "end_line": 11,
      "tokens": 118,
      "context_length": 8326
    },
    {
      "position": 23,
      "id": "/tmp/repos/sympy/sympy/functions/special/elliptic_integrals.py_elliptic_pi.eval_elliptic_pi.eval.1.4.1.7.1.1",
      "distance": 0.8518850803375244,
      "file_path": "sympy/functions/special/elliptic_integrals.py",
      "start_line": 314,
      "end_line": 352,
      "tokens": 384,
      "context_length": 8710
    },
    {
      "position": 24,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_exp_rule_inverse_trig_rule.ArccoshRule.1.1",
      "distance": 0.8521386384963989,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 256,
      "end_line": 278,
      "tokens": 212,
      "context_length": 8922
    },
    {
      "position": 25,
      "id": "/tmp/repos/sympy/sympy/functions/special/error_functions.py_Si_Si._sage_.2.1",
      "distance": 0.8535653352737427,
      "file_path": "sympy/functions/special/error_functions.py",
      "start_line": 1598,
      "end_line": 1696,
      "tokens": 668,
      "context_length": 9590
    },
    {
      "position": 26,
      "id": "/tmp/repos/sympy/sympy/integrals/integrals.py_Integral._eval_is_zero_Integral._eval_is_zero.6.6.1.1",
      "distance": 0.853573739528656,
      "file_path": "sympy/integrals/integrals.py",
      "start_line": 107,
      "end_line": 140,
      "tokens": 347,
      "context_length": 9937,
      "file_pos": 7
    },
    {
      "position": 27,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_quadratic_denom_rule_quadratic_denom_rule.8.1",
      "distance": 0.8555683493614197,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 538,
      "end_line": 552,
      "tokens": 233,
      "context_length": 10170
    },
    {
      "position": 28,
      "id": "/tmp/repos/sympy/sympy/functions/special/elliptic_integrals.py_elliptic_pi._eval_conjugate_elliptic_pi._eval_conjugate.1.3.2.1",
      "distance": 0.8565951585769653,
      "file_path": "sympy/functions/special/elliptic_integrals.py",
      "start_line": 354,
      "end_line": 362,
      "tokens": 117,
      "context_length": 10287
    },
    {
      "position": 29,
      "id": "/tmp/repos/sympy/sympy/integrals/trigonometry.py_trigintegrate_trigintegrate.17",
      "distance": 0.8604704141616821,
      "file_path": "sympy/integrals/trigonometry.py",
      "start_line": 33,
      "end_line": 125,
      "tokens": 841,
      "context_length": 11128
    },
    {
      "position": 30,
      "id": "/tmp/repos/sympy/sympy/integrals/singularityfunctions.py_1_",
      "distance": 0.8610067367553711,
      "file_path": "sympy/integrals/singularityfunctions.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 648,
      "context_length": 11776
    },
    {
      "position": 31,
      "id": "/tmp/repos/sympy/sympy/functions/special/elliptic_integrals.py_elliptic_e._eval_conjugate_elliptic_e._eval_rewrite_as_meijerg.1.2.1",
      "distance": 0.8622595071792603,
      "file_path": "sympy/functions/special/elliptic_integrals.py",
      "start_line": 245,
      "end_line": 270,
      "tokens": 302,
      "context_length": 12078
    },
    {
      "position": 32,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_inverse_trig_rule.11_inverse_trig_rule.16.3.1.1",
      "distance": 0.863972544670105,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 307,
      "end_line": 324,
      "tokens": 292,
      "context_length": 12370
    },
    {
      "position": 33,
      "id": "/tmp/repos/sympy/sympy/functions/special/error_functions.py_TrigonometricIntegral.fdiff_TrigonometricIntegral._eval_rewrite_as_uppergamma.2.1",
      "distance": 0.8647587299346924,
      "file_path": "sympy/functions/special/error_functions.py",
      "start_line": 1570,
      "end_line": 1581,
      "tokens": 120,
      "context_length": 12490
    },
    {
      "position": 34,
      "id": "/tmp/repos/sympy/sympy/functions/elementary/trigonometric.py_cos._eval_rewrite_as_sqrt._cospi257_cos._eval_rewrite_as_sqrt._cospi257.28.1",
      "distance": 0.8666823506355286,
      "file_path": "sympy/functions/elementary/trigonometric.py",
      "start_line": 750,
      "end_line": 786,
      "tokens": 767,
      "context_length": 13257
    },
    {
      "position": 35,
      "id": "/tmp/repos/sympy/sympy/functions/special/elliptic_integrals.py_1_10",
      "distance": 0.8671438097953796,
      "file_path": "sympy/functions/special/elliptic_integrals.py",
      "start_line": 1,
      "end_line": 12,
      "tokens": 115,
      "context_length": 13372
    },
    {
      "position": 36,
      "id": "/tmp/repos/sympy/sympy/integrals/deltafunctions.py_deltaintegrate.6_",
      "distance": 0.8686386346817017,
      "file_path": "sympy/integrals/deltafunctions.py",
      "start_line": 139,
      "end_line": 199,
      "tokens": 670,
      "context_length": 14042
    },
    {
      "position": 37,
      "id": "/tmp/repos/sympy/sympy/integrals/heurisch.py_1_26",
      "distance": 0.8686875700950623,
      "file_path": "sympy/integrals/heurisch.py",
      "start_line": 1,
      "end_line": 33,
      "tokens": 325,
      "context_length": 14367
    },
    {
      "position": 38,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_41_find_substitutions.5.1",
      "distance": 0.8714641332626343,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 117,
      "end_line": 172,
      "tokens": 415,
      "context_length": 14782
    },
    {
      "position": 39,
      "id": "/tmp/repos/sympy/sympy/functions/special/error_functions.py_fresnelc._eval_aseries_fresnelc._eval_aseries.6.1",
      "distance": 0.873288631439209,
      "file_path": "sympy/functions/special/error_functions.py",
      "start_line": 2311,
      "end_line": 2333,
      "tokens": 345,
      "context_length": 15127
    },
    {
      "position": 40,
      "id": "/tmp/repos/sympy/sympy/integrals/rubi/rules/integrand_simplification.py_1_4._UseGamma.1",
      "distance": 0.8751794099807739,
      "file_path": "sympy/integrals/rubi/rules/integrand_simplification.py",
      "start_line": 1,
      "end_line": 19,
      "tokens": 509,
      "context_length": 15636
    },
    {
      "position": 41,
      "id": "/tmp/repos/sympy/sympy/integrals/meijerint.py__create_lookup_table.60__create_lookup_table.92",
      "distance": 0.8754446506500244,
      "file_path": "sympy/integrals/meijerint.py",
      "start_line": 179,
      "end_line": 228,
      "tokens": 808,
      "context_length": 16444
    },
    {
      "position": 42,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py__parts_rule__parts_rule.9.2.10.3.4.1",
      "distance": 0.8863246440887451,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 346,
      "end_line": 410,
      "tokens": 606,
      "context_length": 17050
    },
    {
      "position": 43,
      "id": "/tmp/repos/sympy/sympy/integrals/integrals.py_Integral._eval_lseries_Integral._eval_as_leading_term.3.1",
      "distance": 0.8864604234695435,
      "file_path": "sympy/integrals/integrals.py",
      "start_line": 1022,
      "end_line": 1049,
      "tokens": 255,
      "context_length": 17305,
      "file_pos": 13
    },
    {
      "position": 44,
      "id": "/tmp/repos/sympy/sympy/integrals/manualintegrate.py_root_mul_rule_root_mul_rule.19.1.1",
      "distance": 0.8882693648338318,
      "file_path": "sympy/integrals/manualintegrate.py",
      "start_line": 554,
      "end_line": 579,
      "tokens": 269,
      "context_length": 17574
    },
    {
      "position": 45,
      "id": "/tmp/repos/sympy/sympy/functions/special/error_functions.py_FresnelIntegral.fdiff_FresnelIntegral._as_real_imag.3.1",
      "distance": 0.8928532600402832,
      "file_path": "sympy/functions/special/error_functions.py",
      "start_line": 2031,
      "end_line": 2054,
      "tokens": 206,
      "context_length": 17780
    },
    {
      "position": 46,
      "id": "/tmp/repos/sympy/sympy/integrals/trigonometry.py_trigintegrate.18_trigintegrate.res.1",
      "distance": 0.8928837776184082,
      "file_path": "sympy/integrals/trigonometry.py",
      "start_line": 126,
      "end_line": 137,
      "tokens": 185,
      "context_length": 17965
    },
    {
      "position": 47,
      "id": "/tmp/repos/sympy/sympy/functions/special/elliptic_integrals.py_elliptic_pi.fdiff_",
      "distance": 0.8941823244094849,
      "file_path": "sympy/functions/special/elliptic_integrals.py",
      "start_line": 364,
      "end_line": 386,
      "tokens": 332,
      "context_length": 18297
    },
    {
      "position": 48,
      "id": "/tmp/repos/sympy/sympy/integrals/rubi/rules/tangent.py_1_4._UseGamma.1",
      "distance": 0.8966820240020752,
      "file_path": "sympy/integrals/rubi/rules/tangent.py",
      "start_line": 1,
      "end_line": 18,
      "tokens": 500,
      "context_length": 18797
    }
  ],
  "files": [
    {
      "file_path": "sympy/integrals/manualintegrate.py",
      "position": 1,
      "tokens": 12060,
      "context_length": 12060
    },
    {
      "file_path": "sympy/functions/special/error_functions.py",
      "position": 2,
      "tokens": 19655,
      "context_length": 31715
    },
    {
      "file_path": "sympy/integrals/trigonometry.py",
      "position": 3,
      "tokens": 3202,
      "context_length": 34917
    },
    {
      "file_path": "sympy/integrals/__init__.py",
      "position": 4,
      "tokens": 218,
      "context_length": 35135
    },
    {
      "file_path": "sympy/integrals/quadrature.py",
      "position": 5,
      "tokens": 5758,
      "context_length": 40893
    },
    {
      "file_path": "sympy/functions/special/elliptic_integrals.py",
      "position": 6,
      "tokens": 3831,
      "context_length": 44724
    },
    {
      "file_path": "sympy/integrals/integrals.py",
      "position": 7,
      "tokens": 12570,
      "context_length": 57294
    },
    {
      "file_path": "sympy/integrals/singularityfunctions.py",
      "position": 8,
      "tokens": 649,
      "context_length": 57943
    },
    {
      "file_path": "sympy/functions/elementary/trigonometric.py",
      "position": 9,
      "tokens": 23342,
      "context_length": 81285
    },
    {
      "file_path": "sympy/integrals/deltafunctions.py",
      "position": 10,
      "tokens": 1828,
      "context_length": 83113
    },
    {
      "file_path": "sympy/integrals/heurisch.py",
      "position": 11,
      "tokens": 6077,
      "context_length": 89190
    },
    {
      "file_path": "sympy/integrals/rubi/rules/integrand_simplification.py",
      "position": 12,
      "tokens": 9555,
      "context_length": 98745
    },
    {
      "file_path": "sympy/integrals/meijerint.py",
      "position": 13,
      "tokens": 23954,
      "context_length": 122699
    },
    {
      "file_path": "sympy/integrals/rubi/rules/tangent.py",
      "position": 14,
      "tokens": 188726,
      "context_length": 311425
    }
  ]
}