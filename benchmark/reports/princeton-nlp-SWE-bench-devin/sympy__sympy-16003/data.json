{
  "instance_id": "sympy__sympy-16003",
  "model_patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\nindex 3f8b8d49e0..d2acd3d3c4 100644\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -35,7 +35,7 @@ class MathMLPrinterBase(Printer):\n \n     def __init__(self, settings=None):\n         Printer.__init__(self, settings)\n-        from xml.dom.minidom import Document,Text\n+        from xml.dom.minidom import Document, Text, Element\n \n         self.dom = Document()\n \n@@ -59,10 +59,15 @@ def doprint(self, expr):\n         Prints the expression as MathML.\n         \"\"\"\n         mathML = Printer._print(self, expr)\n-        unistr = mathML.toxml()\n-        xmlbstr = unistr.encode('ascii', 'xmlcharrefreplace')\n-        res = xmlbstr.decode()\n-        return res\n+        # Check if mathML is a DOM element before calling toxml\n+        if isinstance(mathML, Element):\n+            unistr = mathML.toxml()\n+            xmlbstr = unistr.encode('ascii', 'xmlcharrefreplace')\n+            res = xmlbstr.decode()\n+            return res\n+        else:\n+            # Handle the case where mathML is not a DOM element\n+            raise TypeError(\"mathML must be an XML DOM element, got %s\" % type(mathML))\n \n     def apply_patch(self):\n         # Applying the patch of xml.dom.minidom bug\n@@ -72,7 +77,7 @@ def apply_patch(self):\n         # Issue: http://bugs.python.org/issue4147\n         # Patch: http://hg.python.org/cpython/rev/7262f8f276ff/\n \n-        from xml.dom.minidom import Element, Text, Node, _write_data\n+        from xml.dom.minidom import Element, Text, Node\n \n         def writexml(self, writer, indent=\"\", addindent=\"\", newl=\"\"):\n             # indent = current indentation\n@@ -86,7 +91,7 @@ def writexml(self, writer, indent=\"\", addindent=\"\", newl=\"\"):\n \n             for a_name in a_names:\n                 writer.write(\" %s=\\\"\" % a_name)\n-                _write_data(writer, attrs[a_name].value)\n+                attrs[a_name].value.writexml(writer, '', '', '')\n                 writer.write(\"\\\"\")\n             if self.childNodes:\n                 writer.write(\">\")\n@@ -106,7 +111,7 @@ def writexml(self, writer, indent=\"\", addindent=\"\", newl=\"\"):\n         Element.writexml = writexml\n \n         def writexml(self, writer, indent=\"\", addindent=\"\", newl=\"\"):\n-            _write_data(writer, \"%s%s%s\" % (indent, self.data, newl))\n+            self.data.writexml(writer, indent, '', newl)\n         self._Text_writexml_old = Text.writexml\n         Text.writexml = writexml\n \n@@ -171,7 +176,11 @@ def _print_Mul(self, expr):\n         if _coeff_isneg(expr):\n             x = self.dom.createElement('apply')\n             x.appendChild(self.dom.createElement('minus'))\n-            x.appendChild(self._print_Mul(-expr))\n+            neg_expr = self._print(-expr)\n+            if isinstance(neg_expr, Element):\n+                x.appendChild(neg_expr)\n+            else:\n+                raise TypeError(\"The argument to appendChild must be an XML DOM element, got %s\" % type(neg_expr))\n             return x\n \n         from sympy.simplify import fraction\n@@ -196,9 +205,17 @@ def _print_Mul(self, expr):\n         x = self.dom.createElement('apply')\n         x.appendChild(self.dom.createElement('times'))\n         if(coeff != 1):\n-            x.appendChild(self._print(coeff))\n+            coeff_element = self._print(coeff)\n+            if isinstance(coeff_element, Element):\n+                x.appendChild(coeff_element)\n+            else:\n+                raise TypeError(\"The argument to appendChild must be an XML DOM element, got %s\" % type(coeff_element))\n         for term in terms:\n-            x.appendChild(self._print(term))\n+            term_element = self._print(term)\n+            if isinstance(term_element, Element):\n+                x.appendChild(term_element)\n+            else:\n+                raise TypeError(\"The argument to appendChild must be an XML DOM element, got %s\" % type(term_element))\n         return x\n \n     def _print_Add(self, expr, order=None):\n@@ -839,39 +856,32 @@ def _print_Number(self, e):\n         return x\n \n     def _print_Derivative(self, e):\n+        mfrac = self.dom.createElement('mfrac')\n+        mfrac.setAttribute('linethickness', '0')\n         mrow = self.dom.createElement('mrow')\n-        x = self.dom.createElement('mo')\n-        if requires_partial(e):\n-            x.appendChild(self.dom.createTextNode('&#x2202;'))\n-            y = self.dom.createElement('mo')\n-            y.appendChild(self.dom.createTextNode('&#x2202;'))\n-        else:\n-            x.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n-            y = self.dom.createElement('mo')\n-            y.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n-\n-        brac = self.dom.createElement('mfenced')\n-        brac.appendChild(self._print(e.expr))\n-        mrow = self.dom.createElement('mrow')\n-        mrow.appendChild(x)\n-        mrow.appendChild(brac)\n-\n+        # Create a dictionary to count the occurrences of each variable\n+        counts = dict()\n         for sym in e.variables:\n-            frac = self.dom.createElement('mfrac')\n-            m = self.dom.createElement('mrow')\n-            x = self.dom.createElement('mo')\n-            if requires_partial(e):\n-                x.appendChild(self.dom.createTextNode('&#x2202;'))\n+            if sym in counts:\n+                counts[sym] += 1\n+            else:\n+                counts[sym] = 1\n+        # Create the numerator with derivative variables and their counts\n+        for sym, count in counts.items():\n+            x = self._print(sym)\n+            if count == 1:\n+                mrow.appendChild(x)\n             else:\n-                x.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n-            y = self._print(sym)\n-            m.appendChild(x)\n-            m.appendChild(y)\n-            frac.appendChild(mrow)\n-            frac.appendChild(m)\n-            mrow = frac\n-\n-        return frac\n+                msup = self.dom.createElement('msup')\n+                msup.appendChild(x)\n+                msup.appendChild(self._print(count))\n+                mrow.appendChild(msup)\n+        mfrac.appendChild(mrow)\n+        # Create a new mrow for the function and append to the denominator\n+        mrow2 = self.dom.createElement('mrow')\n+        mrow2.appendChild(self._print(e.expr))\n+        mfrac.appendChild(mrow2)\n+        return mfrac\n \n     def _print_Function(self, e):\n         mrow = self.dom.createElement('mrow')\n",
  "model_name_or_path": "Devin",
  "pass_or_fail": "fail",
  "model_patch_files": [
    "sympy/printing/mathml.py"
  ],
  "repo": "sympy/sympy",
  "base_commit": "701441853569d370506514083b995d11f9a130bd",
  "patch": "diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py\n--- a/sympy/printing/mathml.py\n+++ b/sympy/printing/mathml.py\n@@ -423,10 +423,14 @@ def _print_Derivative(self, e):\n         if requires_partial(e):\n             diff_symbol = 'partialdiff'\n         x.appendChild(self.dom.createElement(diff_symbol))\n-\n         x_1 = self.dom.createElement('bvar')\n-        for sym in e.variables:\n+\n+        for sym, times in reversed(e.variable_count):\n             x_1.appendChild(self._print(sym))\n+            if times > 1:\n+                degree = self.dom.createElement('degree')\n+                degree.appendChild(self._print(sympify(times)))\n+                x_1.appendChild(degree)\n \n         x.appendChild(x_1)\n         x.appendChild(self._print(e.expr))\n@@ -839,39 +843,52 @@ def _print_Number(self, e):\n         return x\n \n     def _print_Derivative(self, e):\n-        mrow = self.dom.createElement('mrow')\n-        x = self.dom.createElement('mo')\n+\n         if requires_partial(e):\n-            x.appendChild(self.dom.createTextNode('&#x2202;'))\n-            y = self.dom.createElement('mo')\n-            y.appendChild(self.dom.createTextNode('&#x2202;'))\n+            d = '&#x2202;'\n         else:\n-            x.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n-            y = self.dom.createElement('mo')\n-            y.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n-\n-        brac = self.dom.createElement('mfenced')\n-        brac.appendChild(self._print(e.expr))\n-        mrow = self.dom.createElement('mrow')\n-        mrow.appendChild(x)\n-        mrow.appendChild(brac)\n-\n-        for sym in e.variables:\n-            frac = self.dom.createElement('mfrac')\n-            m = self.dom.createElement('mrow')\n-            x = self.dom.createElement('mo')\n-            if requires_partial(e):\n-                x.appendChild(self.dom.createTextNode('&#x2202;'))\n+            d = self.mathml_tag(e)\n+\n+        # Determine denominator\n+        m = self.dom.createElement('mrow')\n+        dim = 0 # Total diff dimension, for numerator\n+        for sym, num in reversed(e.variable_count):\n+            dim += num\n+            if num >= 2:\n+                x = self.dom.createElement('msup')\n+                xx = self.dom.createElement('mo')\n+                xx.appendChild(self.dom.createTextNode(d))\n+                x.appendChild(xx)\n+                x.appendChild(self._print(num))\n             else:\n-                x.appendChild(self.dom.createTextNode(self.mathml_tag(e)))\n-            y = self._print(sym)\n+                x = self.dom.createElement('mo')\n+                x.appendChild(self.dom.createTextNode(d))\n             m.appendChild(x)\n+            y = self._print(sym)\n             m.appendChild(y)\n-            frac.appendChild(mrow)\n-            frac.appendChild(m)\n-            mrow = frac\n \n-        return frac\n+        mnum = self.dom.createElement('mrow')\n+        if dim >= 2:\n+            x = self.dom.createElement('msup')\n+            xx = self.dom.createElement('mo')\n+            xx.appendChild(self.dom.createTextNode(d))\n+            x.appendChild(xx)\n+            x.appendChild(self._print(dim))\n+        else:\n+            x = self.dom.createElement('mo')\n+            x.appendChild(self.dom.createTextNode(d))\n+\n+        mnum.appendChild(x)\n+        mrow = self.dom.createElement('mrow')\n+        frac = self.dom.createElement('mfrac')\n+        frac.appendChild(mnum)\n+        frac.appendChild(m)\n+        mrow.appendChild(frac)\n+\n+        # Print function\n+        mrow.appendChild(self._print(e.expr))\n+\n+        return mrow\n \n     def _print_Function(self, e):\n         mrow = self.dom.createElement('mrow')\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_mathml.py b/sympy/printing/tests/test_mathml.py\n--- a/sympy/printing/tests/test_mathml.py\n+++ b/sympy/printing/tests/test_mathml.py\n@@ -1,7 +1,7 @@\n from sympy import diff, Integral, Limit, sin, Symbol, Integer, Rational, cos, \\\n     tan, asin, acos, atan, sinh, cosh, tanh, asinh, acosh, atanh, E, I, oo, \\\n     pi, GoldenRatio, EulerGamma, Sum, Eq, Ne, Ge, Lt, Float, Matrix, Basic, S, \\\n-    MatrixSymbol\n+    MatrixSymbol, Function, Derivative\n from sympy.stats.rv import RandomSymbol\n from sympy.printing.mathml import mathml, MathMLContentPrinter, MathMLPresentationPrinter, \\\n     MathMLPrinter\n@@ -508,22 +508,28 @@ def test_presentation_mathml_functions():\n         ].childNodes[0].nodeValue == 'x'\n \n     mml_2 = mpp._print(diff(sin(x), x, evaluate=False))\n-    assert mml_2.nodeName == 'mfrac'\n+    assert mml_2.nodeName == 'mrow'\n     assert mml_2.childNodes[0].childNodes[0\n-        ].childNodes[0].nodeValue == '&dd;'\n-    assert mml_2.childNodes[0].childNodes[1\n+        ].childNodes[0].childNodes[0].nodeValue == '&dd;'\n+    assert mml_2.childNodes[1].childNodes[1\n         ].nodeName == 'mfenced'\n-    assert mml_2.childNodes[1].childNodes[\n-        0].childNodes[0].nodeValue == '&dd;'\n+    assert mml_2.childNodes[0].childNodes[1\n+        ].childNodes[0].childNodes[0].nodeValue == '&dd;'\n \n     mml_3 = mpp._print(diff(cos(x*y), x, evaluate=False))\n-    assert mml_3.nodeName == 'mfrac'\n+    assert mml_3.childNodes[0].nodeName == 'mfrac'\n     assert mml_3.childNodes[0].childNodes[0\n-        ].childNodes[0].nodeValue == '&#x2202;'\n-    assert mml_2.childNodes[0].childNodes[1\n-        ].nodeName == 'mfenced'\n-    assert mml_3.childNodes[1].childNodes[\n-        0].childNodes[0].nodeValue == '&#x2202;'\n+        ].childNodes[0].childNodes[0].nodeValue == '&#x2202;'\n+    assert mml_3.childNodes[1].childNodes[0\n+        ].childNodes[0].nodeValue == 'cos'\n+\n+\n+def test_print_derivative():\n+    f = Function('f')\n+    z = Symbol('z')\n+    d = Derivative(f(x, y, z), x, z, x, z, z, y)\n+    assert mathml(d) == r'<apply><partialdiff/><bvar><ci>y</ci><ci>z</ci><degree><cn>2</cn></degree><ci>x</ci><ci>z</ci><ci>x</ci></bvar><apply><f/><ci>x</ci><ci>y</ci><ci>z</ci></apply></apply>'\n+    assert mathml(d, printer='presentation') == r'<mrow><mfrac><mrow><msup><mo>&#x2202;</mo><mn>6</mn></msup></mrow><mrow><mo>&#x2202;</mo><mi>y</mi><msup><mo>&#x2202;</mo><mn>2</mn></msup><mi>z</mi><mo>&#x2202;</mo><mi>x</mi><mo>&#x2202;</mo><mi>z</mi><mo>&#x2202;</mo><mi>x</mi></mrow></mfrac><mrow><mi>f</mi><mfenced><mi>x</mi><mi>y</mi><mi>z</mi></mfenced></mrow></mrow>'\n \n \n def test_presentation_mathml_limits():\n",
  "problem_statement": "MathML presentation printing of multiple derivatives messed up\nCurrently, the MathML presentation printed version of the expression `Derivative(f(x, y, z), x, z, x, z, z, y)`\r\nlooks like:\r\n![image](https://user-images.githubusercontent.com/8114497/52842849-a3d64380-3100-11e9-845f-8abacba54635.png)\r\n\r\nwhile a proper rending would be more along the lines of the LaTeX equivalent:\r\n![image](https://user-images.githubusercontent.com/8114497/52843456-78545880-3102-11e9-9d73-1d2d515a888c.png)\r\n\r\nHence, the `_print_Derivative` method should be improved, first and foremost to print all the derivative variables on a single line and to get the correct power in the numerator.\r\n\r\nIt is also preferred if the actual function ends up on a separate line (not sure if there is some logic to tell when this should or should not happen).\r\n\r\nIf possible, the logic to group adjacent identical terms can be applied, see the discussion and code in #15975 which gives an idea of how to implement it.\r\n\n[To be closed] Added _print_derivative2 methods from #3926\n<!-- Your title above should be a short description of what\r\nwas changed. Do not include the issue number in the title. -->\r\n\r\n#### References to other Issues or PRs\r\n<!-- If this pull request fixes an issue, write \"Fixes #NNNN\" in that exact\r\nformat, e.g. \"Fixes #1234\". See\r\nhttps://github.com/blog/1506-closing-issues-via-pull-requests . Please also\r\nwrite a comment on that issue linking back to this pull request once it is\r\nopen. -->\r\nCloses #3926 \r\n\r\n#### Brief description of what is fixed or changed\r\nAs the attached diff in #3926 was pretty large due to line endings, I extracted the interesting parts, the methods `_print_derivative2` for LaTex, pretty and MathML printers.\r\n\r\n#### Other comments\r\nNot sure what to do with it. It looked quite promising in the original PR. Maybe one should have a switch to select between these two methods of printing?\r\n\r\nI have not checked the code more than modifying it to work with current Python and sympy version, at least from a \"no-static-warnings-in-Spyder\"-perspective.\r\n\r\n#### Release Notes\r\n\r\n<!-- Write the release notes for this release below. See\r\nhttps://github.com/sympy/sympy/wiki/Writing-Release-Notes for more information\r\non how to write release notes. The bot will check your release notes\r\nautomatically to see if they are formatted correctly. -->\r\n\r\n<!-- BEGIN RELEASE NOTES -->\r\nNO ENTRY\r\n<!-- END RELEASE NOTES -->\r\n\nMathML presentation printing of multiple derivatives messed up\nCurrently, the MathML presentation printed version of the expression `Derivative(f(x, y, z), x, z, x, z, z, y)`\r\nlooks like:\r\n![image](https://user-images.githubusercontent.com/8114497/52842849-a3d64380-3100-11e9-845f-8abacba54635.png)\r\n\r\nwhile a proper rending would be more along the lines of the LaTeX equivalent:\r\n![image](https://user-images.githubusercontent.com/8114497/52843456-78545880-3102-11e9-9d73-1d2d515a888c.png)\r\n\r\nHence, the `_print_Derivative` method should be improved, first and foremost to print all the derivative variables on a single line and to get the correct power in the numerator.\r\n\r\nIt is also preferred if the actual function ends up on a separate line (not sure if there is some logic to tell when this should or should not happen).\r\n\r\nIf possible, the logic to group adjacent identical terms can be applied, see the discussion and code in #15975 which gives an idea of how to implement it.\r\n\n",
  "hints_text": "\n\n",
  "created_at": "2019-02-16T11:52:43Z",
  "version": "1.4",
  "FAIL_TO_PASS": "[\"test_presentation_mathml_functions\", \"test_print_derivative\"]",
  "PASS_TO_PASS": "[\"test_content_mathml_Rational\", \"test_content_mathml_add\", \"test_content_mathml_constants\", \"test_content_mathml_core\", \"test_content_mathml_functions\", \"test_content_mathml_greek\", \"test_content_mathml_integrals\", \"test_content_mathml_limits\", \"test_content_mathml_matrices\", \"test_content_mathml_order\", \"test_content_mathml_relational\", \"test_content_mathml_sums\", \"test_content_mathml_trig\", \"test_content_mathml_tuples\", \"test_content_printmethod\", \"test_content_settings\", \"test_content_symbol\", \"test_mathml_printer\", \"test_presentation_mathml_Rational\", \"test_presentation_mathml_add\", \"test_presentation_mathml_constants\", \"test_presentation_mathml_core\", \"test_presentation_mathml_greek\", \"test_presentation_mathml_integrals\", \"test_presentation_mathml_limits\", \"test_presentation_mathml_matrices\", \"test_presentation_mathml_order\", \"test_presentation_mathml_relational\", \"test_presentation_mathml_sums\", \"test_presentation_mathml_trig\", \"test_presentation_printmethod\", \"test_presentation_settings\", \"test_presentation_symbol\", \"test_print_basic\", \"test_print_matrix_symbol\", \"test_root_notation_print\", \"test_toprettyxml_hooking\"]",
  "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004",
  "patch_files": [
    "sympy/printing/mathml.py"
  ],
  "test_patch_files": [
    "sympy/printing/tests/test_mathml.py"
  ],
  "patch_diff_details": {
    "sympy/printing/mathml.py": {
      "diffs": [
        {
          "start_line_old": 426,
          "end_line_old": 428,
          "file_pos": 1,
          "file_context_length": 7456,
          "closest_snippet_id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Integral_MathMLPresentationPrinter._print_Integral.12.1",
          "closest_snippet_line_distance": 250,
          "pos": 7,
          "context_length": 3347
        },
        {
          "start_line_old": 842,
          "end_line_old": 874,
          "file_pos": 1,
          "file_context_length": 7456,
          "pos": 1,
          "context_length": 305
        }
      ]
    }
  },
  "vectors": 7955,
  "snippets": [
    {
      "position": 1,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Number_MathMLPresentationPrinter._print_Derivative.10.1",
      "distance": 0.7759411334991455,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 836,
      "end_line": 874,
      "tokens": 305,
      "context_length": 305,
      "file_pos": 1
    },
    {
      "position": 2,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_Derivative_PrettyPrinter._print_Derivative.12.1",
      "distance": 0.8381043672561646,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 325,
      "end_line": 360,
      "tokens": 287,
      "context_length": 592
    },
    {
      "position": 3,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_PartialDerivative_PrettyPrinter._print_PartialDerivative.10.1",
      "distance": 0.8674780130386353,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 1100,
      "end_line": 1127,
      "tokens": 212,
      "context_length": 804
    },
    {
      "position": 4,
      "id": "/tmp/repos/sympy/sympy/printing/printer.py_1_2",
      "distance": 0.8737884759902954,
      "file_path": "sympy/printing/printer.py",
      "start_line": 1,
      "end_line": 173,
      "tokens": 1419,
      "context_length": 2223
    },
    {
      "position": 5,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Mul_MathMLPresentationPrinter._print_Mul",
      "distance": 0.8846431970596313,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 523,
      "end_line": 568,
      "tokens": 336,
      "context_length": 2559,
      "file_pos": 3
    },
    {
      "position": 6,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Integral_MathMLPresentationPrinter._print_Integral.12.1",
      "distance": 0.8968486785888672,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 676,
      "end_line": 712,
      "tokens": 330,
      "context_length": 2889,
      "file_pos": 3
    },
    {
      "position": 7,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_Number_MathMLContentPrinter._print_int.3.1",
      "distance": 0.899370014667511,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 415,
      "end_line": 474,
      "tokens": 458,
      "context_length": 3347,
      "file_pos": 3
    },
    {
      "position": 8,
      "id": "/tmp/repos/sympy/sympy/physics/vector/printing.py_VectorLatexPrinter._print_Derivative_VectorLatexPrinter._print_Derivative.20.1",
      "distance": 0.9014070630073547,
      "file_path": "sympy/physics/vector/printing.py",
      "start_line": 123,
      "end_line": 157,
      "tokens": 352,
      "context_length": 3699
    },
    {
      "position": 9,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Add_MathMLPresentationPrinter._print_Add.5.1",
      "distance": 0.901709794998169,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 570,
      "end_line": 588,
      "tokens": 160,
      "context_length": 3859,
      "file_pos": 4
    },
    {
      "position": 10,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Function_MathMLPresentationPrinter._print_int.3.1",
      "distance": 0.90482097864151,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 876,
      "end_line": 919,
      "tokens": 361,
      "context_length": 4220,
      "file_pos": 4
    },
    {
      "position": 11,
      "id": "/tmp/repos/sympy/sympy/printing/mathematica.py_MCodePrinter._print_MutableSparseMatrix_MCodePrinter._print_Derivative.3.1",
      "distance": 0.9110559225082397,
      "file_path": "sympy/printing/mathematica.py",
      "start_line": 121,
      "end_line": 147,
      "tokens": 330,
      "context_length": 4550
    },
    {
      "position": 12,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPrinterBase.apply_patch_MathMLPrinterBase.restore_patch.Text.writexml.1",
      "distance": 0.9169493913650513,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 67,
      "end_line": 116,
      "tokens": 503,
      "context_length": 5053,
      "file_pos": 5
    },
    {
      "position": 13,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_catalan_LatexPrinter._print_DMP.2.1",
      "distance": 0.9177470803260803,
      "file_path": "sympy/printing/latex.py",
      "start_line": 2042,
      "end_line": 2085,
      "tokens": 771,
      "context_length": 5824
    },
    {
      "position": 14,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_Add_MathMLContentPrinter._print_Add.9.1",
      "distance": 0.9197127819061279,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 204,
      "end_line": 230,
      "tokens": 232,
      "context_length": 6056,
      "file_pos": 6
    },
    {
      "position": 15,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_FreeModule_LatexPrinter._print_Tr.contents.2.1",
      "distance": 0.9241437315940857,
      "file_path": "sympy/printing/latex.py",
      "start_line": 2152,
      "end_line": 2216,
      "tokens": 760,
      "context_length": 6816
    },
    {
      "position": 16,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_Pow_LatexPrinter._print_Pow.2.7.1.2.6.1",
      "distance": 0.9264711737632751,
      "file_path": "sympy/printing/latex.py",
      "start_line": 510,
      "end_line": 560,
      "tokens": 595,
      "context_length": 7411
    },
    {
      "position": 17,
      "id": "/tmp/repos/sympy/sympy/core/function.py_Derivative.__new___Derivative.__new__.26",
      "distance": 0.9276328086853027,
      "file_path": "sympy/core/function.py",
      "start_line": 1165,
      "end_line": 1262,
      "tokens": 802,
      "context_length": 8213
    },
    {
      "position": 18,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_Cross_LatexPrinter._print_Gradient.2.1",
      "distance": 0.9295907020568848,
      "file_path": "sympy/printing/latex.py",
      "start_line": 386,
      "end_line": 408,
      "tokens": 268,
      "context_length": 8481
    },
    {
      "position": 19,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_Mul_MathMLContentPrinter._print_Mul.12.1",
      "distance": 0.9315950870513916,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 169,
      "end_line": 202,
      "tokens": 260,
      "context_length": 8741,
      "file_pos": 7
    },
    {
      "position": 20,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_And_LatexPrinter._print_elliptic_f.2.2.1.1",
      "distance": 0.9334800243377686,
      "file_path": "sympy/printing/latex.py",
      "start_line": 923,
      "end_line": 978,
      "tokens": 577,
      "context_length": 9318
    },
    {
      "position": 21,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_Indexed_LatexPrinter._print_Derivative.6.1",
      "distance": 0.9343351125717163,
      "file_path": "sympy/printing/latex.py",
      "start_line": 633,
      "end_line": 662,
      "tokens": 272,
      "context_length": 9590
    },
    {
      "position": 22,
      "id": "/tmp/repos/sympy/sympy/core/function.py_Derivative.__new__.27_Derivative.__new__.unhandled.1",
      "distance": 0.9359115362167358,
      "file_path": "sympy/core/function.py",
      "start_line": 1263,
      "end_line": 1341,
      "tokens": 684,
      "context_length": 10274
    },
    {
      "position": 23,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_legendre_LatexPrinter._print_Rational.1.6.1.1",
      "distance": 0.9367881417274475,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1287,
      "end_line": 1347,
      "tokens": 753,
      "context_length": 11027
    },
    {
      "position": 24,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_beta_LatexPrinter._print_factorial.2.2.1.1",
      "distance": 0.9371167421340942,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1004,
      "end_line": 1088,
      "tokens": 809,
      "context_length": 11836
    },
    {
      "position": 25,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Sum_MathMLPresentationPrinter._print_Sum.20.1",
      "distance": 0.9392222166061401,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 714,
      "end_line": 743,
      "tokens": 239,
      "context_length": 12075,
      "file_pos": 7
    },
    {
      "position": 26,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_ImaginaryUnit_MathMLPresentationPrinter._print_Negative_Infinity.7.1",
      "distance": 0.9414247274398804,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 640,
      "end_line": 674,
      "tokens": 302,
      "context_length": 12377,
      "file_pos": 7
    },
    {
      "position": 27,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_latex.1_latex.1",
      "distance": 0.9415959119796753,
      "file_path": "sympy/printing/latex.py",
      "start_line": 2299,
      "end_line": 2467,
      "tokens": 2345,
      "context_length": 14722
    },
    {
      "position": 28,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Symbol.4_MathMLPresentationPrinter._print_Symbol.13.1",
      "distance": 0.9481645822525024,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 768,
      "end_line": 802,
      "tokens": 291,
      "context_length": 15013,
      "file_pos": 7
    },
    {
      "position": 29,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_Limit_MathMLContentPrinter._print_Negative_Infinity.4.1",
      "distance": 0.9489864110946655,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 259,
      "end_line": 299,
      "tokens": 345,
      "context_length": 15358,
      "file_pos": 7
    },
    {
      "position": 30,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_MatrixBase_MathMLPresentationPrinter._print_Rational.9.1",
      "distance": 0.9507498145103455,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 590,
      "end_line": 616,
      "tokens": 218,
      "context_length": 15576,
      "file_pos": 7
    },
    {
      "position": 31,
      "id": "/tmp/repos/sympy/sympy/core/function.py_Derivative.__new__.44_Derivative.canonical.1.1",
      "distance": 0.951140820980072,
      "file_path": "sympy/core/function.py",
      "start_line": 1342,
      "end_line": 1416,
      "tokens": 615,
      "context_length": 16191
    },
    {
      "position": 32,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Limit_MathMLPresentationPrinter._print_Limit.17.1",
      "distance": 0.9518054723739624,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 618,
      "end_line": 638,
      "tokens": 172,
      "context_length": 16363,
      "file_pos": 7
    },
    {
      "position": 33,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_Integral_MathMLContentPrinter._print_Integral",
      "distance": 0.9528063535690308,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 301,
      "end_line": 328,
      "tokens": 259,
      "context_length": 16622,
      "file_pos": 7
    },
    {
      "position": 34,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_1_MathMLPrinterBase.doprint.6.1",
      "distance": 0.9530695676803589,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 1,
      "end_line": 65,
      "tokens": 467,
      "context_length": 17089,
      "file_pos": 7
    },
    {
      "position": 35,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_FunctionClass_LatexPrinter._print_im.2.1",
      "distance": 0.9566307067871094,
      "file_path": "sympy/printing/latex.py",
      "start_line": 822,
      "end_line": 895,
      "tokens": 680,
      "context_length": 17769
    },
    {
      "position": 36,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_1_27",
      "distance": 0.9567629098892212,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1,
      "end_line": 81,
      "tokens": 717,
      "context_length": 18486
    },
    {
      "position": 37,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_Mul_LatexPrinter._print_Mul.convert.1.2.6.1",
      "distance": 0.9581478834152222,
      "file_path": "sympy/printing/latex.py",
      "start_line": 410,
      "end_line": 459,
      "tokens": 383,
      "context_length": 18869
    },
    {
      "position": 38,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_Symbol.3_MathMLContentPrinter._print_Symbol.12.1",
      "distance": 0.9581637382507324,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 355,
      "end_line": 389,
      "tokens": 298,
      "context_length": 19167,
      "file_pos": 7
    },
    {
      "position": 39,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_meijerg_PrettyPrinter._print_meijerg.v.45.1",
      "distance": 0.9594089388847351,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 1257,
      "end_line": 1339,
      "tokens": 773,
      "context_length": 19940
    },
    {
      "position": 40,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_Mul.10_LatexPrinter._print_Mul.12.1",
      "distance": 0.9597675204277039,
      "file_path": "sympy/printing/latex.py",
      "start_line": 461,
      "end_line": 508,
      "tokens": 529,
      "context_length": 20469
    },
    {
      "position": 41,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_DMF_LatexPrinter._print_Diagram.4.1",
      "distance": 0.9611386060714722,
      "file_path": "sympy/printing/latex.py",
      "start_line": 2087,
      "end_line": 2132,
      "tokens": 407,
      "context_length": 20876
    },
    {
      "position": 42,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_Gradient_PrettyPrinter._print_factorial2.6.1",
      "distance": 0.963485598564148,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 136,
      "end_line": 193,
      "tokens": 559,
      "context_length": 21435
    },
    {
      "position": 43,
      "id": "/tmp/repos/sympy/sympy/core/function.py_Derivative._eval_subs_Derivative._eval_subs.4.13.1",
      "distance": 0.9651508927345276,
      "file_path": "sympy/core/function.py",
      "start_line": 1604,
      "end_line": 1696,
      "tokens": 1003,
      "context_length": 22438
    },
    {
      "position": 44,
      "id": "/tmp/repos/sympy/sympy/core/function.py_Derivative.doit_Derivative.doit_numerically.7.1",
      "distance": 0.9685080051422119,
      "file_path": "sympy/core/function.py",
      "start_line": 1538,
      "end_line": 1565,
      "tokens": 289,
      "context_length": 22727
    },
    {
      "position": 45,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_dirichlet_eta_LatexPrinter._print_chebyshevu.4.1",
      "distance": 0.969433605670929,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1231,
      "end_line": 1285,
      "tokens": 730,
      "context_length": 23457
    },
    {
      "position": 46,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._hprint_vec_LatexPrinter._print_airybiprime.1.1",
      "distance": 0.9737759232521057,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1140,
      "end_line": 1205,
      "tokens": 672,
      "context_length": 24129
    },
    {
      "position": 47,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_Symbol_MathMLPresentationPrinter._print_Symbol.join.1.4.3.1",
      "distance": 0.9755347967147827,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 745,
      "end_line": 766,
      "tokens": 174,
      "context_length": 24303,
      "file_pos": 7
    },
    {
      "position": 48,
      "id": "/tmp/repos/sympy/sympy/physics/vector/printing.py_init_vprinting_",
      "distance": 0.9758577942848206,
      "file_path": "sympy/physics/vector/printing.py",
      "start_line": 379,
      "end_line": 419,
      "tokens": 338,
      "context_length": 24641
    },
    {
      "position": 49,
      "id": "/tmp/repos/sympy/sympy/printing/mathematica.py_1_known_functions.1",
      "distance": 0.9773668646812439,
      "file_path": "sympy/printing/mathematica.py",
      "start_line": 1,
      "end_line": 36,
      "tokens": 442,
      "context_length": 25083
    },
    {
      "position": 50,
      "id": "/tmp/repos/sympy/sympy/plotting/experimental_lambdify.py_1_55",
      "distance": 0.9788907766342163,
      "file_path": "sympy/plotting/experimental_lambdify.py",
      "start_line": 1,
      "end_line": 76,
      "tokens": 865,
      "context_length": 25948
    },
    {
      "position": 51,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_Function_LatexPrinter._print_Function.3.2.15.1",
      "distance": 0.980207622051239,
      "file_path": "sympy/printing/latex.py",
      "start_line": 736,
      "end_line": 803,
      "tokens": 658,
      "context_length": 26606
    },
    {
      "position": 52,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter_MathMLPresentationPrinter.mathml_tag.6.1",
      "distance": 0.9822854995727539,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 477,
      "end_line": 521,
      "tokens": 353,
      "context_length": 26959,
      "file_pos": 8
    },
    {
      "position": 53,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_Tensor_LatexPrinter._print_Dict.1.1",
      "distance": 0.9824884533882141,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1647,
      "end_line": 1712,
      "tokens": 561,
      "context_length": 27520
    },
    {
      "position": 54,
      "id": "/tmp/repos/sympy/sympy/printing/printer.py_Printer._print_",
      "distance": 0.9831027984619141,
      "file_path": "sympy/printing/printer.py",
      "start_line": 251,
      "end_line": 301,
      "tokens": 507,
      "context_length": 28027
    },
    {
      "position": 55,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_Sum_MathMLContentPrinter._print_Symbol.join.1.4.3.1",
      "distance": 0.9838751554489136,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 330,
      "end_line": 353,
      "tokens": 205,
      "context_length": 28232,
      "file_pos": 8
    },
    {
      "position": 56,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLPresentationPrinter._print_MatrixSymbol_MathMLPresentationPrinter._print_Pow.2.13.1",
      "distance": 0.9860273599624634,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 804,
      "end_line": 834,
      "tokens": 284,
      "context_length": 28516,
      "file_pos": 8
    },
    {
      "position": 57,
      "id": "/tmp/repos/sympy/sympy/printing/theanocode.py_TheanoPrinter._print_Symbol_TheanoPrinter._print_Pi.1.1",
      "distance": 0.9865310788154602,
      "file_path": "sympy/printing/theanocode.py",
      "start_line": 139,
      "end_line": 215,
      "tokens": 745,
      "context_length": 29261
    },
    {
      "position": 58,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_Curl_PrettyPrinter._print_Divergence.7.1",
      "distance": 0.9888067245483398,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 106,
      "end_line": 122,
      "tokens": 199,
      "context_length": 29460
    },
    {
      "position": 59,
      "id": "/tmp/repos/sympy/sympy/printing/tensorflow.py_TensorflowPrinter._print_Derivative_TensorflowPrinter._print_Derivative.4.1",
      "distance": 0.9890676736831665,
      "file_path": "sympy/printing/tensorflow.py",
      "start_line": 88,
      "end_line": 100,
      "tokens": 125,
      "context_length": 29585
    },
    {
      "position": 60,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_ComplexRegion_LatexPrinter._print_PolynomialRingBase.5.1",
      "distance": 0.9898109436035156,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1892,
      "end_line": 1939,
      "tokens": 457,
      "context_length": 30042
    },
    {
      "position": 61,
      "id": "/tmp/repos/sympy/sympy/printing/pycode.py_AbstractPythonCodePrinter._print_ITE_AbstractPythonCodePrinter._print_NoneToken.1.1",
      "distance": 0.9902523756027222,
      "file_path": "sympy/printing/pycode.py",
      "start_line": 268,
      "end_line": 347,
      "tokens": 719,
      "context_length": 30761
    },
    {
      "position": 62,
      "id": "/tmp/repos/sympy/sympy/physics/vector/printing.py_1___all__.1",
      "distance": 0.9911268353462219,
      "file_path": "sympy/physics/vector/printing.py",
      "start_line": 1,
      "end_line": 14,
      "tokens": 142,
      "context_length": 30903
    },
    {
      "position": 63,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_MatrixBase_MathMLContentPrinter._print_Rational.12.1",
      "distance": 0.9916300177574158,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 232,
      "end_line": 257,
      "tokens": 211,
      "context_length": 31114,
      "file_pos": 11
    },
    {
      "position": 64,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_modifier_dict__between_two_numbers_p.1",
      "distance": 0.9924601316452026,
      "file_path": "sympy/printing/latex.py",
      "start_line": 82,
      "end_line": 117,
      "tokens": 491,
      "context_length": 31605
    },
    {
      "position": 65,
      "id": "/tmp/repos/sympy/sympy/printing/latex.py_LatexPrinter._print_SeqPer_LatexPrinter._print_ImageSet.3.1",
      "distance": 0.9939011335372925,
      "file_path": "sympy/printing/latex.py",
      "start_line": 1815,
      "end_line": 1877,
      "tokens": 542,
      "context_length": 32147
    },
    {
      "position": 66,
      "id": "/tmp/repos/sympy/sympy/printing/mathml.py_MathMLContentPrinter._print_MatrixSymbol_MathMLContentPrinter._print_Pow.2.11.1",
      "distance": 0.9950472712516785,
      "file_path": "sympy/printing/mathml.py",
      "start_line": 391,
      "end_line": 413,
      "tokens": 222,
      "context_length": 32369,
      "file_pos": 11
    },
    {
      "position": 67,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_hyper_PrettyPrinter._print_hyper.ap.27.1",
      "distance": 0.9959864616394043,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 1209,
      "end_line": 1255,
      "tokens": 403,
      "context_length": 32772
    },
    {
      "position": 68,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_Integral_PrettyPrinter._print_Integral.16.1",
      "distance": 0.9965605139732361,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 398,
      "end_line": 472,
      "tokens": 607,
      "context_length": 33379
    },
    {
      "position": 69,
      "id": "/tmp/repos/sympy/sympy/integrals/prde.py_is_deriv_k.2_is_deriv_k.12.5.1.2.9.1",
      "distance": 0.9994636178016663,
      "file_path": "sympy/integrals/prde.py",
      "start_line": 986,
      "end_line": 1040,
      "tokens": 675,
      "context_length": 34054
    },
    {
      "position": 70,
      "id": "/tmp/repos/sympy/sympy/printing/pretty/pretty.py_PrettyPrinter._print_MatrixBase_PrettyPrinter._print_Trace.5.1",
      "distance": 0.9998375177383423,
      "file_path": "sympy/printing/pretty/pretty.py",
      "start_line": 727,
      "end_line": 752,
      "tokens": 284,
      "context_length": 34338
    },
    {
      "position": 71,
      "id": "/tmp/repos/sympy/sympy/solvers/ode.py_classify_ode.ics_classify_ode.46.2.r_20.1",
      "distance": 1.000967264175415,
      "file_path": "sympy/solvers/ode.py",
      "start_line": 937,
      "end_line": 1163,
      "tokens": 2560,
      "context_length": 36898
    }
  ],
  "files": [
    {
      "file_path": "sympy/printing/mathml.py",
      "position": 1,
      "tokens": 7456,
      "context_length": 7456
    },
    {
      "file_path": "sympy/printing/pretty/pretty.py",
      "position": 2,
      "tokens": 22032,
      "context_length": 29488
    },
    {
      "file_path": "sympy/printing/printer.py",
      "position": 3,
      "tokens": 2383,
      "context_length": 31871
    },
    {
      "file_path": "sympy/physics/vector/printing.py",
      "position": 4,
      "tokens": 3348,
      "context_length": 35219
    },
    {
      "file_path": "sympy/printing/mathematica.py",
      "position": 5,
      "tokens": 1518,
      "context_length": 36737
    },
    {
      "file_path": "sympy/printing/latex.py",
      "position": 6,
      "tokens": 24617,
      "context_length": 61354
    },
    {
      "file_path": "sympy/core/function.py",
      "position": 7,
      "tokens": 26176,
      "context_length": 87530
    },
    {
      "file_path": "sympy/plotting/experimental_lambdify.py",
      "position": 8,
      "tokens": 5866,
      "context_length": 93396
    },
    {
      "file_path": "sympy/printing/theanocode.py",
      "position": 9,
      "tokens": 4167,
      "context_length": 97563
    },
    {
      "file_path": "sympy/printing/tensorflow.py",
      "position": 10,
      "tokens": 2099,
      "context_length": 99662
    },
    {
      "file_path": "sympy/printing/pycode.py",
      "position": 11,
      "tokens": 6566,
      "context_length": 106228
    },
    {
      "file_path": "sympy/integrals/prde.py",
      "position": 12,
      "tokens": 15931,
      "context_length": 122159
    },
    {
      "file_path": "sympy/solvers/ode.py",
      "position": 13,
      "tokens": 104587,
      "context_length": 226746
    }
  ]
}