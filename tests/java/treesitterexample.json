{
  "code": "package com.treesitter.example;",
  "type": "module",
  "tree_sitter_type": "program",
  "pre_code": "",
  "children": [
    {
      "code": "import java.util.Random;",
      "type": "none",
      "tree_sitter_type": "import_declaration",
      "pre_code": "\n\n",
      "children": []
    },
    {
      "code": "public class TreeSitterExample ",
      "type": "class",
      "tree_sitter_type": "class_declaration",
      "pre_code": "\n\n",
      "children": [
        {
          "code": "{",
          "type": "block_delimiter",
          "tree_sitter_type": "{",
          "pre_code": "",
          "children": []
        },
        {
          "code": "int myVariable = 10;",
          "type": "none",
          "tree_sitter_type": "field_declaration",
          "pre_code": "\n\n    ",
          "children": []
        },
        {
          "code": "public TreeSitterExample() ",
          "type": "function",
          "tree_sitter_type": "constructor_declaration",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": "{",
              "type": "block_delimiter",
              "tree_sitter_type": "{",
              "pre_code": "",
              "children": []
            },
            {
              "code": "myVariable = 20;",
              "type": "none",
              "tree_sitter_type": "expression_statement",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "}",
              "type": "block_delimiter",
              "tree_sitter_type": "}",
              "pre_code": "\n    ",
              "children": []
            }
          ]
        },
        {
          "code": "public void myMethod(int parameter) ",
          "type": "function",
          "tree_sitter_type": "method_declaration",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": "{",
              "type": "block_delimiter",
              "tree_sitter_type": "{",
              "pre_code": "",
              "children": []
            },
            {
              "code": "myVariable = parameter;",
              "type": "none",
              "tree_sitter_type": "expression_statement",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "if (parameter > 5) ",
              "type": "statement",
              "tree_sitter_type": "if_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": "{",
                  "type": "block_delimiter",
                  "tree_sitter_type": "{",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "System.out.println(\"Parameter is greater than 5\");",
                  "type": "none",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "}",
                  "type": "block_delimiter",
                  "tree_sitter_type": "}",
                  "pre_code": "\n        ",
                  "children": []
                }
              ]
            },
            {
              "code": "for (int i = 0; i < 10; i++) ",
              "type": "statement",
              "tree_sitter_type": "for_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": "{",
                  "type": "block_delimiter",
                  "tree_sitter_type": "{",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "System.out.println(\"For loop iteration: \" + i);",
                  "type": "none",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "}",
                  "type": "block_delimiter",
                  "tree_sitter_type": "}",
                  "pre_code": "\n        ",
                  "children": []
                }
              ]
            },
            {
              "code": "while (parameter < 10) ",
              "type": "statement",
              "tree_sitter_type": "while_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": "{",
                  "type": "block_delimiter",
                  "tree_sitter_type": "{",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "System.out.println(\"While loop, parameter: \" + parameter);",
                  "type": "none",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "parameter++;",
                  "type": "none",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "}",
                  "type": "block_delimiter",
                  "tree_sitter_type": "}",
                  "pre_code": "\n        ",
                  "children": []
                }
              ]
            },
            {
              "code": "do ",
              "type": "statement",
              "tree_sitter_type": "do_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": "{",
                  "type": "block_delimiter",
                  "tree_sitter_type": "{",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "System.out.println(\"Do-while loop, parameter: \" + parameter);",
                  "type": "none",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "parameter--;",
                  "type": "none",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "}",
                  "type": "block_delimiter",
                  "tree_sitter_type": "}",
                  "pre_code": "\n        ",
                  "children": []
                },
                {
                  "code": "while",
                  "type": "none",
                  "tree_sitter_type": "while",
                  "pre_code": " ",
                  "children": []
                },
                {
                  "code": "(parameter > 0)",
                  "type": "none",
                  "tree_sitter_type": "parenthesized_expression",
                  "pre_code": " ",
                  "children": []
                },
                {
                  "code": ";",
                  "type": "none",
                  "tree_sitter_type": ";",
                  "pre_code": "",
                  "children": []
                }
              ]
            },
            {
              "code": "switch (parameter) ",
              "type": "none",
              "tree_sitter_type": "switch_expression",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": "{",
                  "type": "block_delimiter",
                  "tree_sitter_type": "{",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "case 1:\n                System.out.println(\"Parameter is 1\");\n                break;",
                  "type": "none",
                  "tree_sitter_type": "switch_block_statement_group",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "default:\n                System.out.println(\"Parameter is default\");\n                break;",
                  "type": "none",
                  "tree_sitter_type": "switch_block_statement_group",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "}",
                  "type": "block_delimiter",
                  "tree_sitter_type": "}",
                  "pre_code": "\n        ",
                  "children": []
                }
              ]
            },
            {
              "code": "try ",
              "type": "none",
              "tree_sitter_type": "try_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": "{",
                  "type": "block_delimiter",
                  "tree_sitter_type": "{",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "Random random = new Random();",
                  "type": "none",
                  "tree_sitter_type": "local_variable_declaration",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "if (random.nextBoolean()) ",
                  "type": "statement",
                  "tree_sitter_type": "if_statement",
                  "pre_code": "\n            ",
                  "children": [
                    {
                      "code": "{",
                      "type": "block_delimiter",
                      "tree_sitter_type": "{",
                      "pre_code": "",
                      "children": []
                    },
                    {
                      "code": "throw new Exception(\"Random exception\");",
                      "type": "none",
                      "tree_sitter_type": "throw_statement",
                      "pre_code": "\n                ",
                      "children": []
                    },
                    {
                      "code": "}",
                      "type": "block_delimiter",
                      "tree_sitter_type": "}",
                      "pre_code": "\n            ",
                      "children": []
                    }
                  ]
                },
                {
                  "code": "}",
                  "type": "block_delimiter",
                  "tree_sitter_type": "}",
                  "pre_code": "\n        ",
                  "children": []
                },
                {
                  "code": "catch (Exception e) ",
                  "type": "none",
                  "tree_sitter_type": "catch_clause",
                  "pre_code": " ",
                  "children": [
                    {
                      "code": "{",
                      "type": "block_delimiter",
                      "tree_sitter_type": "{",
                      "pre_code": "",
                      "children": []
                    },
                    {
                      "code": "System.out.println(\"Caught exception: \" + e.getMessage());",
                      "type": "none",
                      "tree_sitter_type": "expression_statement",
                      "pre_code": "\n            ",
                      "children": []
                    },
                    {
                      "code": "}",
                      "type": "block_delimiter",
                      "tree_sitter_type": "}",
                      "pre_code": "\n        ",
                      "children": []
                    }
                  ]
                },
                {
                  "code": "finally ",
                  "type": "none",
                  "tree_sitter_type": "finally_clause",
                  "pre_code": " ",
                  "children": [
                    {
                      "code": "{",
                      "type": "block_delimiter",
                      "tree_sitter_type": "{",
                      "pre_code": "",
                      "children": []
                    },
                    {
                      "code": "System.out.println(\"Finally block executed\");",
                      "type": "none",
                      "tree_sitter_type": "expression_statement",
                      "pre_code": "\n            ",
                      "children": []
                    },
                    {
                      "code": "}",
                      "type": "block_delimiter",
                      "tree_sitter_type": "}",
                      "pre_code": "\n        ",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "code": "}",
              "type": "block_delimiter",
              "tree_sitter_type": "}",
              "pre_code": "\n    ",
              "children": []
            }
          ]
        },
        {
          "code": "interface MathOperation ",
          "type": "class",
          "tree_sitter_type": "interface_declaration",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": "{",
              "type": "block_delimiter",
              "tree_sitter_type": "{",
              "pre_code": "",
              "children": []
            },
            {
              "code": "int operation(int a, int b);",
              "type": "function",
              "tree_sitter_type": "method_declaration",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "}",
              "type": "block_delimiter",
              "tree_sitter_type": "}",
              "pre_code": "\n    ",
              "children": []
            }
          ]
        },
        {
          "code": "MathOperation addition = (a, b) -> {\n        return a + b;\n    };",
          "type": "none",
          "tree_sitter_type": "field_declaration",
          "pre_code": "\n\n    ",
          "children": []
        },
        {
          "code": "public enum Colors ",
          "type": "class",
          "tree_sitter_type": "enum_declaration",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": "{",
              "type": "block_delimiter",
              "tree_sitter_type": "{",
              "pre_code": "",
              "children": []
            },
            {
              "code": "RED",
              "type": "none",
              "tree_sitter_type": "enum_constant",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": ",",
              "type": "none",
              "tree_sitter_type": ",",
              "pre_code": "",
              "children": []
            },
            {
              "code": "GREEN",
              "type": "none",
              "tree_sitter_type": "enum_constant",
              "pre_code": " ",
              "children": []
            },
            {
              "code": ",",
              "type": "none",
              "tree_sitter_type": ",",
              "pre_code": "",
              "children": []
            },
            {
              "code": "BLUE",
              "type": "none",
              "tree_sitter_type": "enum_constant",
              "pre_code": " ",
              "children": []
            },
            {
              "code": ";",
              "type": "none",
              "tree_sitter_type": "enum_body_declarations",
              "pre_code": "",
              "children": []
            },
            {
              "code": "}",
              "type": "block_delimiter",
              "tree_sitter_type": "}",
              "pre_code": "\n    ",
              "children": []
            }
          ]
        },
        {
          "code": "public @interface MyAnnotation ",
          "type": "class",
          "tree_sitter_type": "annotation_type_declaration",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": "{",
              "type": "block_delimiter",
              "tree_sitter_type": "{",
              "pre_code": "",
              "children": []
            },
            {
              "code": "String value() default \"\";",
              "type": "none",
              "tree_sitter_type": "annotation_type_element_declaration",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "}",
              "type": "block_delimiter",
              "tree_sitter_type": "}",
              "pre_code": "\n    ",
              "children": []
            }
          ]
        },
        {
          "code": "public interface MyInterface ",
          "type": "class",
          "tree_sitter_type": "interface_declaration",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": "{",
              "type": "block_delimiter",
              "tree_sitter_type": "{",
              "pre_code": "",
              "children": []
            },
            {
              "code": "void myInterfaceMethod();",
              "type": "function",
              "tree_sitter_type": "method_declaration",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "}",
              "type": "block_delimiter",
              "tree_sitter_type": "}",
              "pre_code": "\n    ",
              "children": []
            }
          ]
        },
        {
          "code": "public static void main(String[] args) ",
          "type": "function",
          "tree_sitter_type": "method_declaration",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": "{",
              "type": "block_delimiter",
              "tree_sitter_type": "{",
              "pre_code": "",
              "children": []
            },
            {
              "code": "TreeSitterExample example = new TreeSitterExample();",
              "type": "none",
              "tree_sitter_type": "local_variable_declaration",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "example.myMethod(3);",
              "type": "none",
              "tree_sitter_type": "expression_statement",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "}",
              "type": "block_delimiter",
              "tree_sitter_type": "}",
              "pre_code": "\n    ",
              "children": []
            }
          ]
        },
        {
          "code": "}",
          "type": "block_delimiter",
          "tree_sitter_type": "}",
          "pre_code": "\n",
          "children": []
        }
      ]
    }
  ]
}