{
  "code": "",
  "type": "module",
  "tree_sitter_type": "module",
  "pre_code": "",
  "children": [
    {
      "code": "class TreeSitterExample",
      "type": "class",
      "tree_sitter_type": "class_definition",
      "pre_code": "",
      "children": [
        {
          "code": ":",
          "type": "block_delimiter",
          "tree_sitter_type": ":",
          "pre_code": "",
          "children": []
        },
        {
          "code": "my_variable = 10",
          "type": "code",
          "tree_sitter_type": "expression_statement",
          "pre_code": "\n\n    ",
          "children": []
        },
        {
          "code": "def __init__(self)",
          "type": "function",
          "tree_sitter_type": "function_definition",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": ":",
              "type": "block_delimiter",
              "tree_sitter_type": ":",
              "pre_code": "",
              "children": []
            },
            {
              "code": "self.instance_variable = 20",
              "type": "code",
              "tree_sitter_type": "expression_statement",
              "pre_code": "\n        ",
              "children": []
            }
          ]
        },
        {
          "code": "def my_method(self, parameter)",
          "type": "function",
          "tree_sitter_type": "function_definition",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": ":",
              "type": "block_delimiter",
              "tree_sitter_type": ":",
              "pre_code": "",
              "children": []
            },
            {
              "code": "self.my_variable = parameter",
              "type": "code",
              "tree_sitter_type": "expression_statement",
              "pre_code": "\n        ",
              "children": []
            },
            {
              "code": "if parameter > 5",
              "type": "code",
              "tree_sitter_type": "if_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": ":",
                  "type": "block_delimiter",
                  "tree_sitter_type": ":",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "print(\"Parameter is greater than 5\")",
                  "type": "code",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                }
              ]
            },
            {
              "code": "for i in range(10)",
              "type": "code",
              "tree_sitter_type": "for_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": ":",
                  "type": "block_delimiter",
                  "tree_sitter_type": ":",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "print(f\"For loop iteration: {i}\")",
                  "type": "code",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                }
              ]
            },
            {
              "code": "while parameter < 10",
              "type": "code",
              "tree_sitter_type": "while_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": ":",
                  "type": "block_delimiter",
                  "tree_sitter_type": ":",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "print(f\"While loop, parameter: {parameter}\")",
                  "type": "code",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                },
                {
                  "code": "parameter += 1",
                  "type": "code",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                }
              ]
            },
            {
              "code": "try",
              "type": "code",
              "tree_sitter_type": "try_statement",
              "pre_code": "\n\n        ",
              "children": [
                {
                  "code": ":",
                  "type": "block_delimiter",
                  "tree_sitter_type": ":",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "if parameter == 8",
                  "type": "code",
                  "tree_sitter_type": "if_statement",
                  "pre_code": "\n            ",
                  "children": [
                    {
                      "code": ":",
                      "type": "block_delimiter",
                      "tree_sitter_type": ":",
                      "pre_code": "",
                      "children": []
                    },
                    {
                      "code": "raise ValueError(\"Random exception\")",
                      "type": "code",
                      "tree_sitter_type": "raise_statement",
                      "pre_code": "\n                ",
                      "children": []
                    }
                  ]
                },
                {
                  "code": "except ValueError as e",
                  "type": "code",
                  "tree_sitter_type": "except_clause",
                  "pre_code": "\n        ",
                  "children": [
                    {
                      "code": ":",
                      "type": "block_delimiter",
                      "tree_sitter_type": ":",
                      "pre_code": "",
                      "children": []
                    },
                    {
                      "code": "print(f\"Caught exception: {e}\")",
                      "type": "code",
                      "tree_sitter_type": "expression_statement",
                      "pre_code": "\n            ",
                      "children": []
                    }
                  ]
                },
                {
                  "code": "finally",
                  "type": "code",
                  "tree_sitter_type": "finally_clause",
                  "pre_code": "\n        ",
                  "children": [
                    {
                      "code": ":",
                      "type": "block_delimiter",
                      "tree_sitter_type": ":",
                      "pre_code": "",
                      "children": []
                    },
                    {
                      "code": "print(\"Finally block executed\")",
                      "type": "code",
                      "tree_sitter_type": "expression_statement",
                      "pre_code": "\n            ",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "code": "addition = lambda self, a, b: a + b",
          "type": "code",
          "tree_sitter_type": "expression_statement",
          "pre_code": "\n\n    ",
          "children": []
        },
        {
          "code": "class InnerClass",
          "type": "class",
          "tree_sitter_type": "class_definition",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": ":",
              "type": "block_delimiter",
              "tree_sitter_type": ":",
              "pre_code": "",
              "children": []
            },
            {
              "code": "def inner_method(self)",
              "type": "function",
              "tree_sitter_type": "function_definition",
              "pre_code": "\n        ",
              "children": [
                {
                  "code": ":",
                  "type": "block_delimiter",
                  "tree_sitter_type": ":",
                  "pre_code": "",
                  "children": []
                },
                {
                  "code": "print(\"This is an inner class method\")",
                  "type": "code",
                  "tree_sitter_type": "expression_statement",
                  "pre_code": "\n            ",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "code": "@staticmethod\n    def static_example_method()",
          "type": "function",
          "tree_sitter_type": "decorated_definition",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": ":",
              "type": "block_delimiter",
              "tree_sitter_type": ":",
              "pre_code": "",
              "children": []
            },
            {
              "code": "print(\"Static method executed\")",
              "type": "code",
              "tree_sitter_type": "expression_statement",
              "pre_code": "\n        ",
              "children": []
            }
          ]
        },
        {
          "code": "@classmethod\n    def class_example_method(cls)",
          "type": "function",
          "tree_sitter_type": "decorated_definition",
          "pre_code": "\n\n    ",
          "children": [
            {
              "code": ":",
              "type": "block_delimiter",
              "tree_sitter_type": ":",
              "pre_code": "",
              "children": []
            },
            {
              "code": "print(\"Class method executed\")",
              "type": "code",
              "tree_sitter_type": "expression_statement",
              "pre_code": "\n        ",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "code": "",
      "type": "space",
      "tree_sitter_type": null,
      "pre_code": "\n\n",
      "children": []
    }
  ]
}